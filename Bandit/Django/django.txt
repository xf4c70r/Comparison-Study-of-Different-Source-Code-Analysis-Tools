Working... ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 0:00:15
Run started:2024-11-09 04:50:57.551242

Test results:
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b110_try_except_pass.html
   Location: django-3.2.8/django/apps/config.py:113:8
112	            app_module = import_module(entry)
113	        except Exception:
114	            pass
115	        else:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b110_try_except_pass.html
   Location: django-3.2.8/django/apps/config.py:197:12
196	                app_config_class = import_string(entry)
197	            except Exception:
198	                pass
199	        # If both import_module and import_string failed, it means that entry

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'The PASSWORD_RESET_TIMEOUT_DAYS setting is deprecated. Use PASSWORD_RESET_TIMEOUT instead.'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/django/conf/__init__.py:25:4
24	PASSWORD_RESET_TIMEOUT_DAYS_DEPRECATED_MSG = (
25	    'The PASSWORD_RESET_TIMEOUT_DAYS setting is deprecated. Use '
26	    'PASSWORD_RESET_TIMEOUT instead.'
27	)
28	
29	DEFAULT_HASHING_ALGORITHM_DEPRECATED_MSG = (

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/django/conf/global_settings.py:206:22
205	EMAIL_HOST_USER = ''
206	EMAIL_HOST_PASSWORD = ''
207	EMAIL_USE_TLS = False

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/django/conf/global_settings.py:267:13
266	# loudly.
267	SECRET_KEY = ''
268	

--------------------------------------------------
>> Issue: [B613:trojansource] A Python source file contains bidirectional control characters ('\u200f').
   Severity: High   Confidence: Medium
   CWE: CWE-838 (https://cwe.mitre.org/data/definitions/838.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b613_trojansource.html
   Location: django-3.2.8/django/conf/locale/ar/formats.py:10:23
9	MONTH_DAY_FORMAT = 'j F'
10	SHORT_DATE_FORMAT = 'd‏/m‏/Y'
11	# SHORT_DATETIME_FORMAT =
12	# FIRST_DAY_OF_WEEK =

--------------------------------------------------
>> Issue: [B613:trojansource] A Python source file contains bidirectional control characters ('\u200f').
   Severity: High   Confidence: Medium
   CWE: CWE-838 (https://cwe.mitre.org/data/definitions/838.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b613_trojansource.html
   Location: django-3.2.8/django/conf/locale/fa/formats.py:11:32
10	SHORT_DATE_FORMAT = 'Y/n/j'
11	SHORT_DATETIME_FORMAT = 'Y/n/j،‏ G:i'
12	FIRST_DAY_OF_WEEK = 6
13	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/contrib/admin/helpers.py:117:15
116	    def errors(self):
117	        return mark_safe(
118	            '\n'.join(
119	                self.form[f].errors.as_ul() for f in self.fields if f not in self.readonly_fields
120	            ).strip('\n')
121	        )
122	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/contrib/admin/helpers.py:117:15
116	    def errors(self):
117	        return mark_safe(
118	            '\n'.join(
119	                self.form[f].errors.as_ul() for f in self.fields if f not in self.readonly_fields
120	            ).strip('\n')
121	        )
122	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/contrib/admin/helpers.py:145:21
144	        return self.field.label_tag(
145	            contents=mark_safe(contents), attrs=attrs,
146	            label_suffix='' if self.is_checkbox else None,

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/contrib/admin/helpers.py:145:21
144	        return self.field.label_tag(
145	            contents=mark_safe(contents), attrs=attrs,
146	            label_suffix='' if self.is_checkbox else None,

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/contrib/admin/helpers.py:150:15
149	    def errors(self):
150	        return mark_safe(self.field.errors.as_ul())
151	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/contrib/admin/helpers.py:150:15
149	    def errors(self):
150	        return mark_safe(self.field.errors.as_ul())
151	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/contrib/admin/options.py:311:19
310	        try:
311	            return mark_safe(self.empty_value_display)
312	        except AttributeError:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/contrib/admin/options.py:311:19
310	        try:
311	            return mark_safe(self.empty_value_display)
312	        except AttributeError:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/contrib/admin/options.py:313:19
312	        except AttributeError:
313	            return mark_safe(self.admin_site.empty_value_display)
314	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/contrib/admin/options.py:313:19
312	        except AttributeError:
313	            return mark_safe(self.admin_site.empty_value_display)
314	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/contrib/admin/options.py:852:25
851	
852	    @display(description=mark_safe('<input type="checkbox" id="action-toggle">'))
853	    def action_checkbox(self, obj):

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/contrib/admin/templatetags/admin_list.py:41:12
40	            cl.get_query_string({PAGE_VAR: i}),
41	            mark_safe(' class="end"' if i == cl.paginator.num_pages else ''),
42	            i,

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/contrib/admin/templatetags/admin_list.py:41:12
40	            cl.get_query_string({PAGE_VAR: i}),
41	            mark_safe(' class="end"' if i == cl.paginator.num_pages else ''),
42	            i,

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/contrib/admin/templatetags/admin_list.py:93:36
92	                    "text": text,
93	                    "class_attrib": mark_safe(' class="action-checkbox-column"'),
94	                    "sortable": False,

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/contrib/admin/templatetags/admin_list.py:223:20
222	                    row_classes.append('nowrap')
223	        row_class = mark_safe(' class="%s"' % ' '.join(row_classes))
224	        # If list_display_links not defined, add the link tag to the first field

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/contrib/admin/templatetags/admin_list.py:223:20
222	                    row_classes.append('nowrap')
223	        row_class = mark_safe(' class="%s"' % ' '.join(row_classes))
224	        # If list_display_links not defined, add the link tag to the first field

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/contrib/admin/templatetags/admin_list.py:261:30
260	                bf = form[field_name]
261	                result_repr = mark_safe(str(bf.errors) + str(bf))
262	            yield format_html('<td{}>{}</td>', row_class, result_repr)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/contrib/admin/templatetags/admin_list.py:261:30
260	                bf = form[field_name]
261	                result_repr = mark_safe(str(bf.errors) + str(bf))
262	            yield format_html('<td{}>{}</td>', row_class, result_repr)

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/contrib/admin/templatetags/admin_list.py:291:22
290	            if form[cl.model._meta.pk.name].is_hidden:
291	                yield mark_safe(form[cl.model._meta.pk.name])
292	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/contrib/admin/templatetags/admin_list.py:291:22
290	            if form[cl.model._meta.pk.name].is_hidden:
291	                yield mark_safe(form[cl.model._meta.pk.name])
292	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/contrib/admindocs/middleware.py:19:8
18	        """
19	        assert hasattr(request, 'user'), (
20	            "The XView middleware requires authentication middleware to be "
21	            "installed. Edit your MIDDLEWARE setting to insert "
22	            "'django.contrib.auth.middleware.AuthenticationMiddleware'."
23	        )
24	        if request.method == 'HEAD' and (request.META.get('REMOTE_ADDR') in settings.INTERNAL_IPS or

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/contrib/admindocs/utils.py:83:11
82	    )
83	    return mark_safe(parts['fragment'])
84	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/contrib/admindocs/utils.py:83:11
82	    )
83	    return mark_safe(parts['fragment'])
84	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '!'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/django/contrib/auth/hashers.py:19:27
18	
19	UNUSABLE_PASSWORD_PREFIX = '!'  # This will never be a valid encoded hash
20	UNUSABLE_PASSWORD_SUFFIX_LENGTH = 40  # number of random chars to add after UNUSABLE_PASSWORD_PREFIX

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/contrib/auth/hashers.py:272:8
271	    def encode(self, password, salt, iterations=None):
272	        assert password is not None
273	        assert salt and '$' not in salt

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/contrib/auth/hashers.py:273:8
272	        assert password is not None
273	        assert salt and '$' not in salt
274	        iterations = iterations or self.iterations

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/contrib/auth/hashers.py:281:8
280	        algorithm, iterations, salt, hash = encoded.split('$', 3)
281	        assert algorithm == self.algorithm
282	        return {

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/contrib/auth/hashers.py:358:8
357	        algorithm, rest = encoded.split('$', 1)
358	        assert algorithm == self.algorithm
359	        params = argon2.extract_parameters('$' + rest)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/contrib/auth/hashers.py:379:8
378	        algorithm, rest = encoded.split('$', 1)
379	        assert algorithm == self.algorithm
380	        try:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/contrib/auth/hashers.py:459:8
458	        algorithm, empty, algostr, work_factor, data = encoded.split('$', 4)
459	        assert algorithm == self.algorithm
460	        return {

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/contrib/auth/hashers.py:470:8
469	        algorithm, data = encoded.split('$', 1)
470	        assert algorithm == self.algorithm
471	        encoded_2 = self.encode(password, data.encode('ascii'))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/contrib/auth/hashers.py:522:8
521	    def encode(self, password, salt):
522	        assert password is not None
523	        assert salt and '$' not in salt

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/contrib/auth/hashers.py:523:8
522	        assert password is not None
523	        assert salt and '$' not in salt
524	        hash = hashlib.sha1((salt + password).encode()).hexdigest()

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b324_hashlib.html
   Location: django-3.2.8/django/contrib/auth/hashers.py:524:15
523	        assert salt and '$' not in salt
524	        hash = hashlib.sha1((salt + password).encode()).hexdigest()
525	        return "%s$%s$%s" % (self.algorithm, salt, hash)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/contrib/auth/hashers.py:529:8
528	        algorithm, salt, hash = encoded.split('$', 2)
529	        assert algorithm == self.algorithm
530	        return {

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/contrib/auth/hashers.py:564:8
563	    def encode(self, password, salt):
564	        assert password is not None
565	        assert salt and '$' not in salt

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/contrib/auth/hashers.py:565:8
564	        assert password is not None
565	        assert salt and '$' not in salt
566	        hash = hashlib.md5((salt + password).encode()).hexdigest()

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b324_hashlib.html
   Location: django-3.2.8/django/contrib/auth/hashers.py:566:15
565	        assert salt and '$' not in salt
566	        hash = hashlib.md5((salt + password).encode()).hexdigest()
567	        return "%s$%s$%s" % (self.algorithm, salt, hash)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/contrib/auth/hashers.py:571:8
570	        algorithm, salt, hash = encoded.split('$', 2)
571	        assert algorithm == self.algorithm
572	        return {

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/contrib/auth/hashers.py:614:8
613	    def encode(self, password, salt):
614	        assert salt == ''
615	        hash = hashlib.sha1(password.encode()).hexdigest()

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b324_hashlib.html
   Location: django-3.2.8/django/contrib/auth/hashers.py:615:15
614	        assert salt == ''
615	        hash = hashlib.sha1(password.encode()).hexdigest()
616	        return 'sha1$$%s' % hash

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/contrib/auth/hashers.py:619:8
618	    def decode(self, encoded):
619	        assert encoded.startswith('sha1$$')
620	        return {

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/contrib/auth/hashers.py:658:8
657	    def encode(self, password, salt):
658	        assert salt == ''
659	        return hashlib.md5(password.encode()).hexdigest()

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b324_hashlib.html
   Location: django-3.2.8/django/contrib/auth/hashers.py:659:15
658	        assert salt == ''
659	        return hashlib.md5(password.encode()).hexdigest()
660	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/contrib/auth/hashers.py:699:8
698	        crypt = self._load_library()
699	        assert len(salt) == 2
700	        hash = crypt.crypt(password, salt)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/contrib/auth/hashers.py:701:8
700	        hash = crypt.crypt(password, salt)
701	        assert hash is not None  # A platform like OpenBSD with a dummy crypt module.
702	        # we don't need to store the salt, but Django used to do this

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/contrib/auth/hashers.py:707:8
706	        algorithm, salt, hash = encoded.split('$', 2)
707	        assert algorithm == self.algorithm
708	        return {

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/django/contrib/auth/management/commands/createsuperuser.py:21:17
20	
21	PASSWORD_FIELD = 'password'
22	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/contrib/auth/middleware.py:17:8
16	    def process_request(self, request):
17	        assert hasattr(request, 'session'), (
18	            "The Django authentication middleware requires session middleware "
19	            "to be installed. Edit your MIDDLEWARE setting to insert "
20	            "'django.contrib.sessions.middleware.SessionMiddleware' before "
21	            "'django.contrib.auth.middleware.AuthenticationMiddleware'."
22	        )
23	        request.user = SimpleLazyObject(lambda: get_user(request))

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '_password_reset_token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/django/contrib/auth/views.py:239:31
238	
239	INTERNAL_RESET_SESSION_TOKEN = '_password_reset_token'
240	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'set-password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/django/contrib/auth/views.py:251:22
250	    post_reset_login_backend = None
251	    reset_url_token = 'set-password'
252	    success_url = reverse_lazy('password_reset_complete')

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/contrib/auth/views.py:260:8
259	    def dispatch(self, *args, **kwargs):
260	        assert 'uidb64' in kwargs and 'token' in kwargs
261	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/contrib/flatpages/views.py:66:14
65	    # content in the first place).
66	    f.title = mark_safe(f.title)
67	    f.content = mark_safe(f.content)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/contrib/flatpages/views.py:66:14
65	    # content in the first place).
66	    f.title = mark_safe(f.title)
67	    f.content = mark_safe(f.content)

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/contrib/flatpages/views.py:67:16
66	    f.title = mark_safe(f.title)
67	    f.content = mark_safe(f.content)
68	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/contrib/flatpages/views.py:67:16
66	    f.title = mark_safe(f.title)
67	    f.content = mark_safe(f.content)
68	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/contrib/gis/db/backends/postgis/operations.py:180:20
179	                raise ImproperlyConfigured(
180	                    'Cannot determine PostGIS version for database "%s" '
181	                    'using command "SELECT postgis_lib_version()". '
182	                    'GeoDjango requires at least PostGIS version 2.3. '
183	                    'Was the database created from a spatial database '
184	                    'template?' % self.connection.settings_dict['NAME']
185	                )

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b307-eval
   Location: django-3.2.8/django/contrib/gis/serializers/geojson.py:53:31
52	                self._geometry.transform(self._cts[self._geometry.srid])
53	            data["geometry"] = eval(self._geometry.geojson)
54	        else:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/contrib/humanize/templatetags/humanize.py:56:11
55	    # Mark value safe so i18n does not break with <sup> or <sub> see #19988
56	    return mark_safe(value)
57	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/contrib/humanize/templatetags/humanize.py:56:11
55	    # Mark value safe so i18n does not break with <sup> or <sub> see #19988
56	    return mark_safe(value)
57	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/contrib/messages/storage/cookie.py:38:29
37	                if obj[1]:
38	                    obj[3] = mark_safe(obj[3])
39	                return Message(*obj[2:])

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/contrib/messages/storage/cookie.py:38:29
37	                if obj[1]:
38	                    obj[3] = mark_safe(obj[3])
39	                return Message(*obj[2:])

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/contrib/messages/storage/session.py:16:8
15	    def __init__(self, request, *args, **kwargs):
16	        assert hasattr(request, 'session'), "The session-based temporary "\
17	            "message storage requires session middleware to be installed, "\
18	            "and come before the message middleware in the "\
19	            "MIDDLEWARE list."
20	        super().__init__(request, *args, **kwargs)

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle
   Location: django-3.2.8/django/contrib/sessions/serializers.py:1:0
1	import pickle
2	
3	from django.core.signing import JSONSerializer as BaseJSONSerializer

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/django/contrib/sessions/serializers.py:17:15
16	    def loads(self, data):
17	        return pickle.loads(data)
18	

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: django-3.2.8/django/contrib/sitemaps/__init__.py:27:4
26	    params = urlencode({'sitemap': sitemap_full_url})
27	    urlopen('%s?%s' % (ping_url, params))
28	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b324_hashlib.html
   Location: django-3.2.8/django/contrib/staticfiles/storage.py:74:14
73	            return None
74	        md5 = hashlib.md5()
75	        for chunk in content.chunks():

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/contrib/staticfiles/storage.py:179:16
178	                # Otherwise the condition above would have returned prematurely.
179	                assert url_path.startswith(settings.STATIC_URL)
180	                target_name = url_path[len(settings.STATIC_URL):]

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle
   Location: django-3.2.8/django/core/cache/backends/db.py:3:0
2	import base64
3	import pickle
4	from datetime import datetime

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/core/cache/backends/db.py:69:16
68	            cursor.execute(
69	                'SELECT %s, %s, %s FROM %s WHERE %s IN (%s)' % (
70	                    quote_name('cache_key'),
71	                    quote_name('value'),
72	                    quote_name('expires'),
73	                    table,
74	                    quote_name('cache_key'),
75	                    ', '.join(['%s'] * len(key_map)),
76	                ),
77	                list(key_map),

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/django/core/cache/backends/db.py:92:24
91	                value = connection.ops.process_clob(value)
92	                value = pickle.loads(base64.b64decode(value.encode()))
93	                result[key_map.get(key)] = value

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/core/cache/backends/db.py:120:27
119	        with connection.cursor() as cursor:
120	            cursor.execute("SELECT COUNT(*) FROM %s" % table)
121	            num = cursor.fetchone()[0]

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/core/cache/backends/db.py:144:24
143	                    cursor.execute(
144	                        'SELECT %s, %s FROM %s WHERE %s = %%s' % (
145	                            quote_name('cache_key'),
146	                            quote_name('expires'),
147	                            table,
148	                            quote_name('cache_key'),
149	                        ),
150	                        [key]

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/core/cache/backends/db.py:164:28
163	                        cursor.execute(
164	                            'UPDATE %s SET %s = %%s WHERE %s = %%s' % (
165	                                table,
166	                                quote_name('expires'),
167	                                quote_name('cache_key')
168	                            ),
169	                            [exp, key]

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/core/cache/backends/db.py:173:28
172	                        cursor.execute(
173	                            'UPDATE %s SET %s = %%s, %s = %%s WHERE %s = %%s' % (
174	                                table,
175	                                quote_name('value'),
176	                                quote_name('expires'),
177	                                quote_name('cache_key'),
178	                            ),
179	                            [b64encoded, exp, key]

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/core/cache/backends/db.py:183:28
182	                        cursor.execute(
183	                            'INSERT INTO %s (%s, %s, %s) VALUES (%%s, %%s, %%s)' % (
184	                                table,
185	                                quote_name('cache_key'),
186	                                quote_name('value'),
187	                                quote_name('expires'),
188	                            ),
189	                            [key, b64encoded, exp]

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/core/cache/backends/db.py:221:16
220	            cursor.execute(
221	                'DELETE FROM %s WHERE %s IN (%s)' % (
222	                    table,
223	                    quote_name('cache_key'),
224	                    ', '.join(['%s'] * len(keys)),
225	                ),
226	                keys,

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/core/cache/backends/db.py:246:16
245	            cursor.execute(
246	                'SELECT %s FROM %s WHERE %s = %%s and expires > %%s' % (
247	                    quote_name('cache_key'),
248	                    quote_name(self._table),
249	                    quote_name('cache_key'),
250	                ),
251	                [key, connection.ops.adapt_datetimefield_value(now)]

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/core/cache/backends/db.py:261:27
260	            table = connection.ops.quote_name(self._table)
261	            cursor.execute("DELETE FROM %s WHERE expires < %%s" % table,
262	                           [connection.ops.adapt_datetimefield_value(now)])

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/core/cache/backends/db.py:263:27
262	                           [connection.ops.adapt_datetimefield_value(now)])
263	            cursor.execute("SELECT COUNT(*) FROM %s" % table)
264	            num = cursor.fetchone()[0]

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/core/cache/backends/db.py:273:24
272	                    cursor.execute(
273	                        'DELETE FROM %s WHERE cache_key < %%s' % table,
274	                        [last_cache_key[0]],

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/core/cache/backends/db.py:282:27
281	        with connection.cursor() as cursor:
282	            cursor.execute('DELETE FROM %s' % table)

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle
   Location: django-3.2.8/django/core/cache/backends/filebased.py:5:0
4	import os
5	import pickle
6	import random

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/django/core/cache/backends/filebased.py:36:27
35	                if not self._is_expired(f):
36	                    return pickle.loads(zlib.decompress(f.read()))
37	        except FileNotFoundError:

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/django/core/cache/backends/filebased.py:69:41
68	                    else:
69	                        previous_value = pickle.loads(zlib.decompress(f.read()))
70	                        f.seek(0)

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b324_hashlib.html
   Location: django-3.2.8/django/core/cache/backends/filebased.py:133:13
132	        return os.path.join(self._dir, ''.join(
133	            [hashlib.md5(key.encode()).hexdigest(), self.cache_suffix]))
134	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/django/core/cache/backends/filebased.py:147:18
146	        try:
147	            exp = pickle.load(f)
148	        except EOFError:

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle
   Location: django-3.2.8/django/core/cache/backends/locmem.py:2:0
1	"Thread-safe in-memory cache backend."
2	import pickle
3	import time

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/django/core/cache/backends/locmem.py:44:15
43	            self._cache.move_to_end(key, last=False)
44	        return pickle.loads(pickled)
45	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/django/core/cache/backends/locmem.py:77:20
76	            pickled = self._cache[key]
77	            value = pickle.loads(pickled)
78	            new_value = value + delta

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle
   Location: django-3.2.8/django/core/cache/backends/memcached.py:3:0
2	
3	import pickle
4	import re

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b324_hashlib.html
   Location: django-3.2.8/django/core/cache/utils.py:7:13
6	def make_template_fragment_key(fragment_name, vary_on=None):
7	    hasher = hashlib.md5()
8	    if vary_on is not None:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/core/checks/messages.py:12:8
11	    def __init__(self, level, msg, hint=None, obj=None, id=None):
12	        assert isinstance(level, int), "The first argument should be level."
13	        self.level = level

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/core/checks/registry.py:77:12
76	            new_errors = check(app_configs=app_configs, databases=databases)
77	            assert is_iterable(new_errors), (
78	                "The function %r did not return a list. All functions registered "
79	                "with the checks registry must return a list." % check)
80	            errors.extend(new_errors)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'django-insecure-'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/django/core/checks/security/base.py:12:29
11	
12	SECRET_KEY_INSECURE_PREFIX = 'django-insecure-'
13	SECRET_KEY_MIN_LENGTH = 50

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/core/files/storage.py:304:8
303	    def delete(self, name):
304	        assert name, "The name argument is not allowed to be empty."
305	        name = self.path(name)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/core/mail/message.py:299:12
298	        if isinstance(filename, MIMEBase):
299	            assert content is None
300	            assert mimetype is None

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/core/mail/message.py:300:12
299	            assert content is None
300	            assert mimetype is None
301	            self.attachments.append(filename)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/core/mail/message.py:303:12
302	        else:
303	            assert content is not None
304	            mimetype = mimetype or mimetypes.guess_type(filename)[0] or DEFAULT_ATTACHMENT_MIME_TYPE

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/core/mail/message.py:431:8
430	        """Attach an alternative content representation."""
431	        assert content is not None
432	        assert mimetype is not None

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/core/mail/message.py:432:8
431	        assert content is not None
432	        assert mimetype is not None
433	        self.alternatives.append((content, mimetype))

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: django-3.2.8/django/core/management/commands/dbshell.py:1:0
1	import subprocess
2	
3	from django.core.management.base import BaseCommand, CommandError

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b102_exec_used.html
   Location: django-3.2.8/django/core/management/commands/shell.py:78:20
77	                try:
78	                    exec(compile(pythonrc_code, pythonrc, 'exec'), imported_objects)
79	                except Exception:

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b102_exec_used.html
   Location: django-3.2.8/django/core/management/commands/shell.py:87:12
86	        if options['command']:
87	            exec(options['command'], globals())
88	            return

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b102_exec_used.html
   Location: django-3.2.8/django/core/management/commands/shell.py:93:12
92	        if sys.platform != 'win32' and not sys.stdin.isatty() and select.select([sys.stdin], [], [], 0)[0]:
93	            exec(sys.stdin.read(), globals())
94	            return

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: django-3.2.8/django/core/management/templates.py:265:29
264	        try:
265	            the_path, info = urlretrieve(url, os.path.join(tempdir, filename))
266	        except OSError as e:

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: django-3.2.8/django/core/management/utils.py:4:0
3	from pathlib import Path
4	from subprocess import PIPE, run
5	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html
   Location: django-3.2.8/django/core/management/utils.py:20:12
19	    try:
20	        p = run(args, stdout=PIPE, stderr=PIPE, close_fds=os.name != 'nt')
21	    except OSError as err:

--------------------------------------------------
>> Issue: [B409:blacklist] Using pulldom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace pulldom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b409-import-xml-pulldom
   Location: django-3.2.8/django/core/serializers/xml_serializer.py:5:0
4	import json
5	from xml.dom import pulldom
6	from xml.sax import handler

--------------------------------------------------
>> Issue: [B406:blacklist] Using handler to parse untrusted XML data is known to be vulnerable to XML attacks. Replace handler with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b406-import-xml-sax
   Location: django-3.2.8/django/core/serializers/xml_serializer.py:6:0
5	from xml.dom import pulldom
6	from xml.sax import handler
7	from xml.sax.expatreader import ExpatParser as _ExpatParser

--------------------------------------------------
>> Issue: [B406:blacklist] Using ExpatParser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace ExpatParser with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b406-import-xml-sax
   Location: django-3.2.8/django/core/serializers/xml_serializer.py:7:0
6	from xml.sax import handler
7	from xml.sax.expatreader import ExpatParser as _ExpatParser
8	

--------------------------------------------------
>> Issue: [B319:blacklist] Using xml.dom.pulldom.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.pulldom.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-pulldom
   Location: django-3.2.8/django/core/serializers/xml_serializer.py:165:28
164	        self.handle_forward_references = options.pop('handle_forward_references', False)
165	        self.event_stream = pulldom.parse(self.stream, self._make_parser())
166	        self.db = using

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: django-3.2.8/django/db/backends/base/client.py:2:0
1	import os
2	import subprocess
3	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html
   Location: django-3.2.8/django/db/backends/base/client.py:25:8
24	        env = {**os.environ, **env} if env else None
25	        subprocess.run(args, env=env, check=True)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/db/backends/mysql/base.py:315:24
314	                    cursor.execute(
315	                        """
316	                        SELECT REFERRING.`%s`, REFERRING.`%s` FROM `%s` as REFERRING
317	                        LEFT JOIN `%s` as REFERRED
318	                        ON (REFERRING.`%s` = REFERRED.`%s`)
319	                        WHERE REFERRING.`%s` IS NOT NULL AND REFERRED.`%s` IS NULL
320	                        """ % (
321	                            primary_key_column_name, column_name, table_name,
322	                            referenced_table_name, column_name, referenced_column_name,
323	                            column_name, referenced_column_name,
324	                        )
325	                    )

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: django-3.2.8/django/db/backends/mysql/creation.py:2:0
1	import os
2	import subprocess
3	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html
   Location: django-3.2.8/django/db/backends/mysql/creation.py:65:13
64	
65	        with subprocess.Popen(dump_cmd, stdout=subprocess.PIPE, env=dump_env) as dump_proc:
66	            with subprocess.Popen(load_cmd, stdin=dump_proc.stdout, stdout=subprocess.DEVNULL, env=load_env):

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html
   Location: django-3.2.8/django/db/backends/mysql/creation.py:66:17
65	        with subprocess.Popen(dump_cmd, stdout=subprocess.PIPE, env=dump_env) as dump_proc:
66	            with subprocess.Popen(load_cmd, stdin=dump_proc.stdout, stdout=subprocess.DEVNULL, env=load_env):
67	                # Allow dump_proc to receive a SIGPIPE if the load process exits.

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/db/backends/mysql/introspection.py:122:23
121	
122	        cursor.execute("SELECT * FROM %s LIMIT 1" % self.connection.ops.quote_name(table_name))
123	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/db/backends/mysql/schema.py:104:25
103	            effective_default = self.effective_default(field)
104	            self.execute('UPDATE %(table)s SET %(column)s = %%s' % {
105	                'table': self.quote_name(model._meta.db_table),
106	                'column': self.quote_name(field.column),
107	            }, [effective_default])
108	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/db/backends/oracle/base.py:261:31
260	            try:
261	                cursor.execute("SELECT 1 FROM DUAL WHERE DUMMY %s"
262	                               % self._standard_operators['contains'],
263	                               ['X'])

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'ALTER USER %(user)s IDENTIFIED BY "%(password)s"'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/django/db/backends/oracle/creation.py:242:27
241	        if not success and self._test_settings_get('PASSWORD') is None:
242	            set_password = 'ALTER USER %(user)s IDENTIFIED BY "%(password)s"'
243	            self._execute_statements(cursor, [set_password], parameters, verbosity)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/db/backends/oracle/introspection.py:135:23
134	        self.cache_bust_counter += 1
135	        cursor.execute("SELECT * FROM {} WHERE ROWNUM < 2 AND {} > 0".format(
136	            self.connection.ops.quote_name(table_name),

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/db/backends/oracle/operations.py:613:25
612	                select.append(placeholder)
613	            query.append('SELECT %s FROM DUAL' % ', '.join(select))
614	        # Bulk insert to tables with Oracle identity columns causes Oracle to

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/db/backends/oracle/operations.py:617:15
616	        # UNION operator. To prevent incorrect SQL, move UNION to a subquery.
617	        return 'SELECT * FROM (%s)' % ' UNION ALL '.join(query)
618	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/db/backends/oracle/schema.py:48:21
47	        # Clean up manually created sequence.
48	        self.execute("""
49	            DECLARE
50	                i INTEGER;
51	            BEGIN
52	                SELECT COUNT(1) INTO i FROM USER_SEQUENCES
53	                    WHERE SEQUENCE_NAME = '%(sq_name)s';
54	                IF i = 1 THEN
55	                    EXECUTE IMMEDIATE 'DROP SEQUENCE "%(sq_name)s"';
56	                END IF;
57	            END;
58	        /""" % {'sq_name': self.connection.ops._get_no_autofield_sequence_name(model._meta.db_table)})
59	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/db/backends/oracle/schema.py:118:21
117	        # Transfer values across
118	        self.execute("UPDATE %s set %s=%s" % (
119	            self.quote_name(model._meta.db_table),
120	            self.quote_name(new_temp_field.column),
121	            new_value,
122	        ))
123	        # Drop the old field

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/backends/postgresql/creation.py:24:8
23	        test_settings = self.connection.settings_dict['TEST']
24	        assert test_settings['COLLATION'] is None, (
25	            "PostgreSQL does not support collation setting at database creation time."
26	        )
27	        return self._get_database_create_suffix(

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/db/backends/postgresql/introspection.py:49:23
48	        """Return a list of table and view names in the current database."""
49	        cursor.execute("""
50	            SELECT c.relname,
51	            CASE WHEN {} THEN 'p' WHEN c.relkind IN ('m', 'v') THEN 'v' ELSE 't' END
52	            FROM pg_catalog.pg_class c
53	            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
54	            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
55	                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
56	                AND pg_catalog.pg_table_is_visible(c.oid)
57	        """.format('c.relispartition' if self.connection.features.supports_table_partitions else 'FALSE'))
58	        return [TableInfo(*row) for row in cursor.fetchall() if row[0] not in self.ignored_tables]

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/db/backends/postgresql/introspection.py:86:23
85	        field_map = {line[0]: line[1:] for line in cursor.fetchall()}
86	        cursor.execute("SELECT * FROM %s LIMIT 1" % self.connection.ops.quote_name(table_name))
87	        return [

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b324_hashlib.html
   Location: django-3.2.8/django/db/backends/sqlite3/base.py:243:69
242	        create_deterministic_function('LPAD', 3, _sqlite_lpad)
243	        create_deterministic_function('MD5', 1, none_guard(lambda x: hashlib.md5(x.encode()).hexdigest()))
244	        create_deterministic_function('MOD', 2, none_guard(math.fmod))

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b324_hashlib.html
   Location: django-3.2.8/django/db/backends/sqlite3/base.py:251:70
250	        create_deterministic_function('RPAD', 3, _sqlite_rpad)
251	        create_deterministic_function('SHA1', 1, none_guard(lambda x: hashlib.sha1(x.encode()).hexdigest()))
252	        create_deterministic_function('SHA224', 1, none_guard(lambda x: hashlib.sha224(x.encode()).hexdigest()))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/db/backends/sqlite3/base.py:346:24
345	                    primary_key_value, bad_value = cursor.execute(
346	                        'SELECT %s, %s FROM %s WHERE rowid = %%s' % (
347	                            self.ops.quote_name(primary_key_column_name),
348	                            self.ops.quote_name(column_name),
349	                            self.ops.quote_name(table_name),
350	                        ),
351	                        (rowid,),

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/db/backends/sqlite3/base.py:372:28
371	                        cursor.execute(
372	                            """
373	                            SELECT REFERRING.`%s`, REFERRING.`%s` FROM `%s` as REFERRING
374	                            LEFT JOIN `%s` as REFERRED
375	                            ON (REFERRING.`%s` = REFERRED.`%s`)
376	                            WHERE REFERRING.`%s` IS NOT NULL AND REFERRED.`%s` IS NULL
377	                            """
378	                            % (
379	                                primary_key_column_name, column_name, table_name,
380	                                referenced_table_name, column_name, referenced_column_name,
381	                                column_name, referenced_column_name,
382	                            )
383	                        )

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/db/backends/sqlite3/introspection.py:370:16
369	            table_schema = cursor.execute(
370	                "SELECT sql FROM sqlite_master WHERE type='table' and name=%s" % (
371	                    self.connection.ops.quote_name(table_name),
372	                )
373	            ).fetchone()[0]

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/db/backends/sqlite3/introspection.py:388:16
387	            cursor.execute(
388	                "SELECT sql FROM sqlite_master "
389	                "WHERE type='index' AND name=%s" % self.connection.ops.quote_name(index)
390	            )

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'COLLATE'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/django/db/backends/sqlite3/introspection.py:464:28
463	            for index, token in enumerate(tokens):
464	                if token == 'COLLATE':
465	                    collation = tokens[index + 1]

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/db/backends/sqlite3/schema.py:285:21
284	        # Copy data from the old table into the new table
285	        self.execute("INSERT INTO %s (%s) SELECT %s FROM %s" % (
286	            self.quote_name(new_model._meta.db_table),
287	            ', '.join(self.quote_name(x) for x in mapping),
288	            ', '.join(mapping.values()),
289	            self.quote_name(model._meta.db_table),
290	        ))
291	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/db/backends/sqlite3/schema.py:404:21
403	        # Copy the data across
404	        self.execute("INSERT INTO %s (%s) SELECT %s FROM %s" % (
405	            self.quote_name(new_field.remote_field.through._meta.db_table),
406	            ', '.join([
407	                "id",
408	                new_field.m2m_column_name(),
409	                new_field.m2m_reverse_name(),
410	            ]),
411	            ', '.join([
412	                "id",
413	                old_field.m2m_column_name(),
414	                old_field.m2m_reverse_name(),
415	            ]),
416	            self.quote_name(old_field.remote_field.through._meta.db_table),
417	        ))
418	        # Delete the old through table

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b324_hashlib.html
   Location: django-3.2.8/django/db/backends/utils.py:218:8
217	    """
218	    h = hashlib.md5()
219	    for arg in args:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/migrations/autodetector.py:692:12
691	            model_state = self.to_state.models[app_label, model_name]
692	            assert model_state.options.get("proxy")
693	            # Depend on the deletion of any possible non-proxy version of us

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/migrations/autodetector.py:810:12
809	            model_state = self.from_state.models[app_label, model_name]
810	            assert model_state.options.get("proxy")
811	            self.add_operation(

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/migrations/graph.py:89:8
88	    def add_node(self, key, migration):
89	        assert key not in self.node_map
90	        node = Node(key)

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b307-eval
   Location: django-3.2.8/django/db/migrations/questioner.py:139:27
138	                try:
139	                    return eval(code, {}, {'datetime': datetime, 'timezone': timezone})
140	                except (SyntaxError, NameError) as e:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/base.py:742:8
741	        using = using or router.db_for_write(self.__class__, instance=self)
742	        assert not (force_insert and (force_update or update_fields))
743	        assert update_fields is None or update_fields

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/base.py:743:8
742	        assert not (force_insert and (force_update or update_fields))
743	        assert update_fields is None or update_fields
744	        cls = origin = self.__class__

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/base.py:947:8
946	        using = using or router.db_for_write(self.__class__, instance=self)
947	        assert self.pk is not None, (
948	            "%s object can't be deleted because its %s attribute is set to None." %
949	            (self._meta.object_name, self._meta.pk.attname)
950	        )
951	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/expressions.py:181:8
180	    def set_source_expressions(self, exprs):
181	        assert not exprs
182	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/fields/__init__.py:2491:8
2490	    def contribute_to_class(self, cls, name, **kwargs):
2491	        assert not cls._meta.auto_field, (
2492	            "Model %s can't have more than one auto-generated field."
2493	            % cls._meta.label
2494	        )
2495	        super().contribute_to_class(cls, name, **kwargs)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/fields/related.py:800:12
799	        except AttributeError:
800	            assert isinstance(to, str), (
801	                "%s(%r) is invalid. First parameter to ForeignKey must be "
802	                "either a model, a model name, or the string %r" % (
803	                    self.__class__.__name__, to,
804	                    RECURSIVE_RELATIONSHIP_CONSTANT,
805	                )
806	            )
807	        else:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/fields/related.py:1151:12
1150	        except AttributeError:
1151	            assert isinstance(to, str), (
1152	                "%s(%r) is invalid. First parameter to ManyToManyField must be "
1153	                "either a model, a model name, or the string %r" %
1154	                (self.__class__.__name__, to, RECURSIVE_RELATIONSHIP_CONSTANT)
1155	            )
1156	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/fields/related.py:1161:12
1160	        if through is not None:
1161	            assert db_table is None, (
1162	                "Cannot specify a db_table if an intermediary model is used."
1163	            )
1164	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/fields/related.py:1256:12
1255	        else:
1256	            assert from_model is not None, (
1257	                "ManyToManyField with intermediate "
1258	                "tables cannot be checked if you don't pass the model "
1259	                "where the field is attached to."
1260	            )
1261	            # Set some useful local variables

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/fields/related.py:1375:16
1374	            else:
1375	                assert from_model is not None, (
1376	                    "ManyToManyField with intermediate "
1377	                    "tables cannot be checked if you don't pass the model "
1378	                    "where the field is attached to."
1379	                )
1380	

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html
   Location: django-3.2.8/django/db/models/fields/related_descriptors.py:928:23
927	            qn = connection.ops.quote_name
928	            queryset = queryset.extra(select={
929	                '_prefetch_related_val_%s' % f.attname:
930	                '%s.%s' % (qn(join_table), qn(f.column)) for f in fk.local_related_fields})
931	            return (

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/fields/related_lookups.py:123:12
122	        if isinstance(self.lhs, MultiColSource):
123	            assert self.rhs_is_direct_value()
124	            self.rhs = get_normalized_value(self.rhs, self.lhs)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/functions/datetime.py:62:12
61	            # assert should never be hit.
62	            assert False, "Tried to Extract from an invalid type."
63	        return sql, params

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/functions/datetime.py:215:8
214	        # DateTimeField is a subclass of DateField so this works for both.
215	        assert isinstance(field, (DateField, TimeField)), (
216	            "%r isn't a DateField, TimeField, or DateTimeField." % field.name
217	        )
218	        # If self.output_field was None, then accessing the field will trigger

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/indexes.py:164:8
163	        )
164	        assert len(self.name) <= self.max_name_length, (
165	            'Index too long for multiple database support. Is self.suffix '
166	            'longer than 3 characters?'
167	        )
168	        if self.name[0] == '_' or self.name[0].isdigit():

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/query.py:294:8
293	            )
294	        assert ((not isinstance(k, slice) and (k >= 0)) or
295	                (isinstance(k, slice) and (k.start is None or k.start >= 0) and
296	                 (k.stop is None or k.stop >= 0))), \
297	            "Negative indexing is not supported."
298	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/query.py:483:8
482	        # trickier so it's not done yet.
483	        assert batch_size is None or batch_size > 0
484	        # Check that the parents share the same concrete model with the our

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/query.py:518:20
517	                if connection.features.can_return_rows_from_bulk_insert and not ignore_conflicts:
518	                    assert len(returned_columns) == len(objs_without_pk)
519	                for obj_without_pk, results in zip(objs_without_pk, returned_columns):

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/query.py:658:8
657	
658	        assert not self.query.is_sliced, \
659	            "Cannot change a query once a slice has been taken."
660	        obj = self._chain()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/query.py:687:8
686	        """
687	        assert not self.query.is_sliced, \
688	            "Cannot use 'limit' or 'offset' with in_bulk"
689	        opts = self.model._meta

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/query.py:724:8
723	        self._not_support_combined_queries('delete')
724	        assert not self.query.is_sliced, \
725	            "Cannot use 'limit' or 'offset' with delete."
726	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/query.py:775:8
774	        self._not_support_combined_queries('update')
775	        assert not self.query.is_sliced, \
776	            "Cannot update a query once a slice has been taken."
777	        self._for_write = True

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/query.py:795:8
794	        """
795	        assert not self.query.is_sliced, \
796	            "Cannot update a query once a slice has been taken."
797	        query = self.query.chain(sql.UpdateQuery)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/query.py:880:8
879	        """
880	        assert kind in ('year', 'month', 'week', 'day'), \
881	            "'kind' must be one of 'year', 'month', 'week', or 'day'."
882	        assert order in ('ASC', 'DESC'), \

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/query.py:882:8
881	            "'kind' must be one of 'year', 'month', 'week', or 'day'."
882	        assert order in ('ASC', 'DESC'), \
883	            "'order' must be either 'ASC' or 'DESC'."
884	        return self.annotate(

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/query.py:896:8
895	        """
896	        assert kind in ('year', 'month', 'week', 'day', 'hour', 'minute', 'second'), \
897	            "'kind' must be one of 'year', 'month', 'week', 'day', 'hour', 'minute', or 'second'."
898	        assert order in ('ASC', 'DESC'), \

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/query.py:898:8
897	            "'kind' must be one of 'year', 'month', 'week', 'day', 'hour', 'minute', or 'second'."
898	        assert order in ('ASC', 'DESC'), \
899	            "'order' must be either 'ASC' or 'DESC'."
900	        if settings.USE_TZ:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/query.py:953:12
952	        if args or kwargs:
953	            assert not self.query.is_sliced, \
954	                "Cannot filter a query once a slice has been taken."
955	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/query.py:1145:8
1144	        """Return a new QuerySet instance with the ordering changed."""
1145	        assert not self.query.is_sliced, \
1146	            "Cannot reorder a query once a slice has been taken."
1147	        obj = self._chain()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/query.py:1157:8
1156	        self._not_support_combined_queries('distinct')
1157	        assert not self.query.is_sliced, \
1158	            "Cannot create distinct fields once a slice has been taken."
1159	        obj = self._chain()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/query.py:1167:8
1166	        self._not_support_combined_queries('extra')
1167	        assert not self.query.is_sliced, \
1168	            "Cannot change a query once a slice has been taken"
1169	        clone = self._chain()

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b611_django_rawsql_used.html
   Location: django-3.2.8/django/db/models/sql/compiler.py:223:27
222	            annotations[alias] = select_idx
223	            select.append((RawSQL(sql, params), alias))
224	            select_idx += 1

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/sql/compiler.py:225:8
224	            select_idx += 1
225	        assert not (self.query.select and self.query.default_cols)
226	        if self.query.default_cols:

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b611_django_rawsql_used.html
   Location: django-3.2.8/django/db/models/sql/compiler.py:343:24
342	                    OrderBy(
343	                        RawSQL('%s.%s' % (self.quote_name_unless_alias(table), col), []),
344	                        descending=descending

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b611_django_rawsql_used.html
   Location: django-3.2.8/django/db/models/sql/compiler.py:362:32
361	                    order_by.append((
362	                        OrderBy(RawSQL(*self.query.extra[col]), descending=descending),
363	                        False))

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b611_django_rawsql_used.html
   Location: django-3.2.8/django/db/models/sql/compiler.py:366:41
365	                    order_by.append((
366	                        OrderBy(Ref(col, RawSQL(*self.query.extra[col])), descending=descending),
367	                        True))

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b611_django_rawsql_used.html
   Location: django-3.2.8/django/db/models/sql/compiler.py:387:57
386	                    if src == sel_expr:
387	                        resolved.set_source_expressions([RawSQL('%d' % (idx + 1), ())])
388	                        break

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b611_django_rawsql_used.html
   Location: django-3.2.8/django/db/models/sql/compiler.py:399:53
398	                    self.query.add_select_col(resolved, col_name)
399	                    resolved.set_source_expressions([RawSQL(f'{order_by_idx}', ())])
400	            sql, params = self.compile(resolved)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/db/models/sql/compiler.py:478:35
477	                    if not features.supports_parentheses_in_compound:
478	                        part_sql = 'SELECT * FROM ({})'.format(part_sql)
479	                    # Add parentheses when combining with compound query if not

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/db/models/sql/compiler.py:652:23
651	                        sub_params.extend(subparams)
652	                return 'SELECT %s FROM (%s) subquery' % (
653	                    ', '.join(sub_selects),
654	                    ' '.join(result),
655	                ), tuple(sub_params + params)
656	

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b611_django_rawsql_used.html
   Location: django-3.2.8/django/db/models/sql/compiler.py:1222:16
1221	            self.query.where.add(
1222	                RawSQL('%s = %s' % (lhs_sql, rhs), lhs_params), 'AND')
1223	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/sql/compiler.py:1409:8
1408	    def execute_sql(self, returning_fields=None):
1409	        assert not (
1410	            returning_fields and len(self.query.objs) != 1 and
1411	            not self.connection.features.can_return_rows_from_bulk_insert
1412	        )
1413	        self.returning_fields = returning_fields

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/sql/compiler.py:1422:16
1421	            if self.connection.features.can_return_columns_from_insert:
1422	                assert len(self.query.objs) == 1
1423	                return [self.connection.ops.fetch_returned_insert_columns(cursor, self.returning_params)]

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/db/models/sql/compiler.py:1456:12
1455	        result = [
1456	            'DELETE FROM %s' % self.quote_name_unless_alias(query.base_table)
1457	        ]

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b611_django_rawsql_used.html
   Location: django-3.2.8/django/db/models/sql/compiler.py:1483:21
1482	            sql, params = innerq.get_compiler(connection=self.connection).as_sql()
1483	            innerq = RawSQL('SELECT * FROM (%s) subquery' % sql, params)
1484	        outerq.add_q(Q(pk__in=innerq))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/db/models/sql/compiler.py:1483:28
1482	            sql, params = innerq.get_compiler(connection=self.connection).as_sql()
1483	            innerq = RawSQL('SELECT * FROM (%s) subquery' % sql, params)
1484	        outerq.add_q(Q(pk__in=innerq))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/django/db/models/sql/compiler.py:1635:14
1634	        ).as_sql(with_col_aliases=True)
1635	        sql = 'SELECT %s FROM (%s) subquery' % (sql, inner_query_sql)
1636	        params = params + inner_query_params

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/sql/query.py:571:8
570	        """
571	        assert self.model == rhs.model, \
572	            "Cannot combine queries on two different base models."
573	        assert not self.is_sliced, \

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/sql/query.py:573:8
572	            "Cannot combine queries on two different base models."
573	        assert not self.is_sliced, \
574	            "Cannot combine queries once a slice has been taken."
575	        assert self.distinct == rhs.distinct, \

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/sql/query.py:575:8
574	            "Cannot combine queries once a slice has been taken."
575	        assert self.distinct == rhs.distinct, \
576	            "Cannot combine a unique query with a non-unique query."
577	        assert self.distinct_fields == rhs.distinct_fields, \

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/sql/query.py:577:8
576	            "Cannot combine a unique query with a non-unique query."
577	        assert self.distinct_fields == rhs.distinct_fields, \
578	            "Cannot combine queries with different distinct fields."
579	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/sql/query.py:806:12
805	            # Only the first alias (skipped above) should have None join_type
806	            assert self.alias_map[alias].join_type is not None
807	            parent_alias = self.alias_map[alias].parent_alias

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/sql/query.py:854:8
853	        """
854	        assert set(change_map).isdisjoint(change_map.values())
855	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/sql/where.py:127:8
126	    def set_source_expressions(self, children):
127	        assert len(children) == len(self.children)
128	        self.children = children

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/db/models/utils.py:19:8
18	            model_tuple = model._meta.app_label, model._meta.model_name
19	        assert len(model_tuple) == 2
20	        return model_tuple

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/dispatch/dispatcher.py:93:12
92	        if settings.configured and settings.DEBUG:
93	            assert callable(receiver), "Signal receivers must be callable."
94	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/forms/boundfield.py:168:15
167	            contents = conditional_escape(contents)
168	        return mark_safe(contents)
169	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/forms/boundfield.py:168:15
167	            contents = conditional_escape(contents)
168	        return mark_safe(contents)
169	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/forms/forms.py:266:15
265	                output.append(str_hidden)
266	        return mark_safe('\n'.join(output))
267	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/forms/forms.py:266:15
265	                output.append(str_hidden)
266	        return mark_safe('\n'.join(output))
267	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/forms/formsets.py:447:15
446	        forms = ' '.join(form.as_table() for form in self)
447	        return mark_safe(str(self.management_form) + '\n' + forms)
448	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/forms/formsets.py:447:15
446	        forms = ' '.join(form.as_table() for form in self)
447	        return mark_safe(str(self.management_form) + '\n' + forms)
448	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/forms/formsets.py:452:15
451	        forms = ' '.join(form.as_p() for form in self)
452	        return mark_safe(str(self.management_form) + '\n' + forms)
453	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/forms/formsets.py:452:15
451	        forms = ' '.join(form.as_p() for form in self)
452	        return mark_safe(str(self.management_form) + '\n' + forms)
453	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/forms/formsets.py:457:15
456	        forms = ' '.join(form.as_ul() for form in self)
457	        return mark_safe(str(self.management_form) + '\n' + forms)
458	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/forms/formsets.py:457:15
456	        forms = ' '.join(form.as_ul() for form in self)
457	        return mark_safe(str(self.management_form) + '\n' + forms)
458	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/forms/widgets.py:77:15
76	    def render(self):
77	        return mark_safe('\n'.join(chain.from_iterable(getattr(self, 'render_' + name)() for name in MEDIA_TYPES)))
78	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/forms/widgets.py:77:15
76	    def render(self):
77	        return mark_safe('\n'.join(chain.from_iterable(getattr(self, 'render_' + name)() for name in MEDIA_TYPES)))
78	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/forms/widgets.py:252:15
251	            renderer = get_default_renderer()
252	        return mark_safe(renderer.render(template_name, context))
253	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/forms/widgets.py:252:15
251	            renderer = get_default_renderer()
252	        return mark_safe(renderer.render(template_name, context))
253	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/http/multipartparser.py:377:16
376	            while remaining != 0:
377	                assert remaining > 0, 'remaining bytes to read should never go negative'
378	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b110_try_except_pass.html
   Location: django-3.2.8/django/http/response.py:287:12
286	                closer()
287	            except Exception:
288	                pass
289	        # Free resources that were still referenced.

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b110_try_except_pass.html
   Location: django-3.2.8/django/http/response.py:361:16
360	                    value.close()
361	                except Exception:
362	                    pass
363	        else:

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'CSRF token missing or incorrect.'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/django/middleware/csrf.py:26:19
25	REASON_NO_CSRF_COOKIE = "CSRF cookie not set."
26	REASON_BAD_TOKEN = "CSRF token missing or incorrect."
27	REASON_MALFORMED_REFERER = "Referer checking failed - Referer is malformed."

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/django/middleware/csrf.py:294:33
293	            # Check non-cookie token for match.
294	            request_csrf_token = ""
295	            if request.method == "POST":

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/django/middleware/csrf.py:306:37
305	
306	            if request_csrf_token == "":
307	                # Fall back to X-CSRFToken, to make things easier for AJAX,

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/template/base.py:690:36
689	                if not lookup:
690	                    arg_vals.append(mark_safe(arg))
691	                else:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/template/base.py:690:36
689	                if not lookup:
690	                    arg_vals.append(mark_safe(arg))
691	                else:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/template/base.py:700:22
699	            if getattr(func, 'is_safe', False) and isinstance(obj, SafeData):
700	                obj = mark_safe(new_obj)
701	            else:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/template/base.py:700:22
699	            if getattr(func, 'is_safe', False) and isinstance(obj, SafeData):
700	                obj = mark_safe(new_obj)
701	            else:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/template/base.py:782:31
781	            try:
782	                self.literal = mark_safe(unescape_string_literal(var))
783	            except ValueError:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/template/base.py:782:31
781	            try:
782	                self.literal = mark_safe(unescape_string_literal(var))
783	            except ValueError:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/template/base.py:803:20
802	            msgid = value.replace('%', '%%')
803	            msgid = mark_safe(msgid) if is_safe else msgid
804	            if self.message_context:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/template/base.py:803:20
802	            msgid = value.replace('%', '%%')
803	            msgid = mark_safe(msgid) if is_safe else msgid
804	            if self.message_context:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/template/base.py:942:15
941	            bits.append(str(bit))
942	        return mark_safe(''.join(bits))
943	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/template/base.py:942:15
941	            bits.append(str(bit))
942	        return mark_safe(''.join(bits))
943	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/template/defaultfilters.py:45:19
44	                getattr(_dec._decorated_function, 'is_safe', False)):
45	            return mark_safe(func(*args, **kwargs))
46	        return func(*args, **kwargs)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/template/defaultfilters.py:45:19
44	                getattr(_dec._decorated_function, 'is_safe', False)):
45	            return mark_safe(func(*args, **kwargs))
46	        return func(*args, **kwargs)

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/template/defaultfilters.py:155:15
154	    if not m and p < 0:
155	        return mark_safe(
156	            formats.number_format('%d' % (int(d)), 0, force_grouping=force_grouping),
157	        )
158	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/template/defaultfilters.py:155:15
154	    if not m and p < 0:
155	        return mark_safe(
156	            formats.number_format('%d' % (int(d)), 0, force_grouping=force_grouping),
157	        )
158	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/template/defaultfilters.py:177:11
176	    number = ''.join(reversed(digits))
177	    return mark_safe(
178	        formats.number_format(number, abs(p), force_grouping=force_grouping),
179	    )
180	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/template/defaultfilters.py:177:11
176	    number = ''.join(reversed(digits))
177	    return mark_safe(
178	        formats.number_format(number, abs(p), force_grouping=force_grouping),
179	    )
180	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/template/defaultfilters.py:203:11
202	            lines[i] = ("%0" + width + "d. %s") % (i + 1, escape(line))
203	    return mark_safe('\n'.join(lines))
204	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/template/defaultfilters.py:203:11
202	            lines[i] = ("%0" + width + "d. %s") % (i + 1, escape(line))
203	    return mark_safe('\n'.join(lines))
204	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/template/defaultfilters.py:344:11
343	    """Convert URLs in plain text into clickable links."""
344	    return mark_safe(_urlize(value, nofollow=True, autoescape=autoescape))
345	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/template/defaultfilters.py:344:11
343	    """Convert URLs in plain text into clickable links."""
344	    return mark_safe(_urlize(value, nofollow=True, autoescape=autoescape))
345	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/template/defaultfilters.py:356:11
355	    """
356	    return mark_safe(_urlize(value, trim_url_limit=int(limit), nofollow=True, autoescape=autoescape))
357	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/template/defaultfilters.py:356:11
355	    """
356	    return mark_safe(_urlize(value, trim_url_limit=int(limit), nofollow=True, autoescape=autoescape))
357	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/template/defaultfilters.py:401:15
400	    if safe and arg != ';':
401	        return mark_safe(value)
402	    return value

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/template/defaultfilters.py:401:15
400	    if safe and arg != ';':
401	        return mark_safe(value)
402	    return value

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/template/defaultfilters.py:436:11
435	    autoescape = autoescape and not isinstance(value, SafeData)
436	    return mark_safe(linebreaks(value, autoescape))
437	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/template/defaultfilters.py:436:11
435	    autoescape = autoescape and not isinstance(value, SafeData)
436	    return mark_safe(linebreaks(value, autoescape))
437	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/template/defaultfilters.py:450:11
449	        value = escape(value)
450	    return mark_safe(value.replace('\n', '<br>'))
451	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/template/defaultfilters.py:450:11
449	        value = escape(value)
450	    return mark_safe(value.replace('\n', '<br>'))
451	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/template/defaultfilters.py:457:11
456	    """Mark the value as a string that should not be auto-escaped."""
457	    return mark_safe(value)
458	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/template/defaultfilters.py:457:11
456	    """Mark the value as a string that should not be auto-escaped."""
457	    return mark_safe(value)
458	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/template/defaultfilters.py:467:12
466	    """
467	    return [mark_safe(obj) for obj in value]
468	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/template/defaultfilters.py:467:12
466	    """
467	    return [mark_safe(obj) for obj in value]
468	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/template/defaultfilters.py:549:11
548	        return value
549	    return mark_safe(data)
550	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/template/defaultfilters.py:549:11
548	        return value
549	    return mark_safe(data)
550	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b311-random
   Location: django-3.2.8/django/template/defaultfilters.py:582:11
581	    """Return a random item from the list."""
582	    return random_module.choice(value)
583	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/template/defaultfilters.py:667:11
666	
667	    return mark_safe(list_formatter(value))
668	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/template/defaultfilters.py:667:11
666	
667	    return mark_safe(list_formatter(value))
668	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/template/defaulttags.py:42:19
41	        if self.setting:
42	            return mark_safe(output)
43	        else:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/template/defaulttags.py:42:19
41	        if self.setting:
42	            return mark_safe(output)
43	        else:

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'NOTPROVIDED'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/django/template/defaulttags.py:56:29
55	        if csrf_token:
56	            if csrf_token == 'NOTPROVIDED':
57	                return format_html("")

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/template/defaulttags.py:218:15
217	                    context.pop()
218	        return mark_safe(''.join(nodelist))
219	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/template/defaulttags.py:218:15
217	                    context.pop()
218	        return mark_safe(''.join(nodelist))
219	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/template/loader_tags.py:76:19
75	                render_context[BLOCK_CONTEXT_KEY].get_block(self.name) is not None):
76	            return mark_safe(self.render(self.context))
77	        return ''

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/template/loader_tags.py:76:19
75	                render_context[BLOCK_CONTEXT_KEY].get_block(self.name) is not None):
76	            return mark_safe(self.render(self.context))
77	        return ''

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b324_hashlib.html
   Location: django-3.2.8/django/template/loaders/cached.py:93:15
92	    def generate_hash(self, values):
93	        return hashlib.sha1('|'.join(values).encode()).hexdigest()
94	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'is'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/django/template/smartif.py:160:24
159	            token = tokens[i]
160	            if token == "is" and i + 1 < num_tokens and tokens[i + 1] == "not":
161	                token = "is not"

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'is not'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/django/template/smartif.py:161:24
160	            if token == "is" and i + 1 < num_tokens and tokens[i + 1] == "not":
161	                token = "is not"
162	                i += 1  # skip 'not'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'not'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/django/template/smartif.py:163:26
162	                i += 1  # skip 'not'
163	            elif token == "not" and i + 1 < num_tokens and tokens[i + 1] == "in":
164	                token = "not in"

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'not in'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/django/template/smartif.py:164:24
163	            elif token == "not" and i + 1 < num_tokens and tokens[i + 1] == "in":
164	                token = "not in"
165	                i += 1  # skip 'in'

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/templatetags/i18n.py:92:16
91	        value = value.replace('%%', '%')
92	        value = mark_safe(value) if is_safe else value
93	        if self.asvar:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/templatetags/i18n.py:92:16
91	        value = value.replace('%%', '%')
92	        value = mark_safe(value) if is_safe else value
93	        if self.asvar:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/test/client.py:77:8
76	            num_bytes = self.__len or 0
77	        assert self.__len >= num_bytes, "Cannot read more than the available bytes from the HTTP incoming data."
78	        content = self.__content.read(num_bytes)

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle
   Location: django-3.2.8/django/test/runner.py:8:0
7	import os
8	import pickle
9	import sys

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/django/test/runner.py:142:8
141	        """
142	        pickle.loads(pickle.dumps(obj))
143	

--------------------------------------------------
>> Issue: [B104:hardcoded_bind_all_interfaces] Possible binding to all interfaces.
   Severity: Medium   Confidence: Medium
   CWE: CWE-605 (https://cwe.mitre.org/data/definitions/605.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b104_hardcoded_bind_all_interfaces.html
   Location: django-3.2.8/django/test/selenium.py:40:71
39	            # Listen on an external interface if using a selenium hub.
40	            host = test_class.host if not test_class.selenium_hub else '0.0.0.0'
41	            test_class.host = host

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/test/testcases.py:1239:8
1238	
1239	        assert not self.reset_sequences, 'reset_sequences cannot be used on TestCase instances'
1240	        self.atomics = self._enter_atomics()

--------------------------------------------------
>> Issue: [B408:blacklist] Using Node to parse untrusted XML data is known to be vulnerable to XML attacks. Replace Node with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b408-import-xml-minidom
   Location: django-3.2.8/django/test/utils.py:15:0
14	from unittest import TestCase, skipIf, skipUnless
15	from xml.dom.minidom import Node, parseString
16	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/test/utils.py:484:12
483	            # Hack used when instantiating from SimpleTestCase.setUpClass.
484	            assert not kwargs
485	            self.operations = args[0]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/test/utils.py:487:12
486	        else:
487	            assert not args
488	            self.operations = list(kwargs.items())

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/django/test/utils.py:614:27
613	    # Parse the want and got strings, and compare the parsings.
614	    want_root = first_node(parseString(want))
615	    got_root = first_node(parseString(got))

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/django/test/utils.py:615:26
614	    want_root = first_node(parseString(want))
615	    got_root = first_node(parseString(got))
616	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: django-3.2.8/django/utils/autoreload.py:6:0
5	import signal
6	import subprocess
7	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html
   Location: django-3.2.8/django/utils/autoreload.py:259:12
258	    while True:
259	        p = subprocess.run(args, env=new_environ, close_fds=False)
260	        if p.returncode != 3:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b110_try_except_pass.html
   Location: django-3.2.8/django/utils/autoreload.py:323:8
322	            get_resolver().urlconf_module
323	        except Exception:
324	            # Loading the urlconf can result in errors during development.
325	            # If this occurs then swallow the error and continue.
326	            pass
327	        logger.debug('Apps ready_event triggered. Sending autoreload_started signal.')

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b324_hashlib.html
   Location: django-3.2.8/django/utils/cache.py:121:46
120	    if not response.streaming and response.content:
121	        response.headers['ETag'] = quote_etag(hashlib.md5(response.content).hexdigest())
122	    return response

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b324_hashlib.html
   Location: django-3.2.8/django/utils/cache.py:328:10
327	    """Return a cache key from the headers given in the header list."""
328	    ctx = hashlib.md5()
329	    for header in headerlist:

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b324_hashlib.html
   Location: django-3.2.8/django/utils/cache.py:333:10
332	            ctx.update(value.encode())
333	    url = hashlib.md5(request.build_absolute_uri().encode('ascii'))
334	    cache_key = 'views.decorators.cache.cache_page.%s.%s.%s.%s' % (

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b324_hashlib.html
   Location: django-3.2.8/django/utils/cache.py:341:10
340	    """Return a cache key for the header cache."""
341	    url = hashlib.md5(request.build_absolute_uri().encode('ascii'))
342	    cache_key = 'views.decorators.cache.cache_header.%s.%s' % (

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/utils/functional.py:122:12
121	            cls._delegate_text = str in resultclasses
122	            assert not (cls._delegate_bytes and cls._delegate_text), (
123	                "Cannot call lazy() with both bytes and text return types.")
124	            if cls._delegate_text:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/utils/html.py:43:11
42	    """
43	    return mark_safe(html.escape(str(text)))
44	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/utils/html.py:43:11
42	    """
43	    return mark_safe(html.escape(str(text)))
44	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/utils/html.py:68:11
67	    """Hex encode characters for use in JavaScript strings."""
68	    return mark_safe(str(value).translate(_js_escapes))
69	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/utils/html.py:68:11
67	    """Hex encode characters for use in JavaScript strings."""
68	    return mark_safe(str(value).translate(_js_escapes))
69	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/utils/html.py:88:20
87	        '<script id="{}" type="application/json">{}</script>',
88	        element_id, mark_safe(json_str)
89	    )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/utils/html.py:88:20
87	        '<script id="{}" type="application/json">{}</script>',
88	        element_id, mark_safe(json_str)
89	    )

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/utils/html.py:115:11
114	    kwargs_safe = {k: conditional_escape(v) for (k, v) in kwargs.items()}
115	    return mark_safe(format_string.format(*args_safe, **kwargs_safe))
116	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/utils/html.py:115:11
114	    kwargs_safe = {k: conditional_escape(v) for (k, v) in kwargs.items()}
115	    return mark_safe(format_string.format(*args_safe, **kwargs_safe))
116	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/utils/html.py:132:11
131	    """
132	    return mark_safe(conditional_escape(sep).join(
133	        format_html(format_string, *args)
134	        for args in args_generator
135	    ))
136	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/utils/html.py:132:11
131	    """
132	    return mark_safe(conditional_escape(sep).join(
133	        format_html(format_string, *args)
134	        for args in args_generator
135	    ))
136	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/utils/html.py:339:27
338	                middle = '<a href="%s"%s>%s</a>' % (escape(url), nofollow_attr, trimmed)
339	                words[i] = mark_safe('%s%s%s' % (lead, middle, trail))
340	            else:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/utils/html.py:339:27
338	                middle = '<a href="%s"%s>%s</a>' % (escape(url), nofollow_attr, trimmed)
339	                words[i] = mark_safe('%s%s%s' % (lead, middle, trail))
340	            else:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/utils/html.py:342:31
341	                if safe_input:
342	                    words[i] = mark_safe(word)
343	                elif autoescape:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/utils/html.py:342:31
341	                if safe_input:
342	                    words[i] = mark_safe(word)
343	                elif autoescape:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/utils/html.py:346:23
345	        elif safe_input:
346	            words[i] = mark_safe(word)
347	        elif autoescape:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/utils/html.py:346:23
345	        elif safe_input:
346	            words[i] = mark_safe(word)
347	        elif autoescape:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/utils/html.py:376:33
375	    klass_str = klass.__str__
376	    klass.__str__ = lambda self: mark_safe(klass_str(self))
377	    klass.__html__ = lambda self: str(self)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/utils/html.py:376:33
375	    klass_str = klass.__str__
376	    klass.__str__ = lambda self: mark_safe(klass_str(self))
377	    klass.__html__ = lambda self: str(self)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b110_try_except_pass.html
   Location: django-3.2.8/django/utils/http.py:202:4
201	        return parse_http_date(date)
202	    except Exception:
203	        pass
204	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b311-random
   Location: django-3.2.8/django/utils/lorem_ipsum.py:65:46
64	    # each section for this sentence.
65	    sections = [' '.join(random.sample(WORDS, random.randint(3, 12))) for i in range(random.randint(1, 5))]
66	    s = ', '.join(sections)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b311-random
   Location: django-3.2.8/django/utils/lorem_ipsum.py:65:85
64	    # each section for this sentence.
65	    sections = [' '.join(random.sample(WORDS, random.randint(3, 12))) for i in range(random.randint(1, 5))]
66	    s = ', '.join(sections)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b311-random
   Location: django-3.2.8/django/utils/lorem_ipsum.py:68:44
67	    # Convert to sentence case and add end punctuation.
68	    return '%s%s%s' % (s[0].upper(), s[1:], random.choice('?.'))
69	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b311-random
   Location: django-3.2.8/django/utils/lorem_ipsum.py:77:46
76	    """
77	    return ' '.join(sentence() for i in range(random.randint(1, 4)))
78	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/utils/numberformat.py:26:15
25	    if isinstance(number, int) and not use_grouping and not decimal_pos:
26	        return mark_safe(number)
27	    # sign

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/utils/numberformat.py:26:15
25	    if isinstance(number, int) and not use_grouping and not decimal_pos:
26	        return mark_safe(number)
27	    # sign

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/utils/regex_helper.py:347:12
346	        else:
347	            assert not flags, (
348	                'flags must be empty if regex is passed pre-compiled'
349	            )
350	            return regex

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/utils/translation/trans_real.py:365:15
364	    if isinstance(message, SafeData):
365	        return mark_safe(result)
366	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/utils/translation/trans_real.py:365:15
364	    if isinstance(message, SafeData):
365	        return mark_safe(result)
366	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/django/utils/translation/trans_real.py:377:17
376	    elif isinstance(message, SafeData):
377	        result = mark_safe(result)
378	    return result

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/django/utils/translation/trans_real.py:377:17
376	    elif isinstance(message, SafeData):
377	        result = mark_safe(result)
378	    return result

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: django-3.2.8/django/utils/version.py:4:0
3	import os
4	import subprocess
5	import sys

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/utils/version.py:57:8
56	    else:
57	        assert len(version) == 5
58	        assert version[3] in ('alpha', 'beta', 'rc', 'final')

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/utils/version.py:58:8
57	        assert len(version) == 5
58	        assert version[3] in ('alpha', 'beta', 'rc', 'final')
59	

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b607_start_process_with_partial_path.html
   Location: django-3.2.8/django/utils/version.py:80:14
79	    repo_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
80	    git_log = subprocess.run(
81	        ['git', 'log', '--pretty=format:%ct', '--quiet', '-1', 'HEAD'],
82	        stdout=subprocess.PIPE, stderr=subprocess.PIPE,
83	        shell=True, cwd=repo_dir, universal_newlines=True,
84	    )
85	    timestamp = git_log.stdout

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: django-3.2.8/django/utils/version.py:83:14
82	        stdout=subprocess.PIPE, stderr=subprocess.PIPE,
83	        shell=True, cwd=repo_dir, universal_newlines=True,
84	    )
85	    timestamp = git_log.stdout
86	    try:
87	        timestamp = datetime.datetime.utcfromtimestamp(int(timestamp))
88	    except ValueError:

--------------------------------------------------
>> Issue: [B406:blacklist] Using XMLGenerator to parse untrusted XML data is known to be vulnerable to XML attacks. Replace XMLGenerator with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b406-import-xml-sax
   Location: django-3.2.8/django/utils/xmlutils.py:6:0
5	import re
6	from xml.sax.saxutils import XMLGenerator
7	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/django/views/decorators/debug.py:80:12
79	        def sensitive_post_parameters_wrapper(request, *args, **kwargs):
80	            assert isinstance(request, HttpRequest), (
81	                "sensitive_post_parameters didn't receive an HttpRequest. "
82	                "If you are decorating a classmethod, be sure to use "
83	                "@method_decorator."
84	            )
85	            if parameters:

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'make'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/docs/_ext/djangodocs.py:298:30
297	                    changed = True
298	                elif token == 'make':
299	                    token = 'make.bat'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'make.bat'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/docs/_ext/djangodocs.py:299:28
298	                elif token == 'make':
299	                    token = 'make.bat'
300	                    changed = True

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: django-3.2.8/scripts/manage_translations.py:23:0
22	from argparse import ArgumentParser
23	from subprocess import PIPE, run
24	

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: django-3.2.8/scripts/manage_translations.py:77:8
76	    p = run("git diff -U0 %s | egrep '^[-+]msgid' | wc -l" % po_path,
77	            stdout=PIPE, stderr=PIPE, shell=True)
78	    num_changes = int(p.stdout.strip())
79	    print("%d changed/added messages in '%s' catalog." % (num_changes, cat_name))

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b607_start_process_with_partial_path.html
   Location: django-3.2.8/scripts/manage_translations.py:124:16
123	            )
124	            p = run(
125	                ['msgfmt', '-vc', '-o', '/dev/null', po_path],
126	                stdout=PIPE, stderr=PIPE,
127	                env={'LANG': 'C'},
128	                encoding='utf-8',
129	            )
130	            if p.returncode == 0:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html
   Location: django-3.2.8/scripts/manage_translations.py:124:16
123	            )
124	            p = run(
125	                ['msgfmt', '-vc', '-o', '/dev/null', po_path],
126	                stdout=PIPE, stderr=PIPE,
127	                env={'LANG': 'C'},
128	                encoding='utf-8',
129	            )
130	            if p.returncode == 0:

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b607_start_process_with_partial_path.html
   Location: django-3.2.8/scripts/manage_translations.py:150:12
149	        if languages is None:
150	            run(['tx', 'pull', '-r', _tx_resource_for_name(name), '-a', '-f', '--minimum-perc=5'])
151	            target_langs = sorted(d for d in os.listdir(dir_) if not d.startswith('_') and d != 'en')

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html
   Location: django-3.2.8/scripts/manage_translations.py:150:12
149	        if languages is None:
150	            run(['tx', 'pull', '-r', _tx_resource_for_name(name), '-a', '-f', '--minimum-perc=5'])
151	            target_langs = sorted(d for d in os.listdir(dir_) if not d.startswith('_') and d != 'en')

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b607_start_process_with_partial_path.html
   Location: django-3.2.8/scripts/manage_translations.py:154:16
153	            for lang in languages:
154	                run(['tx', 'pull', '-r', _tx_resource_for_name(name), '-f', '-l', lang])
155	            target_langs = languages

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html
   Location: django-3.2.8/scripts/manage_translations.py:154:16
153	            for lang in languages:
154	                run(['tx', 'pull', '-r', _tx_resource_for_name(name), '-f', '-l', lang])
155	            target_langs = languages

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b607_start_process_with_partial_path.html
   Location: django-3.2.8/scripts/manage_translations.py:165:12
164	                continue
165	            run(['msgcat', '--no-location', '-o', po_path, po_path])
166	            msgfmt = run(['msgfmt', '-c', '-o', '%s.mo' % po_path[:-3], po_path])

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html
   Location: django-3.2.8/scripts/manage_translations.py:165:12
164	                continue
165	            run(['msgcat', '--no-location', '-o', po_path, po_path])
166	            msgfmt = run(['msgfmt', '-c', '-o', '%s.mo' % po_path[:-3], po_path])

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b607_start_process_with_partial_path.html
   Location: django-3.2.8/scripts/manage_translations.py:166:21
165	            run(['msgcat', '--no-location', '-o', po_path, po_path])
166	            msgfmt = run(['msgfmt', '-c', '-o', '%s.mo' % po_path[:-3], po_path])
167	            if msgfmt.returncode != 0:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html
   Location: django-3.2.8/scripts/manage_translations.py:166:21
165	            run(['msgcat', '--no-location', '-o', po_path, po_path])
166	            msgfmt = run(['msgfmt', '-c', '-o', '%s.mo' % po_path[:-3], po_path])
167	            if msgfmt.returncode != 0:

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b307-eval
   Location: django-3.2.8/scripts/manage_translations.py:185:4
184	
185	    eval(options.cmd[0])(options.resources, options.languages)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'xxx'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_changelist/test_date_hierarchy.py:17:24
16	    def setUpTestData(cls):
17	        cls.superuser = User.objects.create_superuser(username='super', email='a@b.com', password='xxx')
18	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'xxx'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_changelist/tests.py:60:24
59	    def setUpTestData(cls):
60	        cls.superuser = User.objects.create_superuser(username='super', email='a@b.com', password='xxx')
61	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'xxx'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_changelist/tests.py:63:15
62	    def _create_superuser(self, username):
63	        return User.objects.create_superuser(username=username, email='a@b.com', password='xxx')
64	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_changelist/tests.py:1332:15
1331	        """{% get_admin_log %} works without specifying a user."""
1332	        user = User(username='jondoe', password='secret', email='super@example.com')
1333	        user.save()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_changelist/tests.py:1372:8
1371	    def setUp(self):
1372	        User.objects.create_superuser(username='super', password='secret', email=None)
1373	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_changelist/tests.py:1378:8
1377	        """
1378	        self.admin_login(username='super', password='secret')
1379	        self.selenium.get(self.live_server_url + reverse('admin:auth_user_changelist'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_changelist/tests.py:1424:8
1423	        Parent.objects.bulk_create([Parent(name='parent%d' % i) for i in range(5)])
1424	        self.admin_login(username='super', password='secret')
1425	        self.selenium.get(self.live_server_url + reverse('admin:admin_changelist_parent_changelist'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_changelist/tests.py:1439:8
1438	        Parent.objects.bulk_create([Parent(name='parent%d' % i) for i in range(101)])
1439	        self.admin_login(username='super', password='secret')
1440	        self.selenium.get(self.live_server_url + reverse('admin:admin_changelist_parent_changelist'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_changelist/tests.py:1490:8
1489	
1490	        self.admin_login(username='super', password='secret')
1491	        self.selenium.get(self.live_server_url + reverse('admin:admin_changelist_parent_changelist'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_changelist/tests.py:1513:8
1512	
1513	        self.admin_login(username='super', password='secret')
1514	        self.selenium.get(self.live_server_url + reverse('admin:admin_changelist_parent_changelist'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_changelist/tests.py:1539:8
1538	
1539	        self.admin_login(username='super', password='secret')
1540	        self.selenium.get(self.live_server_url + reverse('admin:admin_changelist_parent_changelist'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_custom_urls/tests.py:21:24
20	    def setUpTestData(cls):
21	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
22	        Action.objects.create(name='delete', description='Remove things.')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_docs/tests.py:11:24
10	    def setUpTestData(cls):
11	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
12	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b311-random
   Location: django-3.2.8/tests/admin_inlines/models.py:57:22
56	        while not self.rand_pk:
57	            test_pk = random.randint(1, 99999)
58	            if not NonAutoPKBook.objects.filter(rand_pk=test_pk).exists():

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_inlines/tests.py:25:24
24	    def setUpTestData(cls):
25	        cls.superuser = User.objects.create_superuser(username='super', email='super@example.com', password='secret')
26	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_inlines/tests.py:873:19
872	    def setUpTestData(cls):
873	        cls.user = User.objects.create_user('testing', password='password', is_staff=True)
874	        cls.user.user_permissions.add(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_inlines/tests.py:966:8
965	    def setUp(self):
966	        User.objects.create_superuser(username='super', password='secret', email='super@example.com')
967	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_inlines/tests.py:972:8
971	        """
972	        self.admin_login(username='super', password='secret')
973	        self.selenium.get(self.live_server_url + reverse('admin:admin_inlines_holder4_add'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_inlines/tests.py:988:8
987	    def test_delete_stackeds(self):
988	        self.admin_login(username='super', password='secret')
989	        self.selenium.get(self.live_server_url + reverse('admin:admin_inlines_holder4_add'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_inlines/tests.py:1010:8
1009	        from selenium.common.exceptions import NoSuchElementException
1010	        self.admin_login(username='super', password='secret')
1011	        self.selenium.get(self.live_server_url + reverse('admin:admin_inlines_holder4_add'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_inlines/tests.py:1054:8
1053	        from selenium.common.exceptions import NoSuchElementException
1054	        self.admin_login(username='super', password='secret')
1055	        self.selenium.get(self.live_server_url + reverse('admin:admin_inlines_holder4_add'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_inlines/tests.py:1103:8
1102	        """
1103	        self.admin_login(username='super', password='secret')
1104	        self.selenium.get(self.live_server_url + reverse('admin:admin_inlines_profilecollection_add'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_inlines/tests.py:1157:15
1156	        from selenium.common.exceptions import NoSuchElementException
1157	        user = User.objects.create_user('testing', password='password', is_staff=True)
1158	        user.user_permissions.add(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_inlines/tests.py:1166:8
1165	        )
1166	        self.admin_login(username='testing', password='password')
1167	        poll = Poll.objects.create(name="Survey")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_inlines/tests.py:1175:8
1174	    def test_delete_inlines(self):
1175	        self.admin_login(username='super', password='secret')
1176	        self.selenium.get(self.live_server_url + reverse('admin:admin_inlines_profilecollection_add'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_inlines/tests.py:1213:8
1212	        # Collapsed inlines have SHOW/HIDE links.
1213	        self.admin_login(username='super', password='secret')
1214	        self.selenium.get(self.live_server_url + reverse('admin:admin_inlines_author_add'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_inlines/tests.py:1231:8
1230	    def test_added_stacked_inline_with_collapsed_fields(self):
1231	        self.admin_login(username='super', password='secret')
1232	        self.selenium.get(self.live_server_url + reverse('admin:admin_inlines_teacher_add'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_inlines/tests.py:1276:8
1275	    def test_inline_formset_error_input_border(self):
1276	        self.admin_login(username='super', password='secret')
1277	        self.selenium.get(self.live_server_url + reverse('admin:admin_inlines_holder5_add'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_inlines/tests.py:1313:8
1312	    def test_inline_formset_error(self):
1313	        self.admin_login(username='super', password='secret')
1314	        self.selenium.get(self.live_server_url + reverse('admin:admin_inlines_holder5_add'))

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: django-3.2.8/tests/admin_scripts/test_django_admin_py.py:2:0
1	import os
2	import subprocess
3	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html
   Location: django-3.2.8/tests/admin_scripts/test_django_admin_py.py:20:12
19	    def _run_test(self, args):
20	        p = subprocess.run(
21	            [sys.executable, *args],
22	            stdout=subprocess.PIPE,
23	            stderr=subprocess.PIPE,
24	            check=True,
25	        )
26	        return p.stdout, p.stderr

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: django-3.2.8/tests/admin_scripts/tests.py:10:0
9	import socket
10	import subprocess
11	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html
   Location: django-3.2.8/tests/admin_scripts/tests.py:120:12
119	
120	        p = subprocess.run(
121	            [sys.executable, *args],
122	            stdout=subprocess.PIPE, stderr=subprocess.PIPE,
123	            cwd=self.test_dir,
124	            env=test_environ, universal_newlines=True,
125	        )
126	        return p.stdout, p.stderr

--------------------------------------------------
>> Issue: [B104:hardcoded_bind_all_interfaces] Possible binding to all interfaces.
   Severity: Medium   Confidence: Medium
   CWE: CWE-605 (https://cwe.mitre.org/data/definitions/605.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b104_hardcoded_bind_all_interfaces.html
   Location: django-3.2.8/tests/admin_scripts/tests.py:1274:32
1273	    def test_runner_custom_defaults(self):
1274	        self.cmd.default_addr = '0.0.0.0'
1275	        self.cmd.default_port = '5000'

--------------------------------------------------
>> Issue: [B104:hardcoded_bind_all_interfaces] Possible binding to all interfaces.
   Severity: Medium   Confidence: Medium
   CWE: CWE-605 (https://cwe.mitre.org/data/definitions/605.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b104_hardcoded_bind_all_interfaces.html
   Location: django-3.2.8/tests/admin_scripts/tests.py:1277:34
1276	        call_command(self.cmd)
1277	        self.assertServerSettings('0.0.0.0', '5000')
1278	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_utils/test_logentry.py:20:19
19	    def setUpTestData(cls):
20	        cls.user = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
21	        cls.site = Site.objects.create(domain='example.org')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/admin_utils/tests.py:368:41
367	        class MyForm(forms.Form):
368	            text = forms.CharField(label=mark_safe('<i>text</i>'))
369	            cb = forms.BooleanField(label=mark_safe('<i>cb</i>'))

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/admin_utils/tests.py:369:42
368	            text = forms.CharField(label=mark_safe('<i>text</i>'))
369	            cb = forms.BooleanField(label=mark_safe('<i>cb</i>'))
370	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/admin_views/admin.py:513:15
512	    def multiline_html(self, instance):
513	        return mark_safe("Multiline<br>\nhtml<br>\ncontent")
514	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'custom_admin/password_change_form.html'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/tests/admin_views/customadmin.py:19:31
18	    index_template = ['custom_admin/index.html']  # a list, to test fix for #18697
19	    password_change_template = 'custom_admin/password_change_form.html'
20	    password_change_done_template = 'custom_admin/password_change_done.html'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'custom_admin/password_change_done.html'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/tests/admin_views/customadmin.py:20:36
19	    password_change_template = 'custom_admin/password_change_form.html'
20	    password_change_done_template = 'custom_admin/password_change_done.html'
21	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/test_actions.py:25:24
24	    def setUpTestData(cls):
25	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
26	        cls.s1 = ExternalSubscriber.objects.create(name='John Doe', email='john@example.org')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/test_actions.py:412:19
411	        cls.s2 = Subscriber.objects.create(name='Max Mustermann', email='max@example.org')
412	        cls.user = User.objects.create_user(
413	            username='user', password='secret', email='user@example.com',
414	            is_staff=True,
415	        )
416	        permission = Permission.objects.get(codename='change_subscriber')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/test_adminsite.py:29:17
28	    def setUpTestData(cls):
29	        cls.u1 = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
30	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/test_autocomplete_view.py:76:19
75	    def setUpTestData(cls):
76	        cls.user = User.objects.create_user(
77	            username='user', password='secret',
78	            email='user@example.com', is_staff=True,
79	        )
80	        super().setUpTestData()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/test_autocomplete_view.py:304:25
303	    def setUp(self):
304	        self.superuser = User.objects.create_superuser(
305	            username='super', password='secret', email='super@example.com',
306	        )
307	        self.admin_login(username='super', password='secret', login_url=reverse('autocomplete_admin:index'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/test_autocomplete_view.py:307:8
306	        )
307	        self.admin_login(username='super', password='secret', login_url=reverse('autocomplete_admin:index'))
308	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/test_forms.py:12:8
11	    def setUpTestData(cls):
12	        User.objects.create_user(username='inactive', password='password', is_active=False)
13	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/test_history_view.py:14:24
13	    def setUpTestData(cls):
14	        cls.superuser = User.objects.create_superuser(
15	            username='super', password='secret', email='super@example.com',
16	        )
17	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'something'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/test_multidb.py:38:33
37	            Router.target_db = db
38	            cls.superusers[db] = User.objects.create_superuser(
39	                username='admin', password='something', email='test@test.org',
40	            )
41	            b = Book(name='Test Book')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/test_nav_sidebar.py:31:24
30	    def setUpTestData(cls):
31	        cls.superuser = User.objects.create_superuser(
32	            username='super',
33	            password='secret',
34	            email='super@example.com',
35	        )
36	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/test_nav_sidebar.py:92:25
91	    def setUp(self):
92	        self.superuser = User.objects.create_superuser(
93	            username='super',
94	            password='secret',
95	            email='super@example.com',
96	        )
97	        self.admin_login(username='super', password='secret', login_url=reverse('test_with_sidebar:index'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/test_nav_sidebar.py:97:8
96	        )
97	        self.admin_login(username='super', password='secret', login_url=reverse('test_with_sidebar:index'))
98	        self.selenium.execute_script("localStorage.removeItem('django.admin.navSidebarIsOpen')")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/test_templatetags.py:95:24
94	    def setUpTestData(cls):
95	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
96	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:117:24
116	    def setUpTestData(cls):
117	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
118	        cls.s1 = Section.objects.create(name='Test section')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:1094:19
1093	    def test_view_subtitle_per_object(self):
1094	        viewuser = User.objects.create_user(
1095	            username='viewuser', password='secret', is_staff=True,
1096	        )
1097	        viewuser.user_permissions.add(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:1281:24
1280	    def setUpTestData(cls):
1281	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
1282	        cls.s1 = Section.objects.create(name='Test section')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:1327:24
1326	    def setUpTestData(cls):
1327	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
1328	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:1359:24
1358	    def setUpTestData(cls):
1359	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
1360	        cls.per1 = Person.objects.create(name='John Mauchly', gender=1, alive=True)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:1539:24
1538	    def setUpTestData(cls):
1539	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
1540	        cls.viewuser = User.objects.create_user(username='viewuser', password='secret', is_staff=True)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:1540:23
1539	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
1540	        cls.viewuser = User.objects.create_user(username='viewuser', password='secret', is_staff=True)
1541	        cls.adduser = User.objects.create_user(username='adduser', password='secret', is_staff=True)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:1541:22
1540	        cls.viewuser = User.objects.create_user(username='viewuser', password='secret', is_staff=True)
1541	        cls.adduser = User.objects.create_user(username='adduser', password='secret', is_staff=True)
1542	        cls.changeuser = User.objects.create_user(username='changeuser', password='secret', is_staff=True)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:1542:25
1541	        cls.adduser = User.objects.create_user(username='adduser', password='secret', is_staff=True)
1542	        cls.changeuser = User.objects.create_user(username='changeuser', password='secret', is_staff=True)
1543	        cls.deleteuser = User.objects.create_user(username='deleteuser', password='secret', is_staff=True)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:1543:25
1542	        cls.changeuser = User.objects.create_user(username='changeuser', password='secret', is_staff=True)
1543	        cls.deleteuser = User.objects.create_user(username='deleteuser', password='secret', is_staff=True)
1544	        cls.joepublicuser = User.objects.create_user(username='joepublic', password='secret')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:1544:28
1543	        cls.deleteuser = User.objects.create_user(username='deleteuser', password='secret', is_staff=True)
1544	        cls.joepublicuser = User.objects.create_user(username='joepublic', password='secret')
1545	        cls.nostaffuser = User.objects.create_user(username='nostaff', password='secret')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:1545:26
1544	        cls.joepublicuser = User.objects.create_user(username='joepublic', password='secret')
1545	        cls.nostaffuser = User.objects.create_user(username='nostaff', password='secret')
1546	        cls.s1 = Section.objects.create(name='Test section')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:1651:19
1650	        self.assertContains(login, ERROR_MESSAGE)
1651	        new_user = User(username='jondoe', password='secret', email='super@example.com')
1652	        new_user.save()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:2550:23
2549	    def setUpTestData(cls):
2550	        cls.viewuser = User.objects.create_user(username='viewuser', password='secret', is_staff=True)
2551	        cls.adduser = User.objects.create_user(username='adduser', password='secret', is_staff=True)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:2551:22
2550	        cls.viewuser = User.objects.create_user(username='viewuser', password='secret', is_staff=True)
2551	        cls.adduser = User.objects.create_user(username='adduser', password='secret', is_staff=True)
2552	        cls.changeuser = User.objects.create_user(username='changeuser', password='secret', is_staff=True)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:2552:25
2551	        cls.adduser = User.objects.create_user(username='adduser', password='secret', is_staff=True)
2552	        cls.changeuser = User.objects.create_user(username='changeuser', password='secret', is_staff=True)
2553	        cls.deleteuser = User.objects.create_user(username='deleteuser', password='secret', is_staff=True)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:2553:25
2552	        cls.changeuser = User.objects.create_user(username='changeuser', password='secret', is_staff=True)
2553	        cls.deleteuser = User.objects.create_user(username='deleteuser', password='secret', is_staff=True)
2554	        # Setup permissions.

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:2561:25
2560	        # UserProxy instances.
2561	        cls.user_proxy = UserProxy.objects.create(username='user_proxy', password='secret')
2562	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:2613:25
2612	        # User who can change Reports
2613	        cls.changeuser = User.objects.create_user(username='changeuser', password='secret', is_staff=True)
2614	        cls.changeuser.user_permissions.add(get_perm(Report, get_permission_codename('change', Report._meta)))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:2631:24
2630	    def setUpTestData(cls):
2631	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
2632	        cls.deleteuser = User.objects.create_user(username='deleteuser', password='secret', is_staff=True)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:2632:25
2631	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
2632	        cls.deleteuser = User.objects.create_user(username='deleteuser', password='secret', is_staff=True)
2633	        cls.s1 = Section.objects.create(name='Test section')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:2847:24
2846	    def setUpTestData(cls):
2847	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
2848	        cls.v1 = Villain.objects.create(name='Adam')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:2865:24
2864	    def setUpTestData(cls):
2865	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
2866	        cls.s1 = Section.objects.create(name='Test section')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:3040:24
3039	    def setUpTestData(cls):
3040	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
3041	        cls.b1 = Book.objects.create(name='Lærdommer')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:3110:24
3109	    def setUpTestData(cls):
3110	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
3111	        cls.s1 = Section.objects.create(name='Test section')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:3535:24
3534	    def setUpTestData(cls):
3535	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
3536	        cls.joepublicuser = User.objects.create_user(username='joepublic', password='secret')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:3536:28
3535	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
3536	        cls.joepublicuser = User.objects.create_user(username='joepublic', password='secret')
3537	        cls.s1 = Section.objects.create(name='Test section')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:3676:24
3675	    def setUpTestData(cls):
3676	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
3677	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:3764:24
3763	    def setUpTestData(cls):
3764	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
3765	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:3789:24
3788	    def setUpTestData(cls):
3789	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
3790	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:3807:24
3806	    def setUpTestData(cls):
3807	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
3808	        cls.pks = [EmptyModel.objects.create().id for i in range(3)]

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:4068:24
4067	    def setUpTestData(cls):
4068	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
4069	        file1 = tempfile.NamedTemporaryFile(suffix=".file1")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:4119:24
4118	    def setUpTestData(cls):
4119	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
4120	        cls.collector = Collector.objects.create(pk=1, name='John Fowles')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:4442:24
4441	    def setUpTestData(cls):
4442	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
4443	        cls.s1 = Section.objects.create(name='Test section')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:4516:24
4515	    def setUpTestData(cls):
4516	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
4517	        cls.p1 = PrePopulatedPost.objects.create(title='A Long Title', published=True, slug='a-long-title')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:4573:25
4572	    def setUp(self):
4573	        self.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
4574	        self.p1 = PrePopulatedPost.objects.create(title='A Long Title', published=True, slug='a-long-title')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:4593:8
4592	        """
4593	        self.admin_login(username='super', password='secret', login_url=reverse('admin:index'))
4594	        self.selenium.get(self.live_server_url + reverse('admin:admin_views_mainprepopulated_add'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:4738:8
4737	        )
4738	        self.admin_login(username='super', password='secret', login_url=reverse('admin:index'))
4739	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:4769:8
4768	        """
4769	        self.admin_login(username='super', password='secret', login_url=reverse('admin:index'))
4770	        self.selenium.get(self.live_server_url + reverse('admin:admin_views_article_add'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:4779:8
4778	        # First form field has a single widget
4779	        self.admin_login(username='super', password='secret', login_url=reverse('admin:index'))
4780	        with self.wait_page_loaded():

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:4800:8
4799	        full_url = self.live_server_url + url
4800	        self.admin_login(username='super', password='secret', login_url=reverse('admin:index'))
4801	        self.selenium.get(full_url)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:4821:8
4820	        full_url = self.live_server_url + url
4821	        self.admin_login(username='super', password='secret', login_url=reverse('admin:index'))
4822	        self.selenium.get(full_url)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:4844:8
4843	        )
4844	        self.admin_login(username='super', password='secret', login_url=reverse('admin:index'))
4845	        self.selenium.get(self.live_server_url + reverse('admin:admin_views_article_changelist'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:4882:8
4881	        related_with_parent = RelatedWithUUIDPKModel.objects.create(parent=parent)
4882	        self.admin_login(username='super', password='secret', login_url=reverse('admin:index'))
4883	        change_url = reverse('admin:admin_views_relatedwithuuidpkmodel_change', args=(related_with_parent.id,))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:4895:8
4894	        from selenium.webdriver.support.ui import Select
4895	        self.admin_login(username='super', password='secret', login_url=reverse('admin:index'))
4896	        self.selenium.get(self.live_server_url + reverse('admin:admin_views_relatedwithuuidpkmodel_add'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:4911:8
4910	        related_with_parent = RelatedWithUUIDPKModel.objects.create(parent=parent)
4911	        self.admin_login(username='super', password='secret', login_url=reverse('admin:index'))
4912	        change_url = reverse('admin:admin_views_relatedwithuuidpkmodel_change', args=(related_with_parent.id,))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:4927:8
4926	        related_with_parent = RelatedWithUUIDPKModel.objects.create(parent=parent)
4927	        self.admin_login(username='super', password='secret', login_url=reverse('admin:index'))
4928	        change_url = reverse('admin:admin_views_relatedwithuuidpkmodel_change', args=(related_with_parent.id,))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:4940:8
4939	        RelatedWithUUIDPKModel.objects.create(parent=parent)
4940	        self.admin_login(username='super', password='secret', login_url=reverse('admin:index'))
4941	        change_url = reverse('admin:admin_views_relatedwithuuidpkmodel_changelist', current_app=site2.name)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:4972:8
4971	        Person.objects.create(name='Grace Hopper', gender=1, alive=False)
4972	        self.admin_login(username='super', password='secret', login_url=reverse('admin:index'))
4973	        person_url = reverse('admin:admin_views_person_changelist') + '?q=Gui'

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:4986:24
4985	    def setUpTestData(cls):
4986	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
4987	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:5208:24
5207	    def setUpTestData(cls):
5208	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
5209	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:5234:24
5233	    def setUpTestData(cls):
5234	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
5235	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:5326:24
5325	    def setUpTestData(cls):
5326	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
5327	        cls.adduser = User.objects.create_user(username='adduser', password='secret', is_staff=True)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:5327:22
5326	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
5327	        cls.adduser = User.objects.create_user(username='adduser', password='secret', is_staff=True)
5328	        cls.changeuser = User.objects.create_user(username='changeuser', password='secret', is_staff=True)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:5328:25
5327	        cls.adduser = User.objects.create_user(username='adduser', password='secret', is_staff=True)
5328	        cls.changeuser = User.objects.create_user(username='changeuser', password='secret', is_staff=True)
5329	        cls.s1 = Section.objects.create(name='Test section')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:5489:24
5488	    def setUpTestData(cls):
5489	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
5490	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:5520:24
5519	    def setUpTestData(cls):
5520	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
5521	        cls.s1 = Section.objects.create(name='Test section')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:5639:24
5638	    def setUpTestData(cls):
5639	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
5640	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:5696:24
5695	    def setUpTestData(cls):
5696	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
5697	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:5712:24
5711	    def setUpTestData(cls):
5712	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
5713	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:5857:24
5856	    def setUpTestData(cls):
5857	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
5858	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:5924:24
5923	    def setUpTestData(cls):
5924	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
5925	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:5954:24
5953	    def setUpTestData(cls):
5954	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
5955	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:6012:24
6011	    def setUpTestData(cls):
6012	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
6013	        cls.joepublicuser = User.objects.create_user(username='joepublic', password='secret')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:6013:28
6012	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
6013	        cls.joepublicuser = User.objects.create_user(username='joepublic', password='secret')
6014	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:6280:24
6279	    def setUpTestData(cls):
6280	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
6281	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:6321:24
6320	    def setUpTestData(cls):
6321	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
6322	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:6453:24
6452	    def setUpTestData(cls):
6453	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
6454	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:6504:24
6503	    def setUpTestData(cls):
6504	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
6505	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:6545:20
6544	    def test_unknown_url_404_if_authenticated(self):
6545	        superuser = User.objects.create_superuser(
6546	            username='super',
6547	            password='secret',
6548	            email='super@example.com',
6549	        )
6550	        self.client.force_login(superuser)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:6584:20
6583	    def test_missing_slash_append_slash_true_unknown_url(self):
6584	        superuser = User.objects.create_user(
6585	            username='staff',
6586	            password='secret',
6587	            email='staff@example.com',
6588	            is_staff=True,
6589	        )
6590	        self.client.force_login(superuser)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:6597:20
6596	    def test_missing_slash_append_slash_true(self):
6597	        superuser = User.objects.create_user(
6598	            username='staff',
6599	            password='secret',
6600	            email='staff@example.com',
6601	            is_staff=True,
6602	        )
6603	        self.client.force_login(superuser)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:6610:20
6609	    def test_missing_slash_append_slash_true_script_name(self):
6610	        superuser = User.objects.create_user(
6611	            username='staff',
6612	            password='secret',
6613	            email='staff@example.com',
6614	            is_staff=True,
6615	        )
6616	        self.client.force_login(superuser)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:6628:20
6627	    def test_missing_slash_append_slash_true_force_script_name(self):
6628	        superuser = User.objects.create_user(
6629	            username='staff',
6630	            password='secret',
6631	            email='staff@example.com',
6632	            is_staff=True,
6633	        )
6634	        self.client.force_login(superuser)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:6646:15
6645	    def test_missing_slash_append_slash_true_non_staff_user(self):
6646	        user = User.objects.create_user(
6647	            username='user',
6648	            password='secret',
6649	            email='user@example.com',
6650	            is_staff=False,
6651	        )
6652	        self.client.force_login(user)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:6659:20
6658	    def test_missing_slash_append_slash_false(self):
6659	        superuser = User.objects.create_user(
6660	            username='staff',
6661	            password='secret',
6662	            email='staff@example.com',
6663	            is_staff=True,
6664	        )
6665	        self.client.force_login(superuser)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:6672:20
6671	    def test_single_model_no_append_slash(self):
6672	        superuser = User.objects.create_user(
6673	            username='staff',
6674	            password='secret',
6675	            email='staff@example.com',
6676	            is_staff=True,
6677	        )
6678	        self.client.force_login(superuser)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:6691:20
6690	    def test_unknown_url_404_if_authenticated_without_final_catch_all_view(self):
6691	        superuser = User.objects.create_superuser(
6692	            username='super',
6693	            password='secret',
6694	            email='super@example.com',
6695	        )
6696	        self.client.force_login(superuser)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:6729:20
6728	    def test_missing_slash_append_slash_true_unknown_url_without_final_catch_all_view(self):
6729	        superuser = User.objects.create_user(
6730	            username='staff',
6731	            password='secret',
6732	            email='staff@example.com',
6733	            is_staff=True,
6734	        )
6735	        self.client.force_login(superuser)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:6742:20
6741	    def test_missing_slash_append_slash_true_without_final_catch_all_view(self):
6742	        superuser = User.objects.create_user(
6743	            username='staff',
6744	            password='secret',
6745	            email='staff@example.com',
6746	            is_staff=True,
6747	        )
6748	        self.client.force_login(superuser)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_views/tests.py:6755:20
6754	    def test_missing_slash_append_slash_false_without_final_catch_all_view(self):
6755	        superuser = User.objects.create_user(
6756	            username='staff',
6757	            password='secret',
6758	            email='staff@example.com',
6759	            is_staff=True,
6760	        )
6761	        self.client.force_login(superuser)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_widgets/tests.py:36:24
35	    def setUpTestData(cls):
36	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email=None)
37	        cls.u2 = User.objects.create_user(username='testser', password='secret')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_widgets/tests.py:37:17
36	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email=None)
37	        cls.u2 = User.objects.create_user(username='testser', password='secret')
38	        Car.objects.create(owner=cls.superuser, make='Volkswagen', model='Passat')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_widgets/tests.py:779:18
778	    def setUp(self):
779	        self.u1 = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
780	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_widgets/tests.py:791:8
790	
791	        self.admin_login(username='super', password='secret', login_url='/')
792	        # Open a page that has a date and time picker widgets

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_widgets/tests.py:849:8
848	        """
849	        self.admin_login(username='super', password='secret', login_url='/')
850	        # Open a page that has a date and time picker widgets

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_widgets/tests.py:872:8
871	        """
872	        self.admin_login(username='super', password='secret', login_url='/')
873	        # Open a page that has a date and time picker widgets

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_widgets/tests.py:897:8
896	        """
897	        self.admin_login(username='super', password='secret', login_url='/')
898	        # Open a page that has a date and time picker widgets

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_widgets/tests.py:919:8
918	        self.selenium.set_window_size(1024, 768)
919	        self.admin_login(username='super', password='secret', login_url='/')
920	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_widgets/tests.py:965:8
964	        """
965	        self.admin_login(username='super', password='secret', login_url='/')
966	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_widgets/tests.py:1185:8
1184	
1185	        self.admin_login(username='super', password='secret', login_url='/')
1186	        self.selenium.get(self.live_server_url + reverse('admin:admin_widgets_school_change', args=(self.school.id,)))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_widgets/tests.py:1210:8
1209	
1210	        self.admin_login(username='super', password='secret', login_url='/')
1211	        self.selenium.get(self.live_server_url + reverse('admin:admin_widgets_school_change', args=(self.school.id,)))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_widgets/tests.py:1293:8
1292	        self.school.alumni.set([self.lisa, self.peter])
1293	        self.admin_login(username='super', password='secret', login_url='/')
1294	        change_url = reverse('admin:admin_widgets_school_change', args=(self.school.id,))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_widgets/tests.py:1318:8
1317	
1318	        self.admin_login(username='super', password='secret', login_url='/')
1319	        change_url = reverse('admin:admin_widgets_school_change', args=(self.school.id,))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_widgets/tests.py:1343:8
1342	    def test_ForeignKey(self):
1343	        self.admin_login(username='super', password='secret', login_url='/')
1344	        self.selenium.get(self.live_server_url + reverse('admin:admin_widgets_event_add'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_widgets/tests.py:1373:8
1372	    def test_many_to_many(self):
1373	        self.admin_login(username='super', password='secret', login_url='/')
1374	        self.selenium.get(self.live_server_url + reverse('admin:admin_widgets_event_add'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/admin_widgets/tests.py:1412:8
1411	    def test_ForeignKey_using_to_field(self):
1412	        self.admin_login(username='super', password='secret', login_url='/')
1413	        self.selenium.get(self.live_server_url + reverse('admin:admin_widgets_profile_add'))

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle
   Location: django-3.2.8/tests/aggregation_regress/tests.py:2:0
1	import datetime
2	import pickle
3	from decimal import Decimal

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html
   Location: django-3.2.8/tests/aggregation_regress/tests.py:179:13
178	        # subselect being (erroneously) added to the GROUP BY parameters
179	        qs = Publisher.objects.extra(select={
180	            'name_of_shortest_book': shortest_book_sql,
181	        }).annotate(total_books=Count('book'))
182	        # force execution of the query

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/aggregation_regress/tests.py:814:14
813	        query = qs.query.get_compiler(qs.db).as_sql()[0]
814	        qs2 = pickle.loads(pickle.dumps(qs))
815	        self.assertEqual(

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b611_django_rawsql_used.html
   Location: django-3.2.8/tests/annotations/tests.py:512:35
511	                    DepartmentStore.objects.annotate(
512	                        annotation=RawSQL(sql, ()),
513	                    ).values_list('annotation', flat=True),

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'something'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_admin_multidb.py:36:33
35	            Router.target_db = db
36	            cls.superusers[db] = User.objects.create_superuser(
37	                username='admin', password='something', email='test@test.org',
38	            )
39	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_auth_backends.py:227:8
226	        username = getattr(self.user, self.UserModel.USERNAME_FIELD)
227	        authenticate(username=username, password='test')
228	        self.assertEqual(CountingMD5PasswordHasher.calls, 1)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_auth_backends.py:231:8
230	        CountingMD5PasswordHasher.calls = 0
231	        authenticate(username='no_such_user', password='test')
232	        self.assertEqual(CountingMD5PasswordHasher.calls, 1)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_auth_backends.py:257:25
256	        self.user = User.objects.create_user(email='test@example.com', **self.user_credentials)
257	        self.superuser = User.objects.create_superuser(
258	            username='test2',
259	            email='test2@example.com',
260	            password='test',
261	        )
262	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_auth_backends.py:277:15
276	        """
277	        user = CustomUserWithoutIsActiveField.objects._create_user(
278	            username='test', email='test@example.com', password='test',
279	        )
280	        self.assertEqual(authenticate(username='test', password='test'), user)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_auth_backends.py:280:25
279	        )
280	        self.assertEqual(authenticate(username='test', password='test'), user)
281	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_auth_backends.py:304:20
303	    def create_users(self):
304	        self.user = ExtensionUser._default_manager.create_user(
305	            username='test',
306	            email='test@example.com',
307	            password='test',
308	            date_of_birth=date(2006, 4, 25)
309	        )
310	        self.superuser = ExtensionUser._default_manager.create_superuser(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_auth_backends.py:310:25
309	        )
310	        self.superuser = ExtensionUser._default_manager.create_superuser(
311	            username='test2',
312	            email='test2@example.com',
313	            password='test',
314	            date_of_birth=date(1976, 11, 8)
315	        )
316	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_auth_backends.py:331:20
330	    def create_users(self):
331	        self.user = CustomPermissionsUser._default_manager.create_user(
332	            email='test@example.com',
333	            password='test',
334	            date_of_birth=date(2006, 4, 25)
335	        )
336	        self.superuser = CustomPermissionsUser._default_manager.create_superuser(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_auth_backends.py:336:25
335	        )
336	        self.superuser = CustomPermissionsUser._default_manager.create_superuser(
337	            email='test2@example.com',
338	            password='test',
339	            date_of_birth=date(1976, 11, 8)
340	        )
341	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_auth_backends.py:351:20
350	    def test_authenticate(self):
351	        test_user = CustomUser._default_manager.create_user(
352	            email='test@example.com',
353	            password='test',
354	            date_of_birth=date(2006, 4, 25)
355	        )
356	        authenticated_user = authenticate(email='test@example.com', password='test')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_auth_backends.py:356:29
355	        )
356	        authenticated_user = authenticate(email='test@example.com', password='test')
357	        self.assertEqual(test_user, authenticated_user)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_auth_backends.py:367:15
366	        """
367	        user = UUIDUser.objects.create_user(username='uuid', password='test')
368	        self.assertTrue(self.client.login(username='uuid', password='test'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_auth_backends.py:368:24
367	        user = UUIDUser.objects.create_user(username='uuid', password='test')
368	        self.assertTrue(self.client.login(username='uuid', password='test'))
369	        self.assertEqual(UUIDUser.objects.get(pk=self.client.session[SESSION_KEY]), user)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_auth_backends.py:564:26
563	        "user is not authenticated after a backend raises permission denied #2550"
564	        self.assertIsNone(authenticate(username='test', password='test'))
565	        # user_login_failed signal is sent.

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_auth_backends.py:570:25
569	    def test_authenticates(self):
570	        self.assertEqual(authenticate(username='test', password='test'), self.user1)
571	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'test_password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/tests/auth_tests/test_auth_backends.py:602:20
601	    TEST_USERNAME = 'test_user'
602	    TEST_PASSWORD = 'test_password'
603	    TEST_EMAIL = 'test@example.com'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'mypassword'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/tests/auth_tests/test_auth_backends.py:663:34
662	    def setUp(self):
663	        self.sensitive_password = 'mypassword'
664	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_auth_backends.py:669:12
668	        with self.assertRaises(TypeError):
669	            authenticate(username='test', password='test')
670	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_auth_backends.py:715:25
714	        """
715	        self.assertEqual(authenticate(username='test', password='test'), self.user1)
716	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_auth_backends.py:722:25
721	    def test_skips_backends_with_decorated_method(self):
722	        self.assertEqual(authenticate(username='test', password='test'), self.user1)
723	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_auth_backends.py:735:8
734	    def setUp(self):
735	        self.client.login(username='test', password='test')
736	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/tests/auth_tests/test_auth_backends.py:774:19
773	        username = 'username'
774	        password = 'password'
775	        User.objects.create_user(username, 'email', password)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/tests/auth_tests/test_auth_backends.py:786:15
785	    username = 'username'
786	    password = 'password'
787	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'testpw'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_basic.py:140:8
139	        created_user = User.objects.create_user('testuser', 'test@example.com', 'testpw')
140	        self.client.login(username='testuser', password='testpw')
141	        request = HttpRequest()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_context_processors.py:68:24
67	    def setUpTestData(cls):
68	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
69	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_context_processors.py:89:12
88	    def test_perms_attrs(self):
89	        u = User.objects.create_user(username='normal', password='secret')
90	        u.user_permissions.add(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_context_processors.py:101:12
100	    def test_perm_in_perms_attrs(self):
101	        u = User.objects.create_user(username='normal', password='secret')
102	        u.user_permissions.add(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_context_processors.py:106:8
105	                codename='add_permission'))
106	        self.client.login(username='normal', password='secret')
107	        response = self.client.get('/auth_processor_perm_in_perms/')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_context_processors.py:124:8
123	        # tests.
124	        self.client.login(username='super', password='secret')
125	        user = authenticate(username='super', password='secret')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_context_processors.py:125:15
124	        self.client.login(username='super', password='secret')
125	        user = authenticate(username='super', password='secret')
126	        response = self.client.get('/auth_processor_user/')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_decorators.py:65:19
64	    def setUpTestData(cls):
65	        cls.user = models.User.objects.create(username='joe', password='qwerty')
66	        # Add permissions auth.add_customuser and auth.change_customuser

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_forms.py:34:17
33	    def setUpTestData(cls):
34	        cls.u1 = User.objects.create_user(username='testclient', password='password', email='testclient@example.com')
35	        cls.u2 = User.objects.create_user(username='inactive', password='password', is_active=False)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_forms.py:35:17
34	        cls.u1 = User.objects.create_user(username='testclient', password='password', email='testclient@example.com')
35	        cls.u2 = User.objects.create_user(username='inactive', password='password', is_active=False)
36	        cls.u3 = User.objects.create_user(username='staff', password='password')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_forms.py:36:17
35	        cls.u2 = User.objects.create_user(username='inactive', password='password', is_active=False)
36	        cls.u3 = User.objects.create_user(username='staff', password='password')
37	        cls.u4 = User.objects.create(username='empty_password', password='')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_forms.py:37:17
36	        cls.u3 = User.objects.create_user(username='staff', password='password')
37	        cls.u4 = User.objects.create(username='empty_password', password='')
38	        cls.u5 = User.objects.create(username='unmanageable_password', password='$')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: '$'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_forms.py:38:17
37	        cls.u4 = User.objects.create(username='empty_password', password='')
38	        cls.u5 = User.objects.create(username='unmanageable_password', password='$')
39	        cls.u6 = User.objects.create(username='unknown_password', password='foo$bar')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo$bar'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_forms.py:39:17
38	        cls.u5 = User.objects.create(username='unmanageable_password', password='$')
39	        cls.u6 = User.objects.create(username='unknown_password', password='foo$bar')
40	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'pwd'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_forms.py:144:8
143	        self.assertNotEqual(omega_username, ohm_username)
144	        User.objects.create_user(username=omega_username, password='pwd')
145	        data = {

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'pwd'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_forms.py:406:8
405	    def test_unicode_username(self):
406	        User.objects.create_user(username='Σαρα', password='pwd')
407	        data = {

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'pwd'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_forms.py:485:15
484	
485	        user = IntegerUsernameUser.objects.create_user(username=0, password='pwd')
486	        data = {

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'new password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/tests/auth_tests/test_forms.py:733:18
732	        # password field.
733	        post_data['password'] = 'new password'
734	        form = UserChangeForm(instance=user, data=post_data)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'VSK0UYV6FFQVZ0KG88DYN9WADAADZO1CTSIVDJUNZSUML6IBX7LN7ZS3R5JGB3RGZ7VI7G7DJQ9NI8BQFSRPTG6UWTTVESA5ZPUN'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/tests/auth_tests/test_hashers.py:190:12
189	        password = (
190	            'VSK0UYV6FFQVZ0KG88DYN9WADAADZO1CTSIVDJUNZSUML6IBX7LN7ZS3R5'
191	            'JGB3RGZ7VI7G7DJQ9NI8BQFSRPTG6UWTTVESA5ZPUN'
192	        )
193	        encoded = make_password(password, hasher='bcrypt_sha256')
194	        self.assertTrue(check_password(password, encoded))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/tests/auth_tests/test_management.py:55:16
54	            def mock_input(prompt):
55	                assert '__proxy__' not in prompt
56	                response = None

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_management.py:149:19
148	    def setUpTestData(cls):
149	        cls.user = User.objects.create_user(username='joe', password='qwerty')
150	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_management.py:173:8
172	        username = getpass.getuser()
173	        User.objects.create_user(username=username, password='qwerty')
174	        call_command('changepassword', stdout=self.stdout)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_management.py:223:8
222	        # 'Julia' with accented 'u':
223	        User.objects.create_user(username='J\xfalia', password='qwerty')
224	        call_command('changepassword', username='J\xfalia', stdout=self.stdout)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_management.py:235:15
234	        """
235	        user = User.objects.db_manager('other').create_user(username='joe', password='qwerty')
236	        self.assertTrue(user.check_password('qwerty'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_mixins.py:54:15
53	    def test_stacked_mixins_success(self):
54	        user = models.User.objects.create(username='joe', password='qwerty')
55	        perms = models.Permission.objects.filter(codename__in=('add_customuser', 'change_customuser'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_mixins.py:69:15
68	    def test_stacked_mixins_missing_permission(self):
69	        user = models.User.objects.create(username='joe', password='qwerty')
70	        perms = models.Permission.objects.filter(codename__in=('add_customuser',))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_mixins.py:84:15
83	    def test_access_mixin_permission_denied_response(self):
84	        user = models.User.objects.create(username='joe', password='qwerty')
85	        # Authenticated users receive PermissionDenied.

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_mixins.py:113:15
112	    def test_stacked_mixins_not_logged_in(self):
113	        user = models.User.objects.create(username='joe', password='qwerty')
114	        perms = models.Permission.objects.filter(codename__in=('add_customuser', 'change_customuser'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_mixins.py:213:19
212	    def setUpTestData(cls):
213	        cls.user = models.User.objects.create(username='joe', password='qwerty')
214	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwerty'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_mixins.py:242:19
241	    def setUpTestData(cls):
242	        cls.user = models.User.objects.create(username='joe', password='qwerty')
243	        perms = models.Permission.objects.filter(codename__in=('add_customuser', 'change_customuser'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_models.py:148:12
147	        with self.assertRaisesMessage(ValueError, 'Superuser must have is_superuser=True.'):
148	            User.objects.create_superuser(
149	                username='test', email='test@test.com',
150	                password='test', is_superuser=False,
151	            )
152	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_models.py:155:12
154	        with self.assertRaisesMessage(ValueError, 'Superuser must have is_staff=True.'):
155	            User.objects.create_superuser(
156	                username='test', email='test@test.com',
157	                password='test', is_staff=False,
158	            )
159	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secure'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_models.py:170:19
169	            UserModel = apps.get_model('auth', 'User')
170	            user = UserModel.objects.create_user('user1', password='secure')
171	            self.assertIsInstance(user, UserModel)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'some-gibbberish'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_models.py:199:22
198	        """
199	        self.assertIs(User(password='some-gibbberish').has_usable_password(), True)
200	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_models.py:256:15
255	    def test_user_clean_normalize_email(self):
256	        user = User(username='user', password='foo', email='foo@BAR.com')
257	        user.clean()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_models.py:264:15
263	        """
264	        user = User.objects.create_user(username='user', password='foo')
265	        user.set_password('bar')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_models.py:278:15
277	        """
278	        user = User.objects.create_user(username='user', password='foo')
279	        initial_password = user.password

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/tests/auth_tests/test_password_reset_timeout_days.py:52:37
51	        settings_module = ModuleType('fake_settings_module')
52	        settings_module.SECRET_KEY = 'foo'
53	        settings_module.PASSWORD_RESET_TIMEOUT_DAYS = 2

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/tests/auth_tests/test_password_reset_timeout_days.py:81:37
80	        settings_module = ModuleType('fake_settings_module')
81	        settings_module.SECRET_KEY = 'foo'
82	        settings_module.PASSWORD_RESET_TIMEOUT_DAYS = 2

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_remote_user.py:155:8
154	        # authenticated via another backend
155	        User.objects.create_user(username='modeluser', password='foo')
156	        self.client.login(username='modeluser', password='foo')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_remote_user.py:156:8
155	        User.objects.create_user(username='modeluser', password='foo')
156	        self.client.login(username='modeluser', password='foo')
157	        authenticate(username='modeluser', password='foo')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_remote_user.py:157:8
156	        self.client.login(username='modeluser', password='foo')
157	        authenticate(username='modeluser', password='foo')
158	        response = self.client.get('/remote_user/')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_signals.py:16:17
15	    def setUpTestData(cls):
16	        cls.u1 = User.objects.create_user(username='testclient', password='password')
17	        cls.u3 = User.objects.create_user(username='staff', password='password')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_signals.py:17:17
16	        cls.u1 = User.objects.create_user(username='testclient', password='password')
17	        cls.u3 = User.objects.create_user(username='staff', password='password')
18	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'bad'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_signals.py:45:8
44	        # Only a successful login will trigger the success signal.
45	        self.client.login(username='testclient', password='bad')
46	        self.assertEqual(len(self.logged_in), 0)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_signals.py:54:8
53	        # Like this:
54	        self.client.login(username='testclient', password='password')
55	        self.assertEqual(len(self.logged_in), 1)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_signals.py:69:8
68	    def test_logout(self):
69	        self.client.login(username='testclient', password='password')
70	        self.client.get('/logout/next_page/')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'bad'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_signals.py:87:8
86	    def test_failed_login_without_request(self):
87	        authenticate(username='testclient', password='bad')
88	        self.assertIsNone(self.login_failed[0]['request'])

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'pass'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_templates.py:25:15
24	        user = User.objects.create_user('jsmith', 'jsmith@example.com', 'pass')
25	        user = authenticate(username=user.username, password='pass')
26	        request = cls.request_factory.get('/somepath/')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'testpw'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_tokens.py:51:23
50	            with self.subTest(model=model.__qualname__, email=email):
51	                user = model.objects.create_user(
52	                    'changeemailuser',
53	                    email=email,
54	                    password='testpw',
55	                )
56	                p0 = PasswordResetTokenGenerator()

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'abcdefghijkl'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/tests/auth_tests/test_tokens.py:123:21
122	        user = User.objects.create_user('tokentestuser', 'test2@example.com', 'testpw')
123	        new_secret = 'abcdefghijkl'
124	        # Create and check a token with a different secret.

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_validators.py:122:15
121	    def test_validate(self):
122	        user = User.objects.create_user(
123	            username='testclient', password='password', email='testclient@example.com',
124	            first_name='Test', last_name='Client',
125	        )
126	        expected_error = "The password is too similar to the %s."

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_views.py:52:17
51	    def setUpTestData(cls):
52	        cls.u1 = User.objects.create_user(username='testclient', password='password', email='testclient@example.com')
53	        cls.u3 = User.objects.create_user(username='staff', password='password', email='staffmember@example.com')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_views.py:53:17
52	        cls.u1 = User.objects.create_user(username='testclient', password='password', email='testclient@example.com')
53	        cls.u3 = User.objects.create_user(username='staff', password='password', email='staffmember@example.com')
54	

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b107_hardcoded_password_default.html
   Location: django-3.2.8/tests/auth_tests/test_views.py:55:4
54	
55	    def login(self, username='testclient', password='password'):
56	        response = self.client.post('/login/', {
57	            'username': username,
58	            'password': password,
59	        })
60	        self.assertIn(SESSION_KEY, self.client.session)
61	        return response
62	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'set-passwordcustom'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/tests/auth_tests/test_views.py:310:38
309	        path = path.replace('/reset/', '/reset/custom/token/')
310	        self.client.reset_url_token = 'set-passwordcustom'
311	        response = self.client.post(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_views.py:436:8
435	        # instead of fixture
436	        UUIDUser.objects.create_user(
437	            email=self.user_email,
438	            username='foo',
439	            password='foo',
440	        )
441	        return super()._test_confirm_start()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password1'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_views.py:492:8
491	        self.fail_login()
492	        self.login(password='password1')
493	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foobar'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_views.py:710:8
709	
710	        self.login(password='foobar')
711	        self.assertNotEqual(original_session_key, self.client.session.session_key)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password_2'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_views.py:731:8
730	        self.client.cookies[settings.SESSION_COOKIE_NAME] = original_session_key
731	        self.login(password='password_2')
732	        self.assertNotEqual(original_session_key, self.client.session.session_key)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password1'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_views.py:1231:8
1230	        self.logout()
1231	        self.login(password='password1')
1232	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'shouldnotchange'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/tests/auth_tests/test_views.py:1280:13
1279	        data = self.get_user_data(u)
1280	        data['password'] = 'shouldnotchange'
1281	        change_url = reverse('auth_test_admin:auth_user_change', args=(u.pk,))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_views.py:1295:12
1294	    def test_admin_password_change(self):
1295	        u = UUIDUser.objects.create_superuser(username='uuid', email='foo@bar.com', password='test')
1296	        self.assertTrue(self.client.login(username='uuid', password='test'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/test_views.py:1296:24
1295	        u = UUIDUser.objects.create_superuser(username='uuid', email='foo@bar.com', password='test')
1296	        self.assertTrue(self.client.login(username='uuid', password='test'))
1297	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/tests/auth_tests/urls.py:17:8
16	    def __init__(self, request, *args, **kwargs):
17	        assert isinstance(request, HttpRequest)
18	        super().__init__(request, *args, **kwargs)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'set-passwordcustom'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/auth_tests/urls.py:117:8
116	        'reset/custom/token/<uidb64>/<token>/',
117	        views.PasswordResetConfirmView.as_view(reset_url_token='set-passwordcustom'),
118	    ),

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/tests/backends/base/test_base.py:51:14
50	        # by putting a false condition in the WHERE clause.
51	        sql = 'DELETE FROM {} WHERE 0=1 AND 0=%s'.format(Square._meta.db_table)
52	        if params is None:

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: django-3.2.8/tests/backends/mysql/test_creation.py:1:0
1	import subprocess
2	import unittest
3	from io import StringIO

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'p@ssword'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/tests/backends/oracle/tests.py:87:33
86	        old_password = connection.settings_dict['PASSWORD']
87	        connection.settings_dict['PASSWORD'] = 'p@ssword'
88	        try:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/tests/backends/postgresql/test_server_side_cursors.py:24:27
23	        with connection.cursor() as cursor:
24	            cursor.execute('SELECT {fields} FROM pg_cursors;'.format(fields=self.cursor_fields))
25	            cursors = cursor.fetchall()

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html
   Location: django-3.2.8/tests/backends/tests.py:70:15
69	        """last_executed_query() returns a string."""
70	        data = RawData.objects.filter(raw_data=b'\x00\x46  \xFE').extra(select={'föö': 1})
71	        sql, params = data.query.sql_with_params()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/tests/backends/tests.py:97:14
96	        square_opts = Square._meta
97	        sql = 'INSERT INTO %s (%s, %s) VALUES (%%(root)s, %%(square)s)' % (
98	            connection.introspection.identifier_converter(square_opts.db_table),
99	            connection.ops.quote_name(square_opts.get_field('root').column),
100	            connection.ops.quote_name(square_opts.get_field('square').column),
101	        )
102	        with connection.cursor() as cursor:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/tests/backends/tests.py:116:21
115	        with connection.cursor() as cursor:
116	            query = ('INSERT INTO %s (%s, %s) VALUES (%%s, %%s)' % (
117	                connection.introspection.identifier_converter('backends_square'),
118	                connection.ops.quote_name('root'),
119	                connection.ops.quote_name('square')
120	            ))
121	            with self.assertRaises(Exception):

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/tests/backends/tests.py:252:20
251	        if paramstyle == 'format':
252	            query = 'INSERT INTO %s (%s, %s) VALUES (%%s, %%s)' % (tbl, f1, f2)
253	        elif paramstyle == 'pyformat':

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/tests/backends/tests.py:254:20
253	        elif paramstyle == 'pyformat':
254	            query = 'INSERT INTO %s (%s, %s) VALUES (%%(root)s, %%(square)s)' % (tbl, f1, f2)
255	        else:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/tests/backends/tests.py:331:16
330	            cursor.execute(
331	                'SELECT %s, %s FROM %s ORDER BY %s' % (
332	                    qn(f3.column),
333	                    qn(f4.column),
334	                    connection.introspection.identifier_converter(opts2.db_table),
335	                    qn(f3.column),
336	                )
337	            )

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'françois'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/tests/backends/tests.py:344:33
343	        old_password = connection.settings_dict['PASSWORD']
344	        connection.settings_dict['PASSWORD'] = "françois"
345	        try:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b110_try_except_pass.html
   Location: django-3.2.8/tests/backends/tests.py:423:12
422	                connection.close()
423	            except Exception:
424	                pass
425	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/tests/backends/tests.py:444:15
443	
444	        sql = ('INSERT INTO %s (%s, %s) VALUES (%%s, %%s)' % (
445	            connection.introspection.identifier_converter('backends_square'),
446	            connection.ops.quote_name('root'),
447	            connection.ops.quote_name('square'),
448	        ))
449	        with connection.cursor() as cursor:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/tests/builtin_server/tests.py:24:8
23	
24	        assert isinstance(data, bytes), "write() argument must be bytestring"
25	

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html
   Location: django-3.2.8/tests/bulk_create/models.py:99:48
98	    file_field = models.FileField(null=True, default='file.txt')
99	    file_path_field = models.FilePathField(path='/tmp', null=True, default='file.txt')
100	    generic_ip_address_field = models.GenericIPAddressField(null=True, default='127.0.0.1')

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle
   Location: django-3.2.8/tests/cache/tests.py:6:0
5	import os
6	import pickle
7	import re

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b110_try_except_pass.html
   Location: django-3.2.8/tests/cache/tests.py:1408:8
1407	            cache.set('small_value', large_value)
1408	        except Exception:
1409	            # Most clients (e.g. pymemcache or pylibmc) raise when the value is
1410	            # too large. This test is primarily checking that the key was
1411	            # deleted, so the return/exception behavior for the set() itself is
1412	            # not important.
1413	            pass
1414	        # small_value should be deleted, or set if configured to accept larger values

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/check_framework/test_security.py:386:5
385	
386	    @override_settings(SECRET_KEY='')
387	    def test_empty_secret_key(self):

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '1bcdefghij2bcdefghij3bcdefghij4bcdefghij5bcdefghij6bcdefghijABCD'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/tests/csrf_tests/test_context_processor.py:11:21
10	        request = HttpRequest()
11	        test_token = '1bcdefghij2bcdefghij3bcdefghij4bcdefghij5bcdefghij6bcdefghijABCD'
12	        request.META['CSRF_COOKIE'] = test_token

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: django-3.2.8/tests/dbshell/test_mysql.py:2:0
1	import os
2	import subprocess
3	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html
   Location: django-3.2.8/tests/dbshell/test_mysql.py:207:12
206	        with self.assertRaises(subprocess.CalledProcessError) as ctx:
207	            subprocess.run(args, check=True, env=env)
208	        self.assertNotIn('somepassword', str(ctx.exception))

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: django-3.2.8/tests/dbshell/test_postgresql.py:3:0
2	import signal
3	import subprocess
4	import sys

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'sésame'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/tests/dbshell/test_postgresql.py:86:19
85	        username = 'rôle'
86	        password = 'sésame'
87	        self.assertEqual(

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html
   Location: django-3.2.8/tests/dbshell/test_postgresql.py:130:12
129	        with self.assertRaises(subprocess.CalledProcessError) as ctx:
130	            subprocess.run(args, check=True, env=env)
131	        self.assertNotIn('somepassword', str(ctx.exception))

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html
   Location: django-3.2.8/tests/defer/tests.py:72:28
71	        qs = Primary.objects.all()
72	        self.assert_delayed(qs.defer("name").extra(select={"a": 1})[0], 1)
73	        self.assert_delayed(qs.extra(select={"a": 1}).defer("name")[0], 1)

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html
   Location: django-3.2.8/tests/defer/tests.py:73:28
72	        self.assert_delayed(qs.defer("name").extra(select={"a": 1})[0], 1)
73	        self.assert_delayed(qs.extra(select={"a": 1}).defer("name")[0], 1)
74	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/tests/deprecation/test_default_hashing_algorithm.py:22:37
21	        settings_module = ModuleType('fake_settings_module')
22	        settings_module.SECRET_KEY = 'foo'
23	        settings_module.DEFAULT_HASHING_ALGORITHM = 'sha1'

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle
   Location: django-3.2.8/tests/expressions/tests.py:2:0
1	import datetime
2	import pickle
3	import unittest

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/expressions/tests.py:739:25
738	        expr.convert_value  # populate cached property
739	        self.assertEqual(pickle.loads(pickle.dumps(expr)), expr)
740	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/extra_regress/tests.py:13:16
12	    def setUpTestData(cls):
13	        cls.u = User.objects.create_user(
14	            username="fred",
15	            password="secret",
16	            email="fred@example.com"
17	        )
18	

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html
   Location: django-3.2.8/tests/extra_regress/tests.py:41:13
40	        # Queryset to match most recent revision:
41	        qs = RevisionableModel.objects.extra(
42	            where=["%(table)s.id IN (SELECT MAX(rev.id) FROM %(table)s rev GROUP BY rev.base_id)" % {
43	                'table': RevisionableModel._meta.db_table,
44	            }]
45	        )
46	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/tests/extra_regress/tests.py:42:19
41	        qs = RevisionableModel.objects.extra(
42	            where=["%(table)s.id IN (SELECT MAX(rev.id) FROM %(table)s rev GROUP BY rev.base_id)" % {
43	                'table': RevisionableModel._meta.db_table,
44	            }]
45	        )

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html
   Location: django-3.2.8/tests/extra_regress/tests.py:76:13
75	        qs = User.objects.extra(select={'alpha': '%s', 'beta': "2", 'gamma': '%s'}, select_params=(1, 3))
76	        qs = qs.extra(select={"beta": 4})
77	        qs = qs.extra(select={"alpha": "%s"}, select_params=[5])

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html
   Location: django-3.2.8/tests/extra_regress/tests.py:144:12
143	        self.assertSequenceEqual(
144	            User.objects.filter(pk=self.u.id).extra(select={'extra_field': 1}).distinct(),
145	            [self.u],

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html
   Location: django-3.2.8/tests/extra_regress/tests.py:148:12
147	        self.assertSequenceEqual(
148	            User.objects.filter(pk=self.u.id).extra(select={'extra_field': 1}, order_by=['extra_field']),
149	            [self.u],

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html
   Location: django-3.2.8/tests/extra_regress/tests.py:152:12
151	        self.assertSequenceEqual(
152	            User.objects.filter(pk=self.u.id).extra(select={'extra_field': 1}, order_by=['extra_field']).distinct(),
153	            [self.u],

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html
   Location: django-3.2.8/tests/extra_regress/tests.py:363:17
362	        self.assertEqual(
363	            list(TestObject.objects.extra(select={'extra': 1}).values('pk')),
364	            [{'pk': obj.pk}]

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html
   Location: django-3.2.8/tests/extra_regress/tests.py:369:23
368	            TestObject.objects.filter(
369	                pk__in=TestObject.objects.extra(select={'extra': 1}).values('pk')
370	            ),

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html
   Location: django-3.2.8/tests/extra_regress/tests.py:375:17
374	        self.assertEqual(
375	            list(TestObject.objects.values('pk').extra(select={'extra': 1})),
376	            [{'pk': obj.pk}]

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html
   Location: django-3.2.8/tests/extra_regress/tests.py:381:23
380	            TestObject.objects.filter(
381	                pk__in=TestObject.objects.values('pk').extra(select={'extra': 1})
382	            ),

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b311-random
   Location: django-3.2.8/tests/file_storage/models.py:43:26
42	        # to make sure it only gets called once.
43	        return '%s/%s' % (random.randint(100, 999), filename)
44	

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html
   Location: django-3.2.8/tests/file_storage/test_generate_filename.py:42:13
41	        candidates = [
42	            ('/tmp/..', '..'),
43	            ('/tmp/.', '.'),

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html
   Location: django-3.2.8/tests/file_storage/test_generate_filename.py:43:13
42	            ('/tmp/..', '..'),
43	            ('/tmp/.', '.'),
44	            ('', ''),

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html
   Location: django-3.2.8/tests/file_storage/test_generate_filename.py:56:20
55	    def test_storage_dangerous_paths_dir_name(self):
56	        file_name = '/tmp/../path'
57	        s = FileSystemStorage()

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html
   Location: django-3.2.8/tests/file_storage/test_generate_filename.py:88:12
87	        candidates = [
88	            '/tmp/path',
89	            '/tmp/../path',
90	        ]
91	        for file_name in candidates:
92	            msg = f"Detected path traversal attempt in '{file_name}'"

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html
   Location: django-3.2.8/tests/file_storage/test_generate_filename.py:89:12
88	            '/tmp/path',
89	            '/tmp/../path',
90	        ]
91	        for file_name in candidates:
92	            msg = f"Detected path traversal attempt in '{file_name}'"
93	            with self.subTest(file_name=file_name):

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html
   Location: django-3.2.8/tests/file_storage/test_generate_filename.py:120:12
119	        candidates = [
120	            '/tmp/.',
121	            '/tmp/..',
122	            '/tmp/../path',
123	            '/tmp/path',
124	            'some/folder/',
125	            'some/folder/.',
126	            'some/folder/..',
127	            'some/folder/???',
128	            'some/folder/$.$.$',
129	            'some/../test.txt',
130	            '',
131	        ]
132	        for file_name in candidates:
133	            with self.subTest(file_name=file_name):

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html
   Location: django-3.2.8/tests/file_storage/test_generate_filename.py:121:12
120	            '/tmp/.',
121	            '/tmp/..',
122	            '/tmp/../path',
123	            '/tmp/path',
124	            'some/folder/',
125	            'some/folder/.',
126	            'some/folder/..',
127	            'some/folder/???',
128	            'some/folder/$.$.$',
129	            'some/../test.txt',
130	            '',
131	        ]
132	        for file_name in candidates:
133	            with self.subTest(file_name=file_name):
134	                self.assertEqual(f.generate_filename(None, file_name), 'test.txt')

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html
   Location: django-3.2.8/tests/file_storage/test_generate_filename.py:122:12
121	            '/tmp/..',
122	            '/tmp/../path',
123	            '/tmp/path',
124	            'some/folder/',
125	            'some/folder/.',
126	            'some/folder/..',
127	            'some/folder/???',
128	            'some/folder/$.$.$',
129	            'some/../test.txt',
130	            '',
131	        ]
132	        for file_name in candidates:
133	            with self.subTest(file_name=file_name):
134	                self.assertEqual(f.generate_filename(None, file_name), 'test.txt')
135	

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html
   Location: django-3.2.8/tests/file_storage/test_generate_filename.py:123:12
122	            '/tmp/../path',
123	            '/tmp/path',
124	            'some/folder/',
125	            'some/folder/.',
126	            'some/folder/..',
127	            'some/folder/???',
128	            'some/folder/$.$.$',
129	            'some/../test.txt',
130	            '',
131	        ]
132	        for file_name in candidates:
133	            with self.subTest(file_name=file_name):
134	                self.assertEqual(f.generate_filename(None, file_name), 'test.txt')
135	
136	    def test_filefield_generate_filename_upload_to_absolute_path(self):

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html
   Location: django-3.2.8/tests/file_storage/test_generate_filename.py:138:19
137	        def upload_to(instance, filename):
138	            return '/tmp/' + filename
139	

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html
   Location: django-3.2.8/tests/file_storage/test_generate_filename.py:155:19
154	        def upload_to(instance, filename):
155	            return '/tmp/' + filename
156	

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: django-3.2.8/tests/file_storage/tests.py:1076:27
1075	        """
1076	        file_like_object = urlopen(self.live_server_url + '/')
1077	        f = File(file_like_object)

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: django-3.2.8/tests/file_storage/tests.py:1080:22
1079	
1080	        remote_file = urlopen(self.live_server_url + '/')
1081	        with self.storage.open(stored_filename) as stored_file:

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html
   Location: django-3.2.8/tests/file_uploads/tests.py:28:4
27	CANDIDATE_TRAVERSAL_FILE_NAMES = [
28	    '/tmp/hax0rd.txt',          # Absolute path, *nix-style.
29	    'C:\\Windows\\hax0rd.txt',  # Absolute path, win-style.
30	    'C:/Windows/hax0rd.txt',    # Absolute path, broken-style.
31	    '\\tmp\\hax0rd.txt',        # Absolute path, broken in a different way.
32	    '/tmp\\hax0rd.txt',         # Absolute path, broken by mixing.
33	    'subdir/hax0rd.txt',        # Descendant path, *nix-style.
34	    'subdir\\hax0rd.txt',       # Descendant path, win-style.
35	    'sub/dir\\hax0rd.txt',      # Descendant path, mixed.
36	    '../../hax0rd.txt',         # Relative path, *nix-style.
37	    '..\\..\\hax0rd.txt',       # Relative path, win-style.
38	    '../..\\hax0rd.txt',        # Relative path, mixed.
39	    '..&#x2F;hax0rd.txt',       # HTML entities.
40	    '..&sol;hax0rd.txt',        # HTML entities.
41	]
42	
43	CANDIDATE_INVALID_FILE_NAMES = [

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html
   Location: django-3.2.8/tests/file_uploads/tests.py:32:4
31	    '\\tmp\\hax0rd.txt',        # Absolute path, broken in a different way.
32	    '/tmp\\hax0rd.txt',         # Absolute path, broken by mixing.
33	    'subdir/hax0rd.txt',        # Descendant path, *nix-style.
34	    'subdir\\hax0rd.txt',       # Descendant path, win-style.
35	    'sub/dir\\hax0rd.txt',      # Descendant path, mixed.
36	    '../../hax0rd.txt',         # Relative path, *nix-style.
37	    '..\\..\\hax0rd.txt',       # Relative path, win-style.
38	    '../..\\hax0rd.txt',        # Relative path, mixed.
39	    '..&#x2F;hax0rd.txt',       # HTML entities.
40	    '..&sol;hax0rd.txt',        # HTML entities.
41	]
42	
43	CANDIDATE_INVALID_FILE_NAMES = [
44	    '/tmp/',        # Directory, *nix-style.
45	    'c:\\tmp\\',    # Directory, win-style.
46	    '/tmp/.',       # Directory dot, *nix-style.
47	    'c:\\tmp\\.',   # Directory dot, *nix-style.

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html
   Location: django-3.2.8/tests/file_uploads/tests.py:44:4
43	CANDIDATE_INVALID_FILE_NAMES = [
44	    '/tmp/',        # Directory, *nix-style.
45	    'c:\\tmp\\',    # Directory, win-style.
46	    '/tmp/.',       # Directory dot, *nix-style.
47	    'c:\\tmp\\.',   # Directory dot, *nix-style.
48	    '/tmp/..',      # Parent directory, *nix-style.
49	    'c:\\tmp\\..',  # Parent directory, win-style.
50	    '',             # Empty filename.
51	]
52	
53	

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html
   Location: django-3.2.8/tests/file_uploads/tests.py:46:4
45	    'c:\\tmp\\',    # Directory, win-style.
46	    '/tmp/.',       # Directory dot, *nix-style.
47	    'c:\\tmp\\.',   # Directory dot, *nix-style.
48	    '/tmp/..',      # Parent directory, *nix-style.
49	    'c:\\tmp\\..',  # Parent directory, win-style.
50	    '',             # Empty filename.
51	]
52	
53	
54	@override_settings(MEDIA_ROOT=MEDIA_ROOT, ROOT_URLCONF='file_uploads.urls', MIDDLEWARE=[])
55	class FileUploadTests(TestCase):

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html
   Location: django-3.2.8/tests/file_uploads/tests.py:48:4
47	    'c:\\tmp\\.',   # Directory dot, *nix-style.
48	    '/tmp/..',      # Parent directory, *nix-style.
49	    'c:\\tmp\\..',  # Parent directory, win-style.
50	    '',             # Empty filename.
51	]
52	
53	
54	@override_settings(MEDIA_ROOT=MEDIA_ROOT, ROOT_URLCONF='file_uploads.urls', MIDDLEWARE=[])
55	class FileUploadTests(TestCase):
56	
57	    @classmethod

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html
   Location: django-3.2.8/tests/file_uploads/tests.py:69:12
68	        candidates = [
69	            '/tmp/',
70	            '/tmp/..',
71	            '/tmp/.',
72	        ]
73	        if sys.platform == 'win32':
74	            candidates.extend([

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html
   Location: django-3.2.8/tests/file_uploads/tests.py:70:12
69	            '/tmp/',
70	            '/tmp/..',
71	            '/tmp/.',
72	        ]
73	        if sys.platform == 'win32':
74	            candidates.extend([
75	                'c:\\tmp\\',

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html
   Location: django-3.2.8/tests/file_uploads/tests.py:71:12
70	            '/tmp/..',
71	            '/tmp/.',
72	        ]
73	        if sys.platform == 'win32':
74	            candidates.extend([
75	                'c:\\tmp\\',
76	                'c:\\tmp\\..',

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b324_hashlib.html
   Location: django-3.2.8/tests/file_uploads/tests.py:109:47
108	                try:
109	                    post_data[key + '_hash'] = hashlib.sha1(post_data[key].read()).hexdigest()
110	                    post_data[key].seek(0)

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b324_hashlib.html
   Location: django-3.2.8/tests/file_uploads/tests.py:112:47
111	                except AttributeError:
112	                    post_data[key + '_hash'] = hashlib.sha1(post_data[key].encode()).hexdigest()
113	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b324_hashlib.html
   Location: django-3.2.8/tests/file_uploads/views.py:46:23
45	        if isinstance(value, UploadedFile):
46	            new_hash = hashlib.sha1(value.read()).hexdigest()
47	        else:

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b324_hashlib.html
   Location: django-3.2.8/tests/file_uploads/views.py:48:23
47	        else:
48	            new_hash = hashlib.sha1(value.encode()).hexdigest()
49	        if new_hash != submitted_hash:

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle
   Location: django-3.2.8/tests/forms_tests/field_tests/test_booleanfield.py:1:0
1	import pickle
2	
3	from django.core.exceptions import ValidationError

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/forms_tests/field_tests/test_booleanfield.py:43:30
42	    def test_boolean_picklable(self):
43	        self.assertIsInstance(pickle.loads(pickle.dumps(BooleanField())), BooleanField)
44	

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle
   Location: django-3.2.8/tests/forms_tests/field_tests/test_filefield.py:1:0
1	import pickle
2	
3	from django.core.exceptions import ValidationError

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/forms_tests/field_tests/test_filefield.py:85:30
84	    def test_file_picklable(self):
85	        self.assertIsInstance(pickle.loads(pickle.dumps(FileField())), FileField)

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/tests/forms_tests/tests/test_error_messages.py:227:23
226	                    return ''
227	                return mark_safe('<div class="error">%s</div>' % ''.join('<p>%s</p>' % e for e in self))
228	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/forms_tests/tests/test_error_messages.py:227:23
226	                    return ''
227	                return mark_safe('<div class="error">%s</div>' % ''.join('<p>%s</p>' % e for e in self))
228	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/forms_tests/tests/test_forms.py:989:48
988	            special_name = CharField(label="<em>Special</em> Field")
989	            special_safe_name = CharField(label=mark_safe("<em>Special</em> Field"))
990	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/tests/forms_tests/tests/test_forms.py:996:20
995	                raise ValidationError(
996	                    mark_safe("'<b>%s</b>' is a safe string" % self.cleaned_data['special_safe_name'])
997	                )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/forms_tests/tests/test_forms.py:996:20
995	                raise ValidationError(
996	                    mark_safe("'<b>%s</b>' is a safe string" % self.cleaned_data['special_safe_name'])
997	                )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/forms_tests/tests/test_forms.py:3080:14
3079	            (('custom&',), {}, '<label for="id_field">custom&amp;:</label>'),
3080	            ((mark_safe('custom&'),), {}, '<label for="id_field">custom&:</label>'),
3081	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/forms_tests/tests/test_utils.py:120:27
119	        self.assertHTMLEqual(
120	            str(ErrorList([mark_safe(example)])),
121	            '<ul class="errorlist"><li>Example of link: '

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/forms_tests/tests/test_utils.py:130:35
129	        self.assertHTMLEqual(
130	            str(ErrorDict({'name': mark_safe(example)})),
131	            '<ul class="errorlist"><li>nameExample of link: '

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/forms_tests/widget_tests/test_select.py:165:49
164	    def test_choices_escaping(self):
165	        choices = (('bad', 'you & me'), ('good', mark_safe('you &gt; me')))
166	        self.check_html(self.widget(choices=choices), 'escape', None, html=(

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/forms_tests/widget_tests/test_textarea.py:32:44
31	    def test_mark_safe(self):
32	        self.check_html(self.widget, 'msg', mark_safe('pre &quot;quoted&quot; value'), html=(
33	            '<textarea rows="10" cols="40" name="msg">pre &quot;quoted&quot; value</textarea>'

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/forms_tests/widget_tests/test_textinput.py:74:44
73	    def test_attrs_safestring(self):
74	        widget = TextInput(attrs={'onBlur': mark_safe("function('foo')")})
75	        self.check_html(widget, 'email', '', html='<input onBlur="function(\'foo\')" type="text" name="email">')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/generic_inline_admin/tests.py:21:24
20	    def setUpTestData(cls):
21	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
22	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/tests/generic_views/test_base.py:251:16
250	            def dispatch(self, request, *args, **kwargs):
251	                assert hasattr(self, 'attr')
252	                return super().dispatch(request, *args, **kwargs)

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle
   Location: django-3.2.8/tests/gis_tests/gdal_tests/test_geom.py:2:0
1	import json
2	import pickle
3	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/gis_tests/gdal_tests/test_geom.py:473:13
472	        g1 = OGRGeometry('LINESTRING(1 1 1,2 2 2,3 3 3)', 'WGS84')
473	        g2 = pickle.loads(pickle.dumps(g1))
474	        self.assertEqual(g1, g2)

--------------------------------------------------
>> Issue: [B408:blacklist] Using minidom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace minidom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b408-import-xml-minidom
   Location: django-3.2.8/tests/gis_tests/geoapp/test_feeds.py:1:0
1	from xml.dom import minidom
2	
3	from django.conf import settings

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/gis_tests/geoapp/test_feeds.py:28:15
27	        # Uses `GEOSGeometry` in `item_geometry`
28	        doc1 = minidom.parseString(self.client.get('/feeds/rss1/').content)
29	        # Uses a 2-tuple in `item_geometry`

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/gis_tests/geoapp/test_feeds.py:30:15
29	        # Uses a 2-tuple in `item_geometry`
30	        doc2 = minidom.parseString(self.client.get('/feeds/rss2/').content)
31	        feed1, feed2 = doc1.firstChild, doc2.firstChild

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/gis_tests/geoapp/test_feeds.py:53:15
52	        "Testing geographic feeds using GeoRSS over Atom."
53	        doc1 = minidom.parseString(self.client.get('/feeds/atom1/').content)
54	        doc2 = minidom.parseString(self.client.get('/feeds/atom2/').content)

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/gis_tests/geoapp/test_feeds.py:54:15
53	        doc1 = minidom.parseString(self.client.get('/feeds/atom1/').content)
54	        doc2 = minidom.parseString(self.client.get('/feeds/atom2/').content)
55	        feed1, feed2 = doc1.firstChild, doc2.firstChild

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/gis_tests/geoapp/test_feeds.py:72:14
71	        "Testing geographic feeds using W3C Geo."
72	        doc = minidom.parseString(self.client.get('/feeds/w3cgeo1/').content)
73	        feed = doc.firstChild

--------------------------------------------------
>> Issue: [B408:blacklist] Using minidom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace minidom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b408-import-xml-minidom
   Location: django-3.2.8/tests/gis_tests/geoapp/test_sitemaps.py:3:0
2	from io import BytesIO
3	from xml.dom import minidom
4	

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/gis_tests/geoapp/test_sitemaps.py:29:18
28	        for kml_type in ('kml', 'kmz'):
29	            doc = minidom.parseString(self.client.get('/sitemaps/%s.xml' % kml_type).content)
30	

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/gis_tests/geoapp/test_sitemaps.py:44:30
43	                if kml_type == 'kml':
44	                    kml_doc = minidom.parseString(self.client.get(kml_url).content)
45	                elif kml_type == 'kmz':

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/gis_tests/geoapp/test_sitemaps.py:51:34
50	                        self.assertEqual('doc.kml', zf.filelist[0].filename)
51	                        kml_doc = minidom.parseString(zf.read('doc.kml'))
52	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/tests/gis_tests/geoapp/tests.py:176:12
175	        cities2 = list(City.objects.raw(
176	            'select id, name, %s as point from geoapp_city' % point_select
177	        ))

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle
   Location: django-3.2.8/tests/gis_tests/geos_tests/test_geos.py:4:0
3	import json
4	import pickle
5	import random

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b311-random
   Location: django-3.2.8/tests/gis_tests/geos_tests/test_geos.py:863:28
862	                pnt = mp[i]
863	                new = Point(random.randint(21, 100), random.randint(21, 100))
864	                # Testing the assignment

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b311-random
   Location: django-3.2.8/tests/gis_tests/geos_tests/test_geos.py:863:53
862	                pnt = mp[i]
863	                new = Point(random.randint(21, 100), random.randint(21, 100))
864	                # Testing the assignment

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/gis_tests/geos_tests/test_geos.py:1220:17
1219	            s1 = pickle.dumps(geom)
1220	            g1 = pickle.loads(s1)
1221	            self.assertEqual(geom, g1)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/tests/handlers/tests_custom_error_handlers.py:15:8
14	        # TemplateResponse-based exception response.
15	        assert response.content
16	        return response

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle
   Location: django-3.2.8/tests/httpwrappers/tests.py:4:0
3	import os
4	import pickle
5	import unittest

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/httpwrappers/tests.py:221:13
220	        q = QueryDict()
221	        q1 = pickle.loads(pickle.dumps(q, 2))
222	        self.assertEqual(q, q1)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/httpwrappers/tests.py:224:13
223	        q = QueryDict('a=b&c=d')
224	        q1 = pickle.loads(pickle.dumps(q, 2))
225	        self.assertEqual(q, q1)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/httpwrappers/tests.py:227:13
226	        q = QueryDict('a=b&c=d&a=1')
227	        q1 = pickle.loads(pickle.dumps(q, 2))
228	        self.assertEqual(q, q1)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/httpwrappers/tests.py:819:17
818	        for proto in range(pickle.HIGHEST_PROTOCOL + 1):
819	            C1 = pickle.loads(pickle.dumps(C, protocol=proto))
820	            self.assertEqual(C1.output(), expected_output)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/tests/humanize_tests/tests.py:258:8
257	        result_list_with_tz_support = result_list[:]
258	        assert result_list_with_tz_support[-4] == '2\xa0days, 6\xa0hours from now'
259	        result_list_with_tz_support[-4] == '2\xa0days, 5\xa0hours from now'

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: django-3.2.8/tests/i18n/test_compilation.py:7:0
6	from pathlib import Path
7	from subprocess import run
8	from unittest import mock

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html
   Location: django-3.2.8/tests/i18n/test_compilation.py:197:84
196	        env.update({'LANG': 'C'})
197	        with mock.patch('django.core.management.utils.run', lambda *args, **kwargs: run(*args, env=env, **kwargs)):
198	            cmd = MakeMessagesCommand()

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle
   Location: django-3.2.8/tests/i18n/tests.py:5:0
4	import os
5	import pickle
6	import re

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/i18n/tests.py:222:13
221	        self.assertEqual(str(s1), "test")
222	        s2 = pickle.loads(pickle.dumps(s1))
223	        self.assertEqual(str(s2), "test")

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/i18n/tests.py:301:13
300	        self.assertEqual(s1 % 8, '8 good results')
301	        s2 = pickle.loads(pickle.dumps(s1))
302	        self.assertEqual(s2 % 1, '1 good result')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/i18n/tests.py:319:16
318	            self.assertEqual('', gettext(''))
319	            s = mark_safe('')
320	            self.assertEqual(s, gettext(s))

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/i18n/tests.py:330:13
329	        trans_real._translations = {}
330	        s1 = mark_safe('Password')
331	        s2 = mark_safe('May')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/i18n/tests.py:331:13
330	        s1 = mark_safe('Password')
331	        s2 = mark_safe('May')
332	        with translation.override('de', deactivate=True):

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/i18n/tests.py:337:43
336	        self.assertEqual('Passworda', s1 + SafeString('a'))
337	        self.assertEqual('Passworda', s1 + mark_safe('a'))
338	        self.assertEqual('aPassword', mark_safe('a') + s1)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/i18n/tests.py:338:38
337	        self.assertEqual('Passworda', s1 + mark_safe('a'))
338	        self.assertEqual('aPassword', mark_safe('a') + s1)
339	        self.assertEqual('as', mark_safe('a') + mark_safe('s'))

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/i18n/tests.py:339:31
338	        self.assertEqual('aPassword', mark_safe('a') + s1)
339	        self.assertEqual('as', mark_safe('a') + mark_safe('s'))
340	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/i18n/tests.py:339:48
338	        self.assertEqual('aPassword', mark_safe('a') + s1)
339	        self.assertEqual('as', mark_safe('a') + mark_safe('s'))
340	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/tests/inline_formsets/tests.py:196:16
195	            def __init__(self, *args, **kwargs):
196	                assert 'poet' in self._meta.fields
197	                super().__init__(*args, **kwargs)

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html
   Location: django-3.2.8/tests/lookup/tests.py:317:12
316	        self.assertSequenceEqual(
317	            Article.objects.filter(id=self.a1.id).extra(select=data).values(*data),
318	            [{

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/mail/tests.py:1148:15
1147	        """
1148	        conn = mail.get_connection(username='', password='')
1149	        conn.close()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/mail/tests.py:1157:15
1156	        closed = [False]
1157	        conn = mail.get_connection(username='', password='')
1158	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/tests/mail/tests.py:1376:8
1375	    def start(self):
1376	        assert not self.active
1377	        self.__flag = threading.Event()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'not empty password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/mail/tests.py:1445:5
1444	
1445	    @override_settings(
1446	        EMAIL_HOST_USER="not empty username",
1447	        EMAIL_HOST_PASSWORD='not empty password',
1448	    )
1449	    def test_email_authentication_use_settings(self):

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/mail/tests.py:1459:18
1458	    def test_email_authentication_override_settings(self):
1459	        backend = smtp.EmailBackend(username='username', password='password')
1460	        self.assertEqual(backend.username, 'username')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'not empty password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/mail/tests.py:1454:5
1453	
1454	    @override_settings(
1455	        EMAIL_HOST_USER="not empty username",
1456	        EMAIL_HOST_PASSWORD='not empty password',
1457	    )
1458	    def test_email_authentication_override_settings(self):

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/mail/tests.py:1468:18
1467	    def test_email_disabled_authentication(self):
1468	        backend = smtp.EmailBackend(username='', password='')
1469	        self.assertEqual(backend.username, '')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'not empty password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/mail/tests.py:1463:5
1462	
1463	    @override_settings(
1464	        EMAIL_HOST_USER="not empty username",
1465	        EMAIL_HOST_PASSWORD='not empty password',
1466	    )
1467	    def test_email_disabled_authentication(self):

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'not empty password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/mail/tests.py:1477:18
1476	        """
1477	        backend = smtp.EmailBackend(
1478	            username='not empty username', password='not empty password')
1479	        with self.assertRaisesMessage(SMTPException, 'SMTP AUTH extension not supported by server.'):

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/mail/tests.py:1487:18
1486	        """
1487	        backend = smtp.EmailBackend(username='', password='')
1488	        self.assertIsNone(backend.connection)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/mail/tests.py:1507:18
1506	
1507	        backend = CustomEmailBackend(username='username', password='password')
1508	        with self.assertRaises(SMTPAuthenticationError):

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/mail/tests.py:1684:22
1683	        super().setUpClass()
1684	        cls.backend = smtp.EmailBackend(username='', password='')
1685	        cls.server.stop()

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html
   Location: django-3.2.8/tests/many_to_one/tests.py:235:13
234	        self.assertQuerysetEqual(
235	            (Article.objects
236	                .filter(reporter__first_name__exact='John')
237	                .extra(where=["many_to_one_reporter.last_name='%s'" % 'Smith'])),
238	            [new_article1, self.a]

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/messages_tests/test_cookie.py:182:44
181	        storage = self.get_storage()
182	        self.assertIsInstance(encode_decode(mark_safe("<b>Hello Django!</b>")), SafeData)
183	        self.assertNotIsInstance(encode_decode("<b>Hello Django!</b>"), SafeData)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/messages_tests/test_session.py:59:43
58	        storage = self.get_storage()
59	        message = Message(constants.DEBUG, mark_safe("<b>Hello Django!</b>"))
60	        set_session_data(storage, [message])

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b311-random
   Location: django-3.2.8/tests/middleware/tests.py:781:46
780	    compressible_string = b'a' * 500
781	    incompressible_string = b''.join(int2byte(random.randint(0, 255)) for _ in range(500))
782	    sequence = [b'a' * 500, b'b' * 200, b'a' * 300]

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/tests/migrations/test_multidb.py:104:14
103	
104	        sql = """
105	        INSERT INTO {0}_pony (pink, weight) VALUES (1, 3.55);
106	        INSERT INTO {0}_pony (pink, weight) VALUES (3, 5.0);
107	        """.format(app_label)
108	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/tests/migrations/test_state.py:1269:8
1268	        test_name = 'related_models_app'
1269	        assert not (abstract and proxy)
1270	        meta_contents = {

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b102_exec_used.html
   Location: django-3.2.8/tests/migrations/test_writer.py:205:12
204	        try:
205	            exec(string, globals(), d)
206	        except Exception as e:

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle
   Location: django-3.2.8/tests/model_fields/test_filefield.py:2:0
1	import os
2	import pickle
3	import sys

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/model_fields/test_filefield.py:128:42
127	                        dump = pickle.dumps(document)
128	                        loaded_document = pickle.loads(dump)
129	                        self.assertEqual(document.myfile, loaded_document.myfile)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/model_fields/test_filefield.py:147:40
146	                        myfile_dump = pickle.dumps(document.myfile)
147	                        loaded_myfile = pickle.loads(myfile_dump)
148	                        self.assertEqual(document.myfile, loaded_myfile)

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle
   Location: django-3.2.8/tests/model_fields/test_imagefield.py:174:8
173	        """
174	        import pickle
175	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/model_fields/test_imagefield.py:180:19
179	
180	        loaded_p = pickle.loads(dump)
181	        self.assertEqual(p.mugshot, loaded_p.mugshot)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/model_fields/test_imagefield.py:188:25
187	        mugshot_dump = pickle.dumps(p.mugshot)
188	        loaded_mugshot = pickle.loads(mugshot_dump)
189	        self.assertEqual(p.mugshot, loaded_mugshot)

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b611_django_rawsql_used.html
   Location: django-3.2.8/tests/model_fields/test_jsonfield.py:381:15
380	    def test_key_transform_raw_expression(self):
381	        expr = RawSQL(self.raw_sql, ['{"x": "bar"}'])
382	        self.assertSequenceEqual(

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b611_django_rawsql_used.html
   Location: django-3.2.8/tests/model_fields/test_jsonfield.py:388:15
387	    def test_nested_key_transform_raw_expression(self):
388	        expr = RawSQL(self.raw_sql, ['{"x": {"y": "bar"}}'])
389	        self.assertSequenceEqual(

--------------------------------------------------
>> Issue: [B611:django_rawsql_used] Use of RawSQL potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b611_django_rawsql_used.html
   Location: django-3.2.8/tests/model_fields/test_jsonfield.py:889:34
888	                'value__contained_by',
889	                KeyTransform('x', RawSQL(
890	                    self.raw_sql,
891	                    ['{"x": {"a": "b", "c": 1, "d": "e"}}'],
892	                )),
893	            ),

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle
   Location: django-3.2.8/tests/model_fields/tests.py:1:0
1	import pickle
2	
3	from django import forms

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/tests/model_forms/models.py:147:8
146	        been_here = getattr(self, 'been_saved', False)
147	        assert not been_here, "save_form_data called more than once"
148	        setattr(self, 'been_saved', True)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/tests/model_formsets/models.py:36:8
35	        # Ensure author is always accessible in clean method
36	        assert self.author.name is not None
37	

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle
   Location: django-3.2.8/tests/model_regress/test_pickle.py:1:0
1	import pickle
2	
3	import django

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/model_regress/test_pickle.py:26:12
25	        with self.assertRaisesMessage(RuntimeWarning, msg):
26	            pickle.loads(pickle.dumps(p))
27	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/model_regress/test_pickle.py:48:12
47	        with self.assertRaisesMessage(RuntimeWarning, msg):
48	            pickle.loads(pickle.dumps(p))
49	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/model_regress/test_pickle.py:64:19
63	        self.assertEqual(m.dont_pickle, 1)
64	        reloaded = pickle.loads(dumped)
65	        self.assertFalse(hasattr(reloaded, 'dont_pickle'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/modeladmin/test_actions.py:13:24
12	    def setUpTestData(cls):
13	        cls.superuser = User.objects.create_superuser(username='super', password='secret', email='super@example.com')
14	        content_type = ContentType.objects.get_for_model(Band)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/modeladmin/test_actions.py:18:19
17	            username = '%suser' % user_type
18	            user = User.objects.create_user(username=username, password='secret', is_staff=True)
19	            permission = Permission.objects.get(codename='%s_band' % user_type, content_type=content_type)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/modeladmin/tests.py:696:28
695	        mock_request = MockRequest()
696	        mock_request.user = User.objects.create_superuser(username='bob', email='bob@test.com', password='test')
697	        self.site.register(Band, ModelAdmin)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/modeladmin/tests.py:711:28
710	        mock_request = MockRequest()
711	        mock_request.user = User.objects.create_superuser(username='bob', email='bob@test.com', password='test')
712	

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle
   Location: django-3.2.8/tests/multiple_database/tests.py:2:0
1	import datetime
2	import pickle
3	from io import StringIO

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/multiple_database/tests.py:1638:36
1637	            qs = Book.objects.all()
1638	            self.assertEqual(qs.db, pickle.loads(pickle.dumps(qs)).db)
1639	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'fake_hash'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/multiple_database/tests.py:2106:15
2105	    def test_reverse_one_to_one_relation(self):
2106	        user = User(username='Someone', password='fake_hash')
2107	        profile = UserProfile()

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'abcdefg'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/tests/postgres_tests/integration_settings.py:1:13
1	SECRET_KEY = 'abcdefg'
2	
3	INSTALLED_APPS = [

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: django-3.2.8/tests/postgres_tests/test_integration.py:2:0
1	import os
2	import subprocess
3	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html
   Location: django-3.2.8/tests/postgres_tests/test_integration.py:14:17
13	        test_environ['PYTHONPATH'] = os.path.join(os.path.dirname(__file__), '../../')
14	        result = subprocess.run(
15	            [sys.executable, '-m', 'django', 'check', '--settings', 'integration_settings'],
16	            stdout=subprocess.DEVNULL,
17	            stderr=subprocess.PIPE,
18	            cwd=os.path.dirname(__file__),
19	            env=test_environ,
20	            encoding='utf-8',
21	        )
22	        self.assertEqual(result.returncode, 0, msg=result.stderr)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/tests/queries/models.py:396:8
395	        # Ticket #23721
396	        assert False, 'type checking should happen without calling model __iter__'
397	

--------------------------------------------------
>> Issue: [B104:hardcoded_bind_all_interfaces] Possible binding to all interfaces.
   Severity: Medium   Confidence: Medium
   CWE: CWE-605 (https://cwe.mitre.org/data/definitions/605.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b104_hardcoded_bind_all_interfaces.html
   Location: django-3.2.8/tests/queries/test_bulk_update.py:214:61
213	                models = [
214	                    CustomDbColumn.objects.create(ip_address='0.0.0.0')
215	                    for _ in range(10)

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html
   Location: django-3.2.8/tests/queries/test_qs_combinators.py:178:14
177	    def test_union_with_extra_and_values_list(self):
178	        qs1 = Number.objects.filter(num=1).extra(
179	            select={'count': 0},
180	        ).values_list('num', 'count')
181	        qs2 = Number.objects.filter(num=2).extra(select={'count': 1})

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html
   Location: django-3.2.8/tests/queries/test_qs_combinators.py:181:14
180	        ).values_list('num', 'count')
181	        qs2 = Number.objects.filter(num=2).extra(select={'count': 1})
182	        self.assertCountEqual(qs1.union(qs2), [(1, 0), (2, 1)])

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle
   Location: django-3.2.8/tests/queries/tests.py:2:0
1	import datetime
2	import pickle
3	import sys

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html
   Location: django-3.2.8/tests/queries/tests.py:571:12
570	        self.assertSequenceEqual(
571	            Item.objects.datetimes('created', 'day').extra(select={'a': 1}),
572	            [datetime.datetime(2007, 12, 19, 0, 0), datetime.datetime(2007, 12, 20, 0, 0)],

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html
   Location: django-3.2.8/tests/queries/tests.py:575:12
574	        self.assertSequenceEqual(
575	            Item.objects.extra(select={'a': 1}).datetimes('created', 'day'),
576	            [datetime.datetime(2007, 12, 19, 0, 0), datetime.datetime(2007, 12, 20, 0, 0)],

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queries/tests.py:671:17
670	        query = qs.query.get_compiler(qs.db).as_sql()[0]
671	        query2 = pickle.loads(pickle.dumps(qs.query))
672	        self.assertEqual(

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queries/tests.py:680:13
679	        qs = Item.objects.defer('name', 'creator')
680	        q2 = pickle.loads(pickle.dumps(qs))
681	        self.assertEqual(list(qs), list(q2))

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queries/tests.py:682:13
681	        self.assertEqual(list(qs), list(q2))
682	        q3 = pickle.loads(pickle.dumps(qs, pickle.HIGHEST_PROTOCOL))
683	        self.assertEqual(list(qs), list(q3))

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queries/tests.py:735:8
734	        qs = Item.objects.datetimes('created', 'month')
735	        pickle.loads(pickle.dumps(qs))
736	

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html
   Location: django-3.2.8/tests/queries/tests.py:1580:13
1579	        sql = 'case when %s > 2 then 1 else 0 end' % connection.ops.quote_name('rank')
1580	        qs = Ranking.objects.extra(select={'good': sql})
1581	        self.assertEqual(

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html
   Location: django-3.2.8/tests/queries/tests.py:1602:13
1601	        sql = 'case when %s > 2 then 1 else 0 end' % connection.ops.quote_name('rank')
1602	        qs = Ranking.objects.extra(select={'good': sql})
1603	        dicts = qs.values().order_by('id')

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queries/tests.py:2330:25
2329	        self.assertEqual(value, (72, None))
2330	        self.assertEqual(pickle.loads(pickle.dumps(value)), value)
2331	

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:2:0
1	import datetime
2	import pickle
3	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:17:30
16	    def assert_pickles(self, qs):
17	        self.assertEqual(list(pickle.loads(pickle.dumps(qs))), list(qs))
18	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:44:20
43	        original = Event.DoesNotExist("Doesn't exist")
44	        unpickled = pickle.loads(pickle.dumps(original))
45	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:53:22
52	        klass = Event.DoesNotExist
53	        self.assertIs(pickle.loads(pickle.dumps(klass)), klass)
54	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:57:22
56	        klass = Event.MultipleObjectsReturned
57	        self.assertIs(pickle.loads(pickle.dumps(klass)), klass)
58	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:62:22
61	        klass = Event.group.RelatedObjectDoesNotExist
62	        self.assertIs(pickle.loads(pickle.dumps(klass)), klass)
63	        # ForwardOneToOneDescriptor

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:65:22
64	        klass = Happening.event.RelatedObjectDoesNotExist
65	        self.assertIs(pickle.loads(pickle.dumps(klass)), klass)
66	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:69:22
68	        klass = Event.happening.RelatedObjectDoesNotExist
69	        self.assertIs(pickle.loads(pickle.dumps(klass)), klass)
70	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:72:8
71	    def test_manager_pickle(self):
72	        pickle.loads(pickle.dumps(Happening.objects))
73	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:80:19
79	        dumped = pickle.dumps(original)
80	        reloaded = pickle.loads(dumped)
81	        self.assertEqual(original, reloaded)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:86:19
85	        dumped = pickle.dumps(original)
86	        reloaded = pickle.loads(dumped)
87	        self.assertEqual(original, reloaded)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:100:19
99	        dumped = pickle.dumps(original)
100	        reloaded = pickle.loads(dumped)
101	        self.assertEqual(original, reloaded)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:109:19
108	        dumped = pickle.dumps(original)
109	        reloaded = pickle.loads(dumped)
110	        self.assertEqual(original, reloaded)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:126:17
125	        # First pickling
126	        groups = pickle.loads(pickle.dumps(groups))
127	        self.assertSequenceEqual(groups, [g])

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:130:17
129	        # Second pickling
130	        groups = pickle.loads(pickle.dumps(groups))
131	        self.assertSequenceEqual(groups, [g])

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:140:22
139	        with self.assertNumQueries(1):
140	            events2 = pickle.loads(pickle.dumps(events))
141	        with self.assertNumQueries(0):

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:149:18
148	        )
149	        groups2 = pickle.loads(pickle.dumps(groups))
150	        self.assertSequenceEqual(groups2.filter(id__gte=0), [g])

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:159:12
158	        with self.assertNumQueries(0):
159	            pickle.loads(pickle.dumps(groups))
160	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:172:15
171	        m2ms = M2MModel.objects.prefetch_related('groups')
172	        m2ms = pickle.loads(pickle.dumps(m2ms))
173	        self.assertSequenceEqual(m2ms, [m2m])

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:183:18
182	        )
183	        groups2 = pickle.loads(pickle.dumps(groups))
184	        self.assertSequenceEqual(groups2.filter(has_event=True), [group])

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:236:23
235	        ).annotate(sum_number=models.Sum('big_events__happening__number1'))
236	        groups_query = pickle.loads(pickle.dumps(groups.query))
237	        groups = Group.objects.all()

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:251:23
250	        ).annotate(count_groups=models.Count('first_m2mmodels__groups'))
251	        groups_query = pickle.loads(pickle.dumps(groups.query))
252	        groups = Group.objects.all()

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:264:25
263	        reloaded = Happening.objects.all()
264	        reloaded.query = pickle.loads(pickle.dumps(qs.query))
265	        self.assertEqual(

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:280:33
279	                reloaded = Happening.objects.all()
280	                reloaded.query = pickle.loads(pickle.dumps(qs.query))
281	                self.assertEqual(reloaded.get(), {'name': 'test'})

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:297:12
296	        with self.assertRaisesMessage(RuntimeWarning, msg):
297	            pickle.loads(pickle.dumps(qs))
298	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:310:12
309	        with self.assertRaisesMessage(RuntimeWarning, msg):
310	            pickle.loads(pickle.dumps(qs))
311	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:338:23
337	        with self.assertNumQueries(0):
338	            reloaded = pickle.loads(dumped)
339	            reloaded_events = Event.objects.none()

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/queryset_pickle/tests.py:351:23
350	        with self.assertNumQueries(0):
351	            reloaded = pickle.loads(dumped)
352	            reloaded_events = Event.objects.none()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/tests/raw_query/models.py:15:12
14	        for k in kwargs:
15	            assert k in [f.attname for f in self._meta.fields], \
16	                "Author.__init__ got an unexpected parameter: %s" % k
17	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/tests/raw_query/tests.py:155:20
154	        for select in selects:
155	            query = "SELECT %s FROM raw_query_author" % select
156	            authors = Author.objects.all()

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: django-3.2.8/tests/runtests.py:8:0
7	import socket
8	import subprocess
9	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html
   Location: django-3.2.8/tests/runtests.py:372:21
371	        print('***** Test labels: %s' % ' '.join(test_labels_a))
372	        failures_a = subprocess.run(subprocess_args + test_labels_a)
373	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html
   Location: django-3.2.8/tests/runtests.py:377:21
376	        print('')
377	        failures_b = subprocess.run(subprocess_args + test_labels_b)
378	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html
   Location: django-3.2.8/tests/runtests.py:419:19
418	              i + 1, len(test_labels), label))
419	        failures = subprocess.call(subprocess_args + [label, paired_test])
420	        if failures:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/tests/schema/fields.py:36:12
35	        if kwargs['rel'].through is not None:
36	            assert self.db_table is None, "Cannot specify a db_table if an intermediary model is used."
37	        super().__init__(**kwargs)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/tests/schema/tests.py:169:27
168	            schema_editor.add_field(model, field)
169	            cursor.execute("SELECT {} FROM {};".format(field_name, model._meta.db_table))
170	            database_default = cursor.fetchall()[0][0]

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/tests/select_for_update/tests.py:53:14
52	        self.cursor = self.new_connection.cursor()
53	        sql = 'SELECT * FROM %(db_table)s %(for_update)s;' % {
54	            'db_table': Person._meta.db_table,
55	            'for_update': self.new_connection.ops.for_update_sql(),
56	        }
57	        self.cursor.execute(sql, ())

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html
   Location: django-3.2.8/tests/select_for_update/tests.py:547:24
546	                    Person.objects.raw(
547	                        'SELECT * FROM %s %s' % (
548	                            Person._meta.db_table,
549	                            connection.ops.for_update_sql(nowait=True)
550	                        )
551	                    )

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/tests/select_related/tests.py:19:8
18	        models = [Domain, Kingdom, Phylum, Klass, Order, Family, Genus, Species]
19	        assert len(names) == len(models), (names, models)
20	

--------------------------------------------------
>> Issue: [B408:blacklist] Using minidom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace minidom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b408-import-xml-minidom
   Location: django-3.2.8/tests/serializers/test_xml.py:1:0
1	from xml.dom import minidom
2	
3	from django.core import serializers

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/serializers/test_xml.py:35:12
34	        try:
35	            minidom.parseString(serial_str)
36	        except Exception:

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/serializers/test_xml.py:44:14
43	        ret_list = []
44	        dom = minidom.parseString(serial_str)
45	        fields = dom.getElementsByTagName("object")

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/serializers/test_xml.py:53:14
52	        ret_list = []
53	        dom = minidom.parseString(serial_str)
54	        fields = dom.getElementsByTagName("field")

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: django-3.2.8/tests/servers/tests.py:40:15
39	    def urlopen(self, url):
40	        return urlopen(self.live_server_url + url)
41	

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: django-3.2.8/tests/servers/views.py:37:9
36	def subview_calling_view(request):
37	    with urlopen(request.GET['url'] + '/subview/') as response:
38	        return HttpResponse('subview calling view: {}'.format(response.read().decode()))

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: django-3.2.8/tests/servers/views.py:42:9
41	def check_model_instance_from_subview(request):
42	    with urlopen(request.GET['url'] + '/create_model_instance/'):
43	        pass

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: django-3.2.8/tests/servers/views.py:44:9
43	        pass
44	    with urlopen(request.GET['url'] + '/model_view/') as response:
45	        return HttpResponse('subview calling view: {}'.format(response.read().decode()))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'django_tests_secret_key'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/sessions_tests/tests.py:318:5
317	
318	    @override_settings(SECRET_KEY='django_tests_secret_key')
319	    def test_decode_legacy(self):

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/settings_tests/tests.py:292:5
291	
292	    @override_settings(SECRET_KEY='')
293	    def test_no_secret_key(self):

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/settings_tests/tests.py:394:8
393	        s = LazySettings()
394	        s.configure(SECRET_KEY='foo')
395	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/tests/settings_tests/tests.py:400:37
399	        settings_module = ModuleType('fake_settings_module')
400	        settings_module.SECRET_KEY = 'foo'
401	        sys.modules['fake_settings_module'] = settings_module

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/tests/settings_tests/tests.py:454:37
453	        settings_module = ModuleType('fake_settings_module')
454	        settings_module.SECRET_KEY = 'foo'
455	        for setting in self.list_or_tuple_settings:

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'BOTH'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/settings_tests/tests.py:526:17
525	        with self.assertRaises(SettingChangeEnterException):
526	            with override_settings(SETTING_PASS='BOTH', SETTING_BOTH='BOTH'):
527	                pass

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'ENTER'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/settings_tests/tests.py:536:17
535	        with self.assertRaises(SettingChangeEnterException):
536	            with override_settings(SETTING_PASS='ENTER', SETTING_ENTER='ENTER'):
537	                pass

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'EXIT'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/settings_tests/tests.py:546:17
545	        with self.assertRaises(SettingChangeExitException):
546	            with override_settings(SETTING_PASS='EXIT', SETTING_EXIT='EXIT'):
547	                pass

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/tests/staticfiles_tests/cases.py:89:8
88	    def _get_file(self, filepath):
89	        assert filepath, 'filepath is empty.'
90	        filepath = os.path.join(settings.STATIC_ROOT, filepath)

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: django-3.2.8/tests/staticfiles_tests/test_liveserver.py:81:15
80	    def urlopen(self, url):
81	        return urlopen(self.live_server_url + url)
82	

--------------------------------------------------
>> Issue: [B408:blacklist] Using minidom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace minidom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b408-import-xml-minidom
   Location: django-3.2.8/tests/syndication_tests/tests.py:2:0
1	import datetime
2	from xml.dom import minidom
3	

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/syndication_tests/tests.py:82:14
81	        response = self.client.get('/syndication/rss2/')
82	        doc = minidom.parseString(response.content)
83	

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/syndication_tests/tests.py:169:14
168	            '/syndication/rss2/guid_ispermalink_false/')
169	        doc = minidom.parseString(response.content)
170	        chan = doc.getElementsByTagName(

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/syndication_tests/tests.py:185:14
184	            '/syndication/rss2/guid_ispermalink_true/')
185	        doc = minidom.parseString(response.content)
186	        chan = doc.getElementsByTagName(

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/syndication_tests/tests.py:196:14
195	        response = self.client.get('/syndication/rss2/single-enclosure/')
196	        doc = minidom.parseString(response.content)
197	        chan = doc.getElementsByTagName('rss')[0].getElementsByTagName('channel')[0]

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/syndication_tests/tests.py:216:14
215	        response = self.client.get('/syndication/rss091/')
216	        doc = minidom.parseString(response.content)
217	

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/syndication_tests/tests.py:266:15
265	        response = self.client.get('/syndication/atom/')
266	        feed = minidom.parseString(response.content).firstChild
267	

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/syndication_tests/tests.py:301:15
300	        response = self.client.get('/syndication/atom/')
301	        feed = minidom.parseString(response.content).firstChild
302	        entries = feed.getElementsByTagName('entry')

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/syndication_tests/tests.py:311:15
310	        response = self.client.get('/syndication/atom/single-enclosure/')
311	        feed = minidom.parseString(response.content).firstChild
312	        items = feed.getElementsByTagName('entry')

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/syndication_tests/tests.py:320:15
319	        response = self.client.get('/syndication/atom/multiple-enclosure/')
320	        feed = minidom.parseString(response.content).firstChild
321	        items = feed.getElementsByTagName('entry')

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/syndication_tests/tests.py:334:15
333	        response = self.client.get('/syndication/atom/')
334	        feed = minidom.parseString(response.content).firstChild
335	        updated = feed.getElementsByTagName('updated')[0].firstChild.wholeText

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/syndication_tests/tests.py:344:15
343	        response = self.client.get('/syndication/latest/')
344	        feed = minidom.parseString(response.content).firstChild
345	        updated = feed.getElementsByTagName('updated')[0].firstChild.wholeText

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/syndication_tests/tests.py:354:15
353	        response = self.client.get('/syndication/custom/')
354	        feed = minidom.parseString(response.content).firstChild
355	

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/syndication_tests/tests.py:384:15
383	        response = self.client.get('/syndication/language/')
384	        feed = minidom.parseString(response.content).firstChild
385	        self.assertEqual(feed.firstChild.getElementsByTagName('language')[0].firstChild.nodeValue, 'de')

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/syndication_tests/tests.py:392:14
391	        response = self.client.get('/syndication/rss2/')
392	        doc = minidom.parseString(response.content)
393	        for item in doc.getElementsByTagName('item'):

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/syndication_tests/tests.py:406:14
405	        response = self.client.get('/syndication/naive-dates/')
406	        doc = minidom.parseString(response.content)
407	        updated = doc.getElementsByTagName('updated')[0].firstChild.wholeText

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/syndication_tests/tests.py:419:14
418	        response = self.client.get('/syndication/aware-dates/')
419	        doc = minidom.parseString(response.content)
420	        published = doc.getElementsByTagName('published')[0].firstChild.wholeText

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/syndication_tests/tests.py:447:14
446	        response = self.client.get('/syndication/feedurl/')
447	        doc = minidom.parseString(response.content)
448	        for link in doc.getElementsByTagName('link'):

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/syndication_tests/tests.py:459:14
458	        })
459	        doc = minidom.parseString(response.content)
460	        chan = doc.getElementsByTagName('channel')[0]

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/syndication_tests/tests.py:488:14
487	        response = self.client.get('/syndication/template/')
488	        doc = minidom.parseString(response.content)
489	        feed = doc.getElementsByTagName('rss')[0]

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/syndication_tests/tests.py:505:14
504	        response = self.client.get('/syndication/template_context/')
505	        doc = minidom.parseString(response.content)
506	        feed = doc.getElementsByTagName('rss')[0]

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/syndication_tests/tests.py:533:14
532	        response = self.client.get('/syndication/rss2/articles/%s/' % self.e1.pk)
533	        doc = minidom.parseString(response.content)
534	        feed = doc.getElementsByTagName('rss')[0]

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_addslashes.py:12:81
11	    def test_addslashes01(self):
12	        output = self.engine.render_to_string('addslashes01', {"a": "<a>'", "b": mark_safe("<a>'")})
13	        self.assertEqual(output, r"<a>\' <a>\'")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_addslashes.py:17:81
16	    def test_addslashes02(self):
17	        output = self.engine.render_to_string('addslashes02', {"a": "<a>'", "b": mark_safe("<a>'")})
18	        self.assertEqual(output, r"&lt;a&gt;\&#x27; <a>\'")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_capfirst.py:12:80
11	    def test_capfirst01(self):
12	        output = self.engine.render_to_string('capfirst01', {'a': 'fred>', 'b': mark_safe('fred&gt;')})
13	        self.assertEqual(output, 'Fred> Fred&gt;')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_capfirst.py:17:80
16	    def test_capfirst02(self):
17	        output = self.engine.render_to_string('capfirst02', {'a': 'fred>', 'b': mark_safe('fred&gt;')})
18	        self.assertEqual(output, 'Fred&gt; Fred&gt;')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_center.py:12:76
11	    def test_center01(self):
12	        output = self.engine.render_to_string('center01', {"a": "a&b", "b": mark_safe("a&b")})
13	        self.assertEqual(output, ". a&b . . a&b .")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_center.py:17:76
16	    def test_center02(self):
17	        output = self.engine.render_to_string('center02', {"a": "a&b", "b": mark_safe("a&b")})
18	        self.assertEqual(output, ". a&amp;b . . a&b .")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_chaining.py:14:80
13	    def test_chaining01(self):
14	        output = self.engine.render_to_string('chaining01', {'a': 'a < b', 'b': mark_safe('a < b')})
15	        self.assertEqual(output, ' A &lt; b . A < b ')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_chaining.py:22:80
21	    def test_chaining02(self):
22	        output = self.engine.render_to_string('chaining02', {'a': 'a < b', 'b': mark_safe('a < b')})
23	        self.assertEqual(output, ' A < b . A < b ')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_chaining.py:28:80
27	    def test_chaining03(self):
28	        output = self.engine.render_to_string('chaining03', {'a': 'a < b', 'b': mark_safe('a < b')})
29	        self.assertEqual(output, 'A &lt; .A < ')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_chaining.py:35:80
34	    def test_chaining04(self):
35	        output = self.engine.render_to_string('chaining04', {'a': 'a < b', 'b': mark_safe('a < b')})
36	        self.assertEqual(output, 'A < .A < ')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_cut.py:12:73
11	    def test_cut01(self):
12	        output = self.engine.render_to_string('cut01', {"a": "x&y", "b": mark_safe("x&amp;y")})
13	        self.assertEqual(output, "&y &amp;y")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_cut.py:17:73
16	    def test_cut02(self):
17	        output = self.engine.render_to_string('cut02', {"a": "x&y", "b": mark_safe("x&amp;y")})
18	        self.assertEqual(output, "&amp;y &amp;y")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_cut.py:22:73
21	    def test_cut03(self):
22	        output = self.engine.render_to_string('cut03', {"a": "x&y", "b": mark_safe("x&amp;y")})
23	        self.assertEqual(output, "xy xamp;y")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_cut.py:27:73
26	    def test_cut04(self):
27	        output = self.engine.render_to_string('cut04', {"a": "x&y", "b": mark_safe("x&amp;y")})
28	        self.assertEqual(output, "xy xamp;y")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_cut.py:34:73
33	    def test_cut05(self):
34	        output = self.engine.render_to_string('cut05', {"a": "x&y", "b": mark_safe("x&amp;y")})
35	        self.assertEqual(output, "x&y x&ampy")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_cut.py:39:73
38	    def test_cut06(self):
39	        output = self.engine.render_to_string('cut06', {"a": "x&y", "b": mark_safe("x&amp;y")})
40	        self.assertEqual(output, "x&amp;y x&amp;ampy")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_default.py:29:65
28	    def test_default03(self):
29	        output = self.engine.render_to_string('default03', {"a": mark_safe("x>")})
30	        self.assertEqual(output, "x>")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_default.py:34:65
33	    def test_default04(self):
34	        output = self.engine.render_to_string('default04', {"a": mark_safe("x>")})
35	        self.assertEqual(output, "x>")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_escape.py:17:76
16	    def test_escape01(self):
17	        output = self.engine.render_to_string('escape01', {"a": "x&y", "b": mark_safe("x&y")})
18	        self.assertEqual(output, "x&amp;y x&y")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_escape.py:22:76
21	    def test_escape02(self):
22	        output = self.engine.render_to_string('escape02', {"a": "x&y", "b": mark_safe("x&y")})
23	        self.assertEqual(output, "x&amp;y x&y")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_first.py:12:83
11	    def test_first01(self):
12	        output = self.engine.render_to_string('first01', {"a": ["a&b", "x"], "b": [mark_safe("a&b"), "x"]})
13	        self.assertEqual(output, "a&amp;b a&b")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_first.py:17:83
16	    def test_first02(self):
17	        output = self.engine.render_to_string('first02', {"a": ["a&b", "x"], "b": [mark_safe("a&b"), "x"]})
18	        self.assertEqual(output, "a&b a&b")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_floatformat.py:16:82
15	    def test_floatformat01(self):
16	        output = self.engine.render_to_string('floatformat01', {"a": "1.42", "b": mark_safe("1.42")})
17	        self.assertEqual(output, "1.4 1.4")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_floatformat.py:21:82
20	    def test_floatformat02(self):
21	        output = self.engine.render_to_string('floatformat02', {"a": "1.42", "b": mark_safe("1.42")})
22	        self.assertEqual(output, "1.4 1.4")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_iriencode.py:25:69
24	    def test_iriencode03(self):
25	        output = self.engine.render_to_string('iriencode03', {'url': mark_safe('?test=1&me=2')})
26	        self.assertEqual(output, '?test=1&me=2')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_iriencode.py:30:69
29	    def test_iriencode04(self):
30	        output = self.engine.render_to_string('iriencode04', {'url': mark_safe('?test=1&me=2')})
31	        self.assertEqual(output, '?test=1&me=2')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_join.py:38:93
37	    def test_join06(self):
38	        output = self.engine.render_to_string('join06', {'a': ['alpha', 'beta & me'], 'var': mark_safe(' & ')})
39	        self.assertEqual(output, 'alpha & beta &amp; me')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_join.py:48:93
47	    def test_join08(self):
48	        output = self.engine.render_to_string('join08', {'a': ['Alpha', 'Beta & me'], 'var': mark_safe(' & ')})
49	        self.assertEqual(output, 'alpha & beta &amp; me')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_last.py:11:87
10	    def test_last01(self):
11	        output = self.engine.render_to_string('last01', {"a": ["x", "a&b"], "b": ["x", mark_safe("a&b")]})
12	        self.assertEqual(output, "a&amp;b a&b")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_last.py:16:87
15	    def test_last02(self):
16	        output = self.engine.render_to_string('last02', {"a": ["x", "a&b"], "b": ["x", mark_safe("a&b")]})
17	        self.assertEqual(output, "a&b a&b")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_length.py:32:69
31	    def test_length05(self):
32	        output = self.engine.render_to_string('length05', {'string': mark_safe('django')})
33	        self.assertEqual(output, 'Pass')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_length.py:53:32
52	    def test_safestring(self):
53	        self.assertEqual(length(mark_safe('1234')), 4)
54	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_linebreaks.py:17:82
16	    def test_linebreaks01(self):
17	        output = self.engine.render_to_string('linebreaks01', {"a": "x&\ny", "b": mark_safe("x&\ny")})
18	        self.assertEqual(output, "<p>x&amp;<br>y</p> <p>x&<br>y</p>")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_linebreaks.py:22:82
21	    def test_linebreaks02(self):
22	        output = self.engine.render_to_string('linebreaks02', {"a": "x&\ny", "b": mark_safe("x&\ny")})
23	        self.assertEqual(output, "<p>x&<br>y</p> <p>x&<br>y</p>")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_linebreaksbr.py:16:84
15	    def test_linebreaksbr01(self):
16	        output = self.engine.render_to_string('linebreaksbr01', {"a": "x&\ny", "b": mark_safe("x&\ny")})
17	        self.assertEqual(output, "x&amp;<br>y x&<br>y")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_linebreaksbr.py:21:84
20	    def test_linebreaksbr02(self):
21	        output = self.engine.render_to_string('linebreaksbr02', {"a": "x&\ny", "b": mark_safe("x&\ny")})
22	        self.assertEqual(output, "x&<br>y x&<br>y")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_linenumbers.py:18:44
17	            'linenumbers01',
18	            {'a': 'one\n<two>\nthree', 'b': mark_safe('one\n&lt;two&gt;\nthree')},
19	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_linenumbers.py:26:44
25	            'linenumbers02',
26	            {'a': 'one\n<two>\nthree', 'b': mark_safe('one\n&lt;two&gt;\nthree')},
27	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_ljust.py:12:75
11	    def test_ljust01(self):
12	        output = self.engine.render_to_string('ljust01', {"a": "a&b", "b": mark_safe("a&b")})
13	        self.assertEqual(output, ".a&b  . .a&b  .")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_ljust.py:17:75
16	    def test_ljust02(self):
17	        output = self.engine.render_to_string('ljust02', {"a": "a&b", "b": mark_safe("a&b")})
18	        self.assertEqual(output, ".a&amp;b  . .a&b  .")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_lower.py:12:86
11	    def test_lower01(self):
12	        output = self.engine.render_to_string('lower01', {"a": "Apple & banana", "b": mark_safe("Apple &amp; banana")})
13	        self.assertEqual(output, "apple & banana apple &amp; banana")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_lower.py:17:86
16	    def test_lower02(self):
17	        output = self.engine.render_to_string('lower02', {"a": "Apple & banana", "b": mark_safe("Apple &amp; banana")})
18	        self.assertEqual(output, "apple &amp; banana apple &amp; banana")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_make_list.py:16:67
15	    def test_make_list01(self):
16	        output = self.engine.render_to_string('make_list01', {"a": mark_safe("&")})
17	        self.assertEqual(output, "['&']")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_make_list.py:21:67
20	    def test_make_list02(self):
21	        output = self.engine.render_to_string('make_list02', {"a": mark_safe("&")})
22	        self.assertEqual(output, '[&#x27;&amp;&#x27;]')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_make_list.py:26:67
25	    def test_make_list03(self):
26	        output = self.engine.render_to_string('make_list03', {"a": mark_safe("&")})
27	        self.assertEqual(output, "['&']")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_make_list.py:31:67
30	    def test_make_list04(self):
31	        output = self.engine.render_to_string('make_list04', {"a": mark_safe("&")})
32	        self.assertEqual(output, "['&']")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_phone2numeric.py:14:42
13	            'phone2numeric01',
14	            {'a': '<1-800-call-me>', 'b': mark_safe('<1-800-call-me>')},
15	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_phone2numeric.py:22:42
21	            'phone2numeric02',
22	            {'a': '<1-800-call-me>', 'b': mark_safe('<1-800-call-me>')},
23	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_random.py:12:52
11	        output = self.engine.render_to_string(
12	            'random01', {'a': ['a&b', 'a&b'], 'b': [mark_safe('a&b'), mark_safe('a&b')]}
13	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_random.py:12:70
11	        output = self.engine.render_to_string(
12	            'random01', {'a': ['a&b', 'a&b'], 'b': [mark_safe('a&b'), mark_safe('a&b')]}
13	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_random.py:19:52
18	        output = self.engine.render_to_string(
19	            'random02', {'a': ['a&b', 'a&b'], 'b': [mark_safe('a&b'), mark_safe('a&b')]}
20	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_random.py:19:70
18	        output = self.engine.render_to_string(
19	            'random02', {'a': ['a&b', 'a&b'], 'b': [mark_safe('a&b'), mark_safe('a&b')]}
20	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_rjust.py:12:75
11	    def test_rjust01(self):
12	        output = self.engine.render_to_string('rjust01', {"a": "a&b", "b": mark_safe("a&b")})
13	        self.assertEqual(output, ".  a&b. .  a&b.")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_rjust.py:17:75
16	    def test_rjust02(self):
17	        output = self.engine.render_to_string('rjust02', {"a": "a&b", "b": mark_safe("a&b")})
18	        self.assertEqual(output, ".  a&amp;b. .  a&b.")

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_slice.py:12:75
11	    def test_slice01(self):
12	        output = self.engine.render_to_string('slice01', {'a': 'a&b', 'b': mark_safe('a&b')})
13	        self.assertEqual(output, '&amp;b &b')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_slice.py:17:75
16	    def test_slice02(self):
17	        output = self.engine.render_to_string('slice02', {'a': 'a&b', 'b': mark_safe('a&b')})
18	        self.assertEqual(output, '&b &b')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_slugify.py:17:79
16	    def test_slugify01(self):
17	        output = self.engine.render_to_string('slugify01', {'a': 'a & b', 'b': mark_safe('a &amp; b')})
18	        self.assertEqual(output, 'a-b a-amp-b')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_slugify.py:22:79
21	    def test_slugify02(self):
22	        output = self.engine.render_to_string('slugify02', {'a': 'a & b', 'b': mark_safe('a &amp; b')})
23	        self.assertEqual(output, 'a-b a-amp-b')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_stringformat.py:19:82
18	    def test_stringformat01(self):
19	        output = self.engine.render_to_string('stringformat01', {'a': 'a<b', 'b': mark_safe('a<b')})
20	        self.assertEqual(output, '.  a<b. .  a<b.')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_stringformat.py:24:82
23	    def test_stringformat02(self):
24	        output = self.engine.render_to_string('stringformat02', {'a': 'a<b', 'b': mark_safe('a<b')})
25	        self.assertEqual(output, '.  a&lt;b. .  a<b.')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_striptags.py:17:21
16	                'a': '<a>x</a> <p><b>y</b></p>',
17	                'b': mark_safe('<a>x</a> <p><b>y</b></p>'),
18	            },

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_striptags.py:28:21
27	                'a': '<a>x</a> <p><b>y</b></p>',
28	                'b': mark_safe('<a>x</a> <p><b>y</b></p>'),
29	            },

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_truncatewords.py:15:59
14	        output = self.engine.render_to_string(
15	            'truncatewords01', {'a': 'alpha & bravo', 'b': mark_safe('alpha &amp; bravo')}
16	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_truncatewords.py:22:59
21	        output = self.engine.render_to_string(
22	            'truncatewords02', {'a': 'alpha & bravo', 'b': mark_safe('alpha &amp; bravo')}
23	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_unordered_list.py:23:80
22	    def test_unordered_list03(self):
23	        output = self.engine.render_to_string('unordered_list03', {'a': ['x>', [mark_safe('<y')]]})
24	        self.assertEqual(output, '\t<li>x&gt;\n\t<ul>\n\t\t<li><y</li>\n\t</ul>\n\t</li>')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_unordered_list.py:28:80
27	    def test_unordered_list04(self):
28	        output = self.engine.render_to_string('unordered_list04', {'a': ['x>', [mark_safe('<y')]]})
29	        self.assertEqual(output, '\t<li>x>\n\t<ul>\n\t\t<li><y</li>\n\t</ul>\n\t</li>')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_upper.py:16:77
15	    def test_upper01(self):
16	        output = self.engine.render_to_string('upper01', {'a': 'a & b', 'b': mark_safe('a &amp; b')})
17	        self.assertEqual(output, 'A & B A &AMP; B')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_upper.py:21:77
20	    def test_upper02(self):
21	        output = self.engine.render_to_string('upper02', {'a': 'a & b', 'b': mark_safe('a &amp; b')})
22	        self.assertEqual(output, 'A &amp; B A &amp;AMP; B')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_urlize.py:15:52
14	            'urlize01',
15	            {'a': 'http://example.com/?x=&y=', 'b': mark_safe('http://example.com?x=&amp;y=&lt;2&gt;')},
16	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_urlize.py:27:52
26	            'urlize02',
27	            {'a': "http://example.com/?x=&y=", 'b': mark_safe("http://example.com?x=&amp;y=")},
28	        )

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_urlize.py:37:64
36	    def test_urlize03(self):
37	        output = self.engine.render_to_string('urlize03', {'a': mark_safe("a &amp; b")})
38	        self.assertEqual(output, 'a &amp; b')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_urlize.py:42:64
41	    def test_urlize04(self):
42	        output = self.engine.render_to_string('urlize04', {'a': mark_safe("a &amp; b")})
43	        self.assertEqual(output, 'a &amp; b')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_urlizetrunc.py:18:21
17	                'a': '"Unsafe" http://example.com/x=&y=',
18	                'b': mark_safe('&quot;Safe&quot; http://example.com?x=&amp;y='),
19	            },

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_urlizetrunc.py:33:21
32	                'a': '"Unsafe" http://example.com/x=&y=',
33	                'b': mark_safe('&quot;Safe&quot; http://example.com?x=&amp;y='),
34	            },

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_wordcount.py:12:81
11	    def test_wordcount01(self):
12	        output = self.engine.render_to_string('wordcount01', {'a': 'a & b', 'b': mark_safe('a &amp; b')})
13	        self.assertEqual(output, '3 3')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_wordcount.py:17:81
16	    def test_wordcount02(self):
17	        output = self.engine.render_to_string('wordcount02', {'a': 'a & b', 'b': mark_safe('a &amp; b')})
18	        self.assertEqual(output, '3 3')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_wordwrap.py:15:80
14	    def test_wordwrap01(self):
15	        output = self.engine.render_to_string('wordwrap01', {'a': 'a & b', 'b': mark_safe('a & b')})
16	        self.assertEqual(output, 'a &\nb a &\nb')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/filter_tests/test_wordwrap.py:20:80
19	    def test_wordwrap02(self):
20	        output = self.engine.render_to_string('wordwrap02', {'a': 'a & b', 'b': mark_safe('a & b')})
21	        self.assertEqual(output, 'a &amp;\nb a &\nb')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/syntax_tests/i18n/test_blocktranslate.py:129:67
128	    def test_i18n21(self):
129	        output = self.engine.render_to_string('i18n21', {'andrew': mark_safe('a & b')})
130	        self.assertEqual(output, 'a & b')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/syntax_tests/i18n/test_translate.py:78:67
77	    def test_i18n22(self):
78	        output = self.engine.render_to_string('i18n22', {'andrew': mark_safe('a & b')})
79	        self.assertEqual(output, 'a & b')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/syntax_tests/test_autoescape.py:44:76
43	    def test_autoescape_tag06(self):
44	        output = self.engine.render_to_string('autoescape-tag06', {'first': mark_safe('<b>first</b>')})
45	        self.assertEqual(output, '<b>first</b>')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/syntax_tests/test_autoescape.py:49:76
48	    def test_autoescape_tag07(self):
49	        output = self.engine.render_to_string('autoescape-tag07', {'first': mark_safe('<b>Apple</b>')})
50	        self.assertEqual(output, '<b>Apple</b>')

--------------------------------------------------
>> Issue: [B103:set_bad_file_permissions] Chmod setting a permissive mask 0o222 on file (tmppath).
   Severity: High   Confidence: High
   CWE: CWE-732 (https://cwe.mitre.org/data/definitions/732.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b103_set_bad_file_permissions.html
   Location: django-3.2.8/tests/template_tests/test_loaders.py:196:12
195	            tmppath = os.path.join(tmpdir, tmpfile.name)
196	            os.chmod(tmppath, 0o0222)
197	            with self.set_dirs([tmpdir]):

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle
   Location: django-3.2.8/tests/template_tests/test_response.py:1:0
1	import pickle
2	import time
3	from datetime import datetime

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/template_tests/test_response.py:175:29
174	        pickled_response = pickle.dumps(response)
175	        unpickled_response = pickle.loads(pickled_response)
176	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/template_tests/test_response.py:202:29
201	        pickled_response = pickle.dumps(response)
202	        unpickled_response = pickle.loads(pickled_response)
203	        pickle.dumps(unpickled_response)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/template_tests/test_response.py:215:29
214	        pickled_response = pickle.dumps(response, pickle.HIGHEST_PROTOCOL)
215	        unpickled_response = pickle.loads(pickled_response)
216	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/template_tests/test_response.py:295:29
294	        pickled_response = pickle.dumps(response)
295	        unpickled_response = pickle.loads(pickled_response)
296	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/template_tests/test_response.py:327:29
326	        pickled_response = pickle.dumps(response)
327	        unpickled_response = pickle.loads(pickled_response)
328	        pickle.dumps(unpickled_response)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/template_tests/utils.py:180:15
179	    def __str__(self):
180	        return mark_safe('you &gt; me')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/test_client/tests.py:43:17
42	    def setUpTestData(cls):
43	        cls.u1 = User.objects.create_user(username='testclient', password='password')
44	        cls.u2 = User.objects.create_user(username='inactive', password='password', is_active=False)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/test_client/tests.py:44:17
43	        cls.u1 = User.objects.create_user(username='testclient', password='password')
44	        cls.u2 = User.objects.create_user(username='inactive', password='password', is_active=False)
45	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/test_client/tests.py:470:16
469	        # Log in
470	        login = self.client.login(username='testclient', password='password')
471	        self.assertTrue(login, 'Could not log in')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/test_client/tests.py:507:16
506	        # Log in
507	        login = self.client.login(username='testclient', password='password')
508	        self.assertTrue(login, 'Could not log in')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/test_client/tests.py:537:16
536	        # Log in
537	        login = self.client.login(username='testclient', password='password')
538	        self.assertTrue(login, 'Could not log in')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'nopassword'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/test_client/tests.py:565:16
564	
565	        login = self.client.login(username='otheruser', password='nopassword')
566	        self.assertFalse(login)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/test_client/tests.py:602:8
601	        # Log in
602	        self.client.login(username='testclient', password='password')
603	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/test_client/tests.py:697:16
696	        # Log in
697	        login = self.client.login(username='testclient', password='password')
698	        self.assertTrue(login, 'Could not log in')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/test_client/tests.py:714:16
713	        # Log in
714	        login = self.client.login(username='testclient', password='password')
715	        self.assertTrue(login, 'Could not log in')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/test_client/tests.py:729:16
728	        # Log in
729	        login = self.client.login(username='testclient', password='password')
730	        self.assertTrue(login, 'Could not log in')

--------------------------------------------------
>> Issue: [B408:blacklist] Using parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace parseString with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b408-import-xml-minidom
   Location: django-3.2.8/tests/test_client/views.py:3:0
2	from urllib.parse import urlencode
3	from xml.dom.minidom import parseString
4	

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/test_client/views.py:113:15
112	    if request.method == 'POST':
113	        root = parseString(request.body)
114	        first_book = root.firstChild.firstChild

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/test_client_regress/tests.py:30:17
29	    def setUpTestData(cls):
30	        cls.u1 = User.objects.create_user(username='testclient', password='password')
31	        cls.staff = User.objects.create_user(username='staff', password='password', is_staff=True)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/test_client_regress/tests.py:31:20
30	        cls.u1 = User.objects.create_user(username='testclient', password='password')
31	        cls.staff = User.objects.create_user(username='staff', password='password', is_staff=True)
32	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/test_client_regress/tests.py:785:16
784	        c = Client()
785	        login = c.login(username='testclient', password='password')
786	        self.assertTrue(login, 'Could not log in')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/test_client_regress/tests.py:804:16
803	        "A session engine that modifies the session key can be used to log in"
804	        login = self.client.login(username='testclient', password='password')
805	        self.assertTrue(login, 'Could not log in')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/test_client_regress/tests.py:847:16
846	
847	        login = self.client.login(username='testclient', password='password')
848	        self.assertTrue(login, 'Could not log in')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/test_client_regress/tests.py:855:16
854	        # This next operation should be successful; if it isn't we have a problem.
855	        login = self.client.login(username='staff', password='password')
856	        self.assertTrue(login, 'Could not log in')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/test_client_regress/tests.py:992:16
991	        # Log in
992	        login = self.client.login(username='testclient', password='password')
993	        self.assertTrue(login, 'Could not log in')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/test_client_regress/tests.py:1011:16
1010	        self.client.logout()
1011	        login = self.client.login(username='testclient', password='password')
1012	        self.assertTrue(login, 'Could not log in')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/test_client_regress/tests.py:1024:8
1023	        user_logged_out.connect(listener)
1024	        self.client.login(username='testclient', password='password')
1025	        self.client.logout()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/test_client_regress/tests.py:1041:8
1040	        user_logged_out.connect(listener)
1041	        self.client.login(username='test@test.com', password='password')
1042	        self.client.logout()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/test_client_regress/tests.py:1060:8
1059	        user_logged_out.connect(listener)
1060	        self.client.login(username='test@test.com', password='password')
1061	        self.client.logout()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/test_client_regress/tests.py:1073:8
1072	        user_logged_out.connect(listener)
1073	        self.client.login(username='incorrect', password='password')
1074	        self.client.logout()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/test_client_regress/tests.py:1087:8
1086	        user_logged_in.connect(listener)
1087	        self.client.login(username='testclient', password='password')
1088	        user_logged_out.disconnect(listener)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/test_client_regress/tests.py:1099:8
1098	        user_logged_in.connect(listener)
1099	        self.client.login(username='incorrect', password='password')
1100	        user_logged_in.disconnect(listener)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'django_tests_secret_key'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html
   Location: django-3.2.8/tests/test_sqlite.py:24:13
23	
24	SECRET_KEY = "django_tests_secret_key"
25	

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html
   Location: django-3.2.8/tests/test_utils/tests.py:1271:39
1270	        """
1271	        with self.settings(STATIC_ROOT='/tmp/test'):
1272	            self.assertEqual(staticfiles_storage.location, os.path.abspath('/tmp/test'))

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html
   Location: django-3.2.8/tests/test_utils/tests.py:1272:75
1271	        with self.settings(STATIC_ROOT='/tmp/test'):
1272	            self.assertEqual(staticfiles_storage.location, os.path.abspath('/tmp/test'))
1273	

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html
   Location: django-3.2.8/tests/test_utils/tests.py:1302:20
1301	        finder = get_finder('django.contrib.staticfiles.finders.FileSystemFinder')
1302	        test_path = '/tmp/test'
1303	        expected_location = ('', test_path)

--------------------------------------------------
>> Issue: [B408:blacklist] Using parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace parseString with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b408-import-xml-minidom
   Location: django-3.2.8/tests/timezones/tests.py:6:0
5	from unittest import SkipTest, skipIf
6	from xml.dom.minidom import parseString
7	

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: django-3.2.8/tests/timezones/tests.py:646:16
645	    def assert_xml_contains_datetime(self, xml, dt):
646	        field = parseString(xml).getElementsByTagName('field')[0]
647	        self.assertXMLEqual(field.childNodes[0].wholeText, dt)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/timezones/tests.py:1181:17
1180	    def setUpTestData(cls):
1181	        cls.u1 = User.objects.create_user(
1182	            password='secret',
1183	            last_login=datetime.datetime(2007, 5, 30, 13, 20, 10, tzinfo=UTC),
1184	            is_superuser=True, username='super', first_name='Super', last_name='User',
1185	            email='super@example.com', is_staff=True, is_active=True,
1186	            date_joined=datetime.datetime(2007, 5, 30, 13, 20, 10, tzinfo=UTC),
1187	        )
1188	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'testpw'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/urlpatterns_reverse/tests.py:521:17
520	    def test_user_permission_with_lazy_reverse(self):
521	        alfred = User.objects.create_user('alfred', 'alfred@example.com', password='testpw')
522	        response = self.client.get('/login_required_view/')

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html
   Location: django-3.2.8/tests/utils_tests/test_archive.py:57:39
56	            ('traversal.tar', '..'),
57	            ('traversal_absolute.tar', '/tmp/evil.py'),
58	        ]

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: django-3.2.8/tests/utils_tests/test_autoreload.py:14:0
13	from pathlib import Path
14	from subprocess import CompletedProcess
15	from unittest import mock, skip, skipIf

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b324_hashlib.html
   Location: django-3.2.8/tests/utils_tests/test_crypto.py:32:33
31	                ('salt', 'value'),
32	                {'secret': 'x' * hashlib.sha1().block_size},
33	                'bd3749347b412b1b0a9ea65220e55767ac8e96b0',

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle
   Location: django-3.2.8/tests/utils_tests/test_datastructures.py:6:0
5	import copy
6	import pickle
7	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/utils_tests/test_datastructures.py:122:28
121	        x = MultiValueDict({'a': ['1', '2'], 'b': ['3']})
122	        self.assertEqual(x, pickle.loads(pickle.dumps(x)))
123	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/utils_tests/test_html.py:50:16
49	                "< Dangerous >",
50	                mark_safe("<b>safe</b>"),
51	                third="< dangerous again",

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/utils_tests/test_html.py:52:23
51	                third="< dangerous again",
52	                fourth=mark_safe("<i>safe again</i>"),
53	            ),

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/utils_tests/test_html.py:200:44
199	        self.assertEqual(conditional_escape(s), '&lt;h1&gt;interop&lt;/h1&gt;')
200	        self.assertEqual(conditional_escape(mark_safe(s)), s)
201	        self.assertEqual(conditional_escape(lazystr(mark_safe(s))), s)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/utils_tests/test_html.py:201:52
200	        self.assertEqual(conditional_escape(mark_safe(s)), s)
201	        self.assertEqual(conditional_escape(lazystr(mark_safe(s))), s)
202	

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle
   Location: django-3.2.8/tests/utils_tests/test_lazyobject.py:2:0
1	import copy
2	import pickle
3	import sys

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/utils_tests/test_lazyobject.py:199:20
198	        pickled = pickle.dumps(obj)
199	        unpickled = pickle.loads(pickled)
200	        self.assertIsInstance(unpickled, Foo)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/utils_tests/test_lazyobject.py:438:28
437	                pickled = pickle.dumps(obj, protocol)
438	                unpickled = pickle.loads(pickled)
439	                self.assertEqual(unpickled, obj)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/utils_tests/test_lazyobject.py:455:33
454	            with warnings.catch_warnings(record=True) as recorded:
455	                self.assertEqual(pickle.loads(pickle.dumps(lazy_category, protocol)), category)
456	                self.assertEqual(pickle.loads(pickle.dumps(lazy_category_2, protocol)), category)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/utils_tests/test_lazyobject.py:456:33
455	                self.assertEqual(pickle.loads(pickle.dumps(lazy_category, protocol)), category)
456	                self.assertEqual(pickle.loads(pickle.dumps(lazy_category_2, protocol)), category)
457	                # Assert that there were no warnings.

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html
   Location: django-3.2.8/tests/utils_tests/test_os_utils.py:37:21
36	    def test_to_path(self):
37	        for path in ('/tmp/some_file.txt', Path('/tmp/some_file.txt')):
38	            with self.subTest(path):

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html
   Location: django-3.2.8/tests/utils_tests/test_os_utils.py:37:48
36	    def test_to_path(self):
37	        for path in ('/tmp/some_file.txt', Path('/tmp/some_file.txt')):
38	            with self.subTest(path):

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html
   Location: django-3.2.8/tests/utils_tests/test_os_utils.py:39:53
38	            with self.subTest(path):
39	                self.assertEqual(to_path(path), Path('/tmp/some_file.txt'))
40	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/utils_tests/test_safestring.py:22:12
21	    def test_mark_safe(self):
22	        s = mark_safe('a&b')
23	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/utils_tests/test_safestring.py:31:12
30	        """
31	        s = mark_safe('a&b')
32	        self.assertIsInstance(str(s), type(s))

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/tests/utils_tests/test_safestring.py:36:12
35	        e = customescape('<a&b>')
36	        s = mark_safe(e)
37	        self.assertIs(s, e)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/utils_tests/test_safestring.py:36:12
35	        e = customescape('<a&b>')
36	        s = mark_safe(e)
37	        self.assertIs(s, e)

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/tests/utils_tests/test_safestring.py:45:30
44	
45	        self.assertIsInstance(mark_safe(s), SafeData)
46	        self.assertRenderEqual('{{ s }}', 'a&b', s=mark_safe(s))

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/utils_tests/test_safestring.py:45:30
44	
45	        self.assertIsInstance(mark_safe(s), SafeData)
46	        self.assertRenderEqual('{{ s }}', 'a&b', s=mark_safe(s))

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/tests/utils_tests/test_safestring.py:46:51
45	        self.assertIsInstance(mark_safe(s), SafeData)
46	        self.assertRenderEqual('{{ s }}', 'a&b', s=mark_safe(s))
47	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/utils_tests/test_safestring.py:46:51
45	        self.assertIsInstance(mark_safe(s), SafeData)
46	        self.assertRenderEqual('{{ s }}', 'a&b', s=mark_safe(s))
47	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/tests/utils_tests/test_safestring.py:53:12
52	
53	        s = mark_safe(Obj())
54	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/utils_tests/test_safestring.py:53:12
52	
53	        s = mark_safe(Obj())
54	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/utils_tests/test_safestring.py:58:25
57	    def test_mark_safe_result_implements_dunder_html(self):
58	        self.assertEqual(mark_safe('a&b').__html__(), 'a&b')
59	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/tests/utils_tests/test_safestring.py:61:25
60	    def test_mark_safe_lazy_result_implements_dunder_html(self):
61	        self.assertEqual(mark_safe(lazystr('a&b')).__html__(), 'a&b')
62	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/utils_tests/test_safestring.py:61:25
60	    def test_mark_safe_lazy_result_implements_dunder_html(self):
61	        self.assertEqual(mark_safe(lazystr('a&b')).__html__(), 'a&b')
62	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/utils_tests/test_safestring.py:65:13
64	        s = html.escape(lazystr('a'))
65	        s += mark_safe('&b')
66	        self.assertRenderEqual('{{ s }}', 'a&b', s=s)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/utils_tests/test_safestring.py:69:13
68	        s = html.escapejs(lazystr('a'))
69	        s += mark_safe('&b')
70	        self.assertRenderEqual('{{ s }}', 'a&b', s=s)

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/tests/utils_tests/test_safestring.py:80:25
79	
80	        self.assertEqual(mark_safe(clean_string_provider)(), clean_string_provider())
81	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/utils_tests/test_safestring.py:80:25
79	
80	        self.assertEqual(mark_safe(clean_string_provider)(), clean_string_provider())
81	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/tests/utils_tests/test_safestring.py:90:22
89	
90	        self.assertIs(mark_safe(SafeStringContainer), SafeStringContainer)
91	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/utils_tests/test_safestring.py:90:22
89	
90	        self.assertIs(mark_safe(SafeStringContainer), SafeStringContainer)
91	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html
   Location: django-3.2.8/tests/utils_tests/test_safestring.py:100:25
99	        lazy_str = lazy(html_str, str)()
100	        self.assertEqual(mark_safe(lazy_str), html_str())

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/utils_tests/test_safestring.py:100:25
99	        lazy_str = lazy(html_str, str)()
100	        self.assertEqual(mark_safe(lazy_str), html_str())

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle
   Location: django-3.2.8/tests/utils_tests/test_simplelazyobject.py:1:0
1	import pickle
2	
3	from django.contrib.auth.models import User

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html
   Location: django-3.2.8/tests/validation/models.py:139:0
138	    assertion_error = exc
139	assert str(assertion_error) == (
140	    "Model validation.MultipleAutoFields can't have more than one "
141	    "auto-generated field."
142	)

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle
   Location: django-3.2.8/tests/validation/test_picklable.py:1:0
1	import pickle
2	from unittest import TestCase
3	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/validation/test_picklable.py:11:20
10	        original = ValidationError('a', code='something')
11	        unpickled = pickle.loads(pickle.dumps(original))
12	        self.assertIs(unpickled, unpickled.error_list[0])

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/validation/test_picklable.py:17:20
16	        original = ValidationError('a', code='something')
17	        unpickled = pickle.loads(pickle.dumps(ValidationError(original)))
18	        self.assertIs(unpickled, unpickled.error_list[0])

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/validation/test_picklable.py:23:20
22	        original = ValidationError(['a', 'b'])
23	        unpickled = pickle.loads(pickle.dumps(original))
24	        self.assertEqual(original.error_list[0].message, unpickled.error_list[0].message)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/validation/test_picklable.py:28:20
27	        original = ValidationError(['a', 'b'])
28	        unpickled = pickle.loads(pickle.dumps(ValidationError(original)))
29	        self.assertEqual(original.error_list[0].message, unpickled.error_list[0].message)

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/validation/test_picklable.py:33:20
32	        original = ValidationError([ValidationError('a'), ValidationError('b')])
33	        unpickled = pickle.loads(pickle.dumps(original))
34	        self.assertIs(unpickled.args[0][0], unpickled.error_list[0])

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle
   Location: django-3.2.8/tests/validation/test_picklable.py:40:20
39	        original = ValidationError(message_dict)
40	        unpickled = pickle.loads(pickle.dumps(original))
41	        self.assertEqual(unpickled.message_dict, message_dict)

--------------------------------------------------
>> Issue: [B104:hardcoded_bind_all_interfaces] Possible binding to all interfaces.
   Severity: Medium   Confidence: Medium
   CWE: CWE-605 (https://cwe.mitre.org/data/definitions/605.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b104_hardcoded_bind_all_interfaces.html
   Location: django-3.2.8/tests/validators/tests.py:130:28
129	    (validate_ipv4_address, '255.0.0.0', None),
130	    (validate_ipv4_address, '0.0.0.0', None),
131	

--------------------------------------------------
>> Issue: [B104:hardcoded_bind_all_interfaces] Possible binding to all interfaces.
   Severity: Medium   Confidence: Medium
   CWE: CWE-605 (https://cwe.mitre.org/data/definitions/605.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b104_hardcoded_bind_all_interfaces.html
   Location: django-3.2.8/tests/validators/tests.py:161:29
160	    (validate_ipv46_address, '255.0.0.0', None),
161	    (validate_ipv46_address, '0.0.0.0', None),
162	    (validate_ipv46_address, 'fe80::1', None),

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/view_tests/tests/test_debug.py:578:37
577	            try:
578	                raise AttributeError(mark_safe('<p>Top level</p>'))
579	            except AttributeError as explicit:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/view_tests/tests/test_debug.py:581:37
580	                try:
581	                    raise ValueError(mark_safe('<p>Second exception</p>')) from explicit
582	                except ValueError:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/view_tests/tests/test_debug.py:583:37
582	                except ValueError:
583	                    raise IndexError(mark_safe('<p>Final exception</p>'))
584	        except Exception:

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b102_exec_used.html
   Location: django-3.2.8/tests/view_tests/tests/test_debug.py:609:12
608	            code = compile(source, 'generated', 'exec')
609	            exec(code, namespace)
610	        except Exception:

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b102_exec_used.html
   Location: django-3.2.8/tests/view_tests/tests/test_debug.py:646:12
645	            code = compile(source, 'generated', 'exec')
646	            exec(code, namespace)
647	        except Exception:

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/view_tests/tests/test_debug.py:771:20
770	        try:
771	            local = mark_safe('<p>Local variable</p>')
772	            raise ValueError(local)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe
   Location: django-3.2.8/tests/view_tests/tests/test_debug.py:815:12
814	        try:
815	            mark_safe('abcdefghijkl<p>mnὀp</p>qrstuwxyz').encode('ascii')
816	        except Exception:

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'super_secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/view_tests/tests/test_debug.py:1486:18
1485	    def test_request_meta_filtering(self):
1486	        request = self.rf.get('/', HTTP_SECRET_HEADER='super_secret')
1487	        reporter_filter = SafeExceptionReporterFilter()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'super_secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/view_tests/tests/test_debug.py:1494:19
1493	    def test_exception_report_uses_meta_filtering(self):
1494	        response = self.client.get('/raises500/', HTTP_SECRET_HEADER='super_secret')
1495	        self.assertNotIn(b'super_secret', response.content)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'super_secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html
   Location: django-3.2.8/tests/view_tests/tests/test_debug.py:1496:19
1495	        self.assertNotIn(b'super_secret', response.content)
1496	        response = self.client.get(
1497	            '/raises500/',
1498	            HTTP_SECRET_HEADER='super_secret',
1499	            HTTP_ACCEPT='application/json',
1500	        )
1501	        self.assertNotIn(b'super_secret', response.content)

--------------------------------------------------